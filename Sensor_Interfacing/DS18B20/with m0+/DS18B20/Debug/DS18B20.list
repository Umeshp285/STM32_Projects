
DS18B20.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005f3c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000350  08006000  08006000  00016000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08006350  08006350  00016350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08006358  08006358  00016358  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0800635c  0800635c  0001635c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000001d8  20000000  08006360  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          0000010c  200001d8  08006538  000201d8  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  200002e4  08006538  000202e4  2**0
                  ALLOC
  9 .ARM.attributes 00000028  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000dbae  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000208a  00000000  00000000  0002ddae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000697a  00000000  00000000  0002fe38  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_aranges 00000978  00000000  00000000  000367b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000d28  00000000  00000000  00037130  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   00004ea2  00000000  00000000  00037e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00003914  00000000  00000000  0003ccfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      0000007c  00000000  00000000  0004060e  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00002614  00000000  00000000  0004068c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001d8 	.word	0x200001d8
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08005fe4 	.word	0x08005fe4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001dc 	.word	0x200001dc
 8000104:	08005fe4 	.word	0x08005fe4

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	1c10      	adds	r0, r2, #0
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	1c19      	adds	r1, r3, #0
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f95b 	bl	80016f8 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 f8b5 	bl	80015bc <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f94d 	bl	80016f8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f943 	bl	80016f8 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 f8d5 	bl	8001630 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 f8cb 	bl	8001630 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_uldivmod>:
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	d111      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004ac:	2a00      	cmp	r2, #0
 80004ae:	d10f      	bne.n	80004d0 <__aeabi_uldivmod+0x28>
 80004b0:	2900      	cmp	r1, #0
 80004b2:	d100      	bne.n	80004b6 <__aeabi_uldivmod+0xe>
 80004b4:	2800      	cmp	r0, #0
 80004b6:	d002      	beq.n	80004be <__aeabi_uldivmod+0x16>
 80004b8:	2100      	movs	r1, #0
 80004ba:	43c9      	mvns	r1, r1
 80004bc:	1c08      	adds	r0, r1, #0
 80004be:	b407      	push	{r0, r1, r2}
 80004c0:	4802      	ldr	r0, [pc, #8]	; (80004cc <__aeabi_uldivmod+0x24>)
 80004c2:	a102      	add	r1, pc, #8	; (adr r1, 80004cc <__aeabi_uldivmod+0x24>)
 80004c4:	1840      	adds	r0, r0, r1
 80004c6:	9002      	str	r0, [sp, #8]
 80004c8:	bd03      	pop	{r0, r1, pc}
 80004ca:	46c0      	nop			; (mov r8, r8)
 80004cc:	ffffff5d 	.word	0xffffff5d
 80004d0:	b403      	push	{r0, r1}
 80004d2:	4668      	mov	r0, sp
 80004d4:	b501      	push	{r0, lr}
 80004d6:	9802      	ldr	r0, [sp, #8]
 80004d8:	f000 f806 	bl	80004e8 <__udivmoddi4>
 80004dc:	9b01      	ldr	r3, [sp, #4]
 80004de:	469e      	mov	lr, r3
 80004e0:	b002      	add	sp, #8
 80004e2:	bc0c      	pop	{r2, r3}
 80004e4:	4770      	bx	lr
 80004e6:	46c0      	nop			; (mov r8, r8)

080004e8 <__udivmoddi4>:
 80004e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004ea:	4657      	mov	r7, sl
 80004ec:	464e      	mov	r6, r9
 80004ee:	4645      	mov	r5, r8
 80004f0:	46de      	mov	lr, fp
 80004f2:	b5e0      	push	{r5, r6, r7, lr}
 80004f4:	0004      	movs	r4, r0
 80004f6:	b083      	sub	sp, #12
 80004f8:	000d      	movs	r5, r1
 80004fa:	4692      	mov	sl, r2
 80004fc:	4699      	mov	r9, r3
 80004fe:	428b      	cmp	r3, r1
 8000500:	d82f      	bhi.n	8000562 <__udivmoddi4+0x7a>
 8000502:	d02c      	beq.n	800055e <__udivmoddi4+0x76>
 8000504:	4649      	mov	r1, r9
 8000506:	4650      	mov	r0, sl
 8000508:	f002 f82c 	bl	8002564 <__clzdi2>
 800050c:	0029      	movs	r1, r5
 800050e:	0006      	movs	r6, r0
 8000510:	0020      	movs	r0, r4
 8000512:	f002 f827 	bl	8002564 <__clzdi2>
 8000516:	1a33      	subs	r3, r6, r0
 8000518:	4698      	mov	r8, r3
 800051a:	3b20      	subs	r3, #32
 800051c:	469b      	mov	fp, r3
 800051e:	d500      	bpl.n	8000522 <__udivmoddi4+0x3a>
 8000520:	e074      	b.n	800060c <__udivmoddi4+0x124>
 8000522:	4653      	mov	r3, sl
 8000524:	465a      	mov	r2, fp
 8000526:	4093      	lsls	r3, r2
 8000528:	001f      	movs	r7, r3
 800052a:	4653      	mov	r3, sl
 800052c:	4642      	mov	r2, r8
 800052e:	4093      	lsls	r3, r2
 8000530:	001e      	movs	r6, r3
 8000532:	42af      	cmp	r7, r5
 8000534:	d829      	bhi.n	800058a <__udivmoddi4+0xa2>
 8000536:	d026      	beq.n	8000586 <__udivmoddi4+0x9e>
 8000538:	465b      	mov	r3, fp
 800053a:	1ba4      	subs	r4, r4, r6
 800053c:	41bd      	sbcs	r5, r7
 800053e:	2b00      	cmp	r3, #0
 8000540:	da00      	bge.n	8000544 <__udivmoddi4+0x5c>
 8000542:	e079      	b.n	8000638 <__udivmoddi4+0x150>
 8000544:	2200      	movs	r2, #0
 8000546:	2300      	movs	r3, #0
 8000548:	9200      	str	r2, [sp, #0]
 800054a:	9301      	str	r3, [sp, #4]
 800054c:	2301      	movs	r3, #1
 800054e:	465a      	mov	r2, fp
 8000550:	4093      	lsls	r3, r2
 8000552:	9301      	str	r3, [sp, #4]
 8000554:	2301      	movs	r3, #1
 8000556:	4642      	mov	r2, r8
 8000558:	4093      	lsls	r3, r2
 800055a:	9300      	str	r3, [sp, #0]
 800055c:	e019      	b.n	8000592 <__udivmoddi4+0xaa>
 800055e:	4282      	cmp	r2, r0
 8000560:	d9d0      	bls.n	8000504 <__udivmoddi4+0x1c>
 8000562:	2200      	movs	r2, #0
 8000564:	2300      	movs	r3, #0
 8000566:	9200      	str	r2, [sp, #0]
 8000568:	9301      	str	r3, [sp, #4]
 800056a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800056c:	2b00      	cmp	r3, #0
 800056e:	d001      	beq.n	8000574 <__udivmoddi4+0x8c>
 8000570:	601c      	str	r4, [r3, #0]
 8000572:	605d      	str	r5, [r3, #4]
 8000574:	9800      	ldr	r0, [sp, #0]
 8000576:	9901      	ldr	r1, [sp, #4]
 8000578:	b003      	add	sp, #12
 800057a:	bc3c      	pop	{r2, r3, r4, r5}
 800057c:	4690      	mov	r8, r2
 800057e:	4699      	mov	r9, r3
 8000580:	46a2      	mov	sl, r4
 8000582:	46ab      	mov	fp, r5
 8000584:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000586:	42a3      	cmp	r3, r4
 8000588:	d9d6      	bls.n	8000538 <__udivmoddi4+0x50>
 800058a:	2200      	movs	r2, #0
 800058c:	2300      	movs	r3, #0
 800058e:	9200      	str	r2, [sp, #0]
 8000590:	9301      	str	r3, [sp, #4]
 8000592:	4643      	mov	r3, r8
 8000594:	2b00      	cmp	r3, #0
 8000596:	d0e8      	beq.n	800056a <__udivmoddi4+0x82>
 8000598:	07fb      	lsls	r3, r7, #31
 800059a:	0872      	lsrs	r2, r6, #1
 800059c:	431a      	orrs	r2, r3
 800059e:	4646      	mov	r6, r8
 80005a0:	087b      	lsrs	r3, r7, #1
 80005a2:	e00e      	b.n	80005c2 <__udivmoddi4+0xda>
 80005a4:	42ab      	cmp	r3, r5
 80005a6:	d101      	bne.n	80005ac <__udivmoddi4+0xc4>
 80005a8:	42a2      	cmp	r2, r4
 80005aa:	d80c      	bhi.n	80005c6 <__udivmoddi4+0xde>
 80005ac:	1aa4      	subs	r4, r4, r2
 80005ae:	419d      	sbcs	r5, r3
 80005b0:	2001      	movs	r0, #1
 80005b2:	1924      	adds	r4, r4, r4
 80005b4:	416d      	adcs	r5, r5
 80005b6:	2100      	movs	r1, #0
 80005b8:	3e01      	subs	r6, #1
 80005ba:	1824      	adds	r4, r4, r0
 80005bc:	414d      	adcs	r5, r1
 80005be:	2e00      	cmp	r6, #0
 80005c0:	d006      	beq.n	80005d0 <__udivmoddi4+0xe8>
 80005c2:	42ab      	cmp	r3, r5
 80005c4:	d9ee      	bls.n	80005a4 <__udivmoddi4+0xbc>
 80005c6:	3e01      	subs	r6, #1
 80005c8:	1924      	adds	r4, r4, r4
 80005ca:	416d      	adcs	r5, r5
 80005cc:	2e00      	cmp	r6, #0
 80005ce:	d1f8      	bne.n	80005c2 <__udivmoddi4+0xda>
 80005d0:	465b      	mov	r3, fp
 80005d2:	9800      	ldr	r0, [sp, #0]
 80005d4:	9901      	ldr	r1, [sp, #4]
 80005d6:	1900      	adds	r0, r0, r4
 80005d8:	4169      	adcs	r1, r5
 80005da:	2b00      	cmp	r3, #0
 80005dc:	db22      	blt.n	8000624 <__udivmoddi4+0x13c>
 80005de:	002b      	movs	r3, r5
 80005e0:	465a      	mov	r2, fp
 80005e2:	40d3      	lsrs	r3, r2
 80005e4:	002a      	movs	r2, r5
 80005e6:	4644      	mov	r4, r8
 80005e8:	40e2      	lsrs	r2, r4
 80005ea:	001c      	movs	r4, r3
 80005ec:	465b      	mov	r3, fp
 80005ee:	0015      	movs	r5, r2
 80005f0:	2b00      	cmp	r3, #0
 80005f2:	db2c      	blt.n	800064e <__udivmoddi4+0x166>
 80005f4:	0026      	movs	r6, r4
 80005f6:	409e      	lsls	r6, r3
 80005f8:	0033      	movs	r3, r6
 80005fa:	0026      	movs	r6, r4
 80005fc:	4647      	mov	r7, r8
 80005fe:	40be      	lsls	r6, r7
 8000600:	0032      	movs	r2, r6
 8000602:	1a80      	subs	r0, r0, r2
 8000604:	4199      	sbcs	r1, r3
 8000606:	9000      	str	r0, [sp, #0]
 8000608:	9101      	str	r1, [sp, #4]
 800060a:	e7ae      	b.n	800056a <__udivmoddi4+0x82>
 800060c:	4642      	mov	r2, r8
 800060e:	2320      	movs	r3, #32
 8000610:	1a9b      	subs	r3, r3, r2
 8000612:	4652      	mov	r2, sl
 8000614:	40da      	lsrs	r2, r3
 8000616:	4641      	mov	r1, r8
 8000618:	0013      	movs	r3, r2
 800061a:	464a      	mov	r2, r9
 800061c:	408a      	lsls	r2, r1
 800061e:	0017      	movs	r7, r2
 8000620:	431f      	orrs	r7, r3
 8000622:	e782      	b.n	800052a <__udivmoddi4+0x42>
 8000624:	4642      	mov	r2, r8
 8000626:	2320      	movs	r3, #32
 8000628:	1a9b      	subs	r3, r3, r2
 800062a:	002a      	movs	r2, r5
 800062c:	4646      	mov	r6, r8
 800062e:	409a      	lsls	r2, r3
 8000630:	0023      	movs	r3, r4
 8000632:	40f3      	lsrs	r3, r6
 8000634:	4313      	orrs	r3, r2
 8000636:	e7d5      	b.n	80005e4 <__udivmoddi4+0xfc>
 8000638:	4642      	mov	r2, r8
 800063a:	2320      	movs	r3, #32
 800063c:	2100      	movs	r1, #0
 800063e:	1a9b      	subs	r3, r3, r2
 8000640:	2200      	movs	r2, #0
 8000642:	9100      	str	r1, [sp, #0]
 8000644:	9201      	str	r2, [sp, #4]
 8000646:	2201      	movs	r2, #1
 8000648:	40da      	lsrs	r2, r3
 800064a:	9201      	str	r2, [sp, #4]
 800064c:	e782      	b.n	8000554 <__udivmoddi4+0x6c>
 800064e:	4642      	mov	r2, r8
 8000650:	2320      	movs	r3, #32
 8000652:	0026      	movs	r6, r4
 8000654:	1a9b      	subs	r3, r3, r2
 8000656:	40de      	lsrs	r6, r3
 8000658:	002f      	movs	r7, r5
 800065a:	46b4      	mov	ip, r6
 800065c:	4097      	lsls	r7, r2
 800065e:	4666      	mov	r6, ip
 8000660:	003b      	movs	r3, r7
 8000662:	4333      	orrs	r3, r6
 8000664:	e7c9      	b.n	80005fa <__udivmoddi4+0x112>
 8000666:	46c0      	nop			; (mov r8, r8)

08000668 <__aeabi_fmul>:
 8000668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800066a:	4657      	mov	r7, sl
 800066c:	464e      	mov	r6, r9
 800066e:	4645      	mov	r5, r8
 8000670:	46de      	mov	lr, fp
 8000672:	b5e0      	push	{r5, r6, r7, lr}
 8000674:	0247      	lsls	r7, r0, #9
 8000676:	0046      	lsls	r6, r0, #1
 8000678:	4688      	mov	r8, r1
 800067a:	0a7f      	lsrs	r7, r7, #9
 800067c:	0e36      	lsrs	r6, r6, #24
 800067e:	0fc4      	lsrs	r4, r0, #31
 8000680:	2e00      	cmp	r6, #0
 8000682:	d047      	beq.n	8000714 <__aeabi_fmul+0xac>
 8000684:	2eff      	cmp	r6, #255	; 0xff
 8000686:	d024      	beq.n	80006d2 <__aeabi_fmul+0x6a>
 8000688:	00fb      	lsls	r3, r7, #3
 800068a:	2780      	movs	r7, #128	; 0x80
 800068c:	04ff      	lsls	r7, r7, #19
 800068e:	431f      	orrs	r7, r3
 8000690:	2300      	movs	r3, #0
 8000692:	4699      	mov	r9, r3
 8000694:	469a      	mov	sl, r3
 8000696:	3e7f      	subs	r6, #127	; 0x7f
 8000698:	4643      	mov	r3, r8
 800069a:	025d      	lsls	r5, r3, #9
 800069c:	0058      	lsls	r0, r3, #1
 800069e:	0fdb      	lsrs	r3, r3, #31
 80006a0:	0a6d      	lsrs	r5, r5, #9
 80006a2:	0e00      	lsrs	r0, r0, #24
 80006a4:	4698      	mov	r8, r3
 80006a6:	d043      	beq.n	8000730 <__aeabi_fmul+0xc8>
 80006a8:	28ff      	cmp	r0, #255	; 0xff
 80006aa:	d03b      	beq.n	8000724 <__aeabi_fmul+0xbc>
 80006ac:	00eb      	lsls	r3, r5, #3
 80006ae:	2580      	movs	r5, #128	; 0x80
 80006b0:	2200      	movs	r2, #0
 80006b2:	04ed      	lsls	r5, r5, #19
 80006b4:	431d      	orrs	r5, r3
 80006b6:	387f      	subs	r0, #127	; 0x7f
 80006b8:	1836      	adds	r6, r6, r0
 80006ba:	1c73      	adds	r3, r6, #1
 80006bc:	4641      	mov	r1, r8
 80006be:	469b      	mov	fp, r3
 80006c0:	464b      	mov	r3, r9
 80006c2:	4061      	eors	r1, r4
 80006c4:	4313      	orrs	r3, r2
 80006c6:	2b0f      	cmp	r3, #15
 80006c8:	d864      	bhi.n	8000794 <__aeabi_fmul+0x12c>
 80006ca:	4875      	ldr	r0, [pc, #468]	; (80008a0 <__aeabi_fmul+0x238>)
 80006cc:	009b      	lsls	r3, r3, #2
 80006ce:	58c3      	ldr	r3, [r0, r3]
 80006d0:	469f      	mov	pc, r3
 80006d2:	2f00      	cmp	r7, #0
 80006d4:	d142      	bne.n	800075c <__aeabi_fmul+0xf4>
 80006d6:	2308      	movs	r3, #8
 80006d8:	4699      	mov	r9, r3
 80006da:	3b06      	subs	r3, #6
 80006dc:	26ff      	movs	r6, #255	; 0xff
 80006de:	469a      	mov	sl, r3
 80006e0:	e7da      	b.n	8000698 <__aeabi_fmul+0x30>
 80006e2:	4641      	mov	r1, r8
 80006e4:	2a02      	cmp	r2, #2
 80006e6:	d028      	beq.n	800073a <__aeabi_fmul+0xd2>
 80006e8:	2a03      	cmp	r2, #3
 80006ea:	d100      	bne.n	80006ee <__aeabi_fmul+0x86>
 80006ec:	e0ce      	b.n	800088c <__aeabi_fmul+0x224>
 80006ee:	2a01      	cmp	r2, #1
 80006f0:	d000      	beq.n	80006f4 <__aeabi_fmul+0x8c>
 80006f2:	e0ac      	b.n	800084e <__aeabi_fmul+0x1e6>
 80006f4:	4011      	ands	r1, r2
 80006f6:	2000      	movs	r0, #0
 80006f8:	2200      	movs	r2, #0
 80006fa:	b2cc      	uxtb	r4, r1
 80006fc:	0240      	lsls	r0, r0, #9
 80006fe:	05d2      	lsls	r2, r2, #23
 8000700:	0a40      	lsrs	r0, r0, #9
 8000702:	07e4      	lsls	r4, r4, #31
 8000704:	4310      	orrs	r0, r2
 8000706:	4320      	orrs	r0, r4
 8000708:	bc3c      	pop	{r2, r3, r4, r5}
 800070a:	4690      	mov	r8, r2
 800070c:	4699      	mov	r9, r3
 800070e:	46a2      	mov	sl, r4
 8000710:	46ab      	mov	fp, r5
 8000712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000714:	2f00      	cmp	r7, #0
 8000716:	d115      	bne.n	8000744 <__aeabi_fmul+0xdc>
 8000718:	2304      	movs	r3, #4
 800071a:	4699      	mov	r9, r3
 800071c:	3b03      	subs	r3, #3
 800071e:	2600      	movs	r6, #0
 8000720:	469a      	mov	sl, r3
 8000722:	e7b9      	b.n	8000698 <__aeabi_fmul+0x30>
 8000724:	20ff      	movs	r0, #255	; 0xff
 8000726:	2202      	movs	r2, #2
 8000728:	2d00      	cmp	r5, #0
 800072a:	d0c5      	beq.n	80006b8 <__aeabi_fmul+0x50>
 800072c:	2203      	movs	r2, #3
 800072e:	e7c3      	b.n	80006b8 <__aeabi_fmul+0x50>
 8000730:	2d00      	cmp	r5, #0
 8000732:	d119      	bne.n	8000768 <__aeabi_fmul+0x100>
 8000734:	2000      	movs	r0, #0
 8000736:	2201      	movs	r2, #1
 8000738:	e7be      	b.n	80006b8 <__aeabi_fmul+0x50>
 800073a:	2401      	movs	r4, #1
 800073c:	22ff      	movs	r2, #255	; 0xff
 800073e:	400c      	ands	r4, r1
 8000740:	2000      	movs	r0, #0
 8000742:	e7db      	b.n	80006fc <__aeabi_fmul+0x94>
 8000744:	0038      	movs	r0, r7
 8000746:	f001 feef 	bl	8002528 <__clzsi2>
 800074a:	2676      	movs	r6, #118	; 0x76
 800074c:	1f43      	subs	r3, r0, #5
 800074e:	409f      	lsls	r7, r3
 8000750:	2300      	movs	r3, #0
 8000752:	4276      	negs	r6, r6
 8000754:	1a36      	subs	r6, r6, r0
 8000756:	4699      	mov	r9, r3
 8000758:	469a      	mov	sl, r3
 800075a:	e79d      	b.n	8000698 <__aeabi_fmul+0x30>
 800075c:	230c      	movs	r3, #12
 800075e:	4699      	mov	r9, r3
 8000760:	3b09      	subs	r3, #9
 8000762:	26ff      	movs	r6, #255	; 0xff
 8000764:	469a      	mov	sl, r3
 8000766:	e797      	b.n	8000698 <__aeabi_fmul+0x30>
 8000768:	0028      	movs	r0, r5
 800076a:	f001 fedd 	bl	8002528 <__clzsi2>
 800076e:	1f43      	subs	r3, r0, #5
 8000770:	409d      	lsls	r5, r3
 8000772:	2376      	movs	r3, #118	; 0x76
 8000774:	425b      	negs	r3, r3
 8000776:	1a18      	subs	r0, r3, r0
 8000778:	2200      	movs	r2, #0
 800077a:	e79d      	b.n	80006b8 <__aeabi_fmul+0x50>
 800077c:	2080      	movs	r0, #128	; 0x80
 800077e:	2400      	movs	r4, #0
 8000780:	03c0      	lsls	r0, r0, #15
 8000782:	22ff      	movs	r2, #255	; 0xff
 8000784:	e7ba      	b.n	80006fc <__aeabi_fmul+0x94>
 8000786:	003d      	movs	r5, r7
 8000788:	4652      	mov	r2, sl
 800078a:	e7ab      	b.n	80006e4 <__aeabi_fmul+0x7c>
 800078c:	003d      	movs	r5, r7
 800078e:	0021      	movs	r1, r4
 8000790:	4652      	mov	r2, sl
 8000792:	e7a7      	b.n	80006e4 <__aeabi_fmul+0x7c>
 8000794:	0c3b      	lsrs	r3, r7, #16
 8000796:	469c      	mov	ip, r3
 8000798:	042a      	lsls	r2, r5, #16
 800079a:	0c12      	lsrs	r2, r2, #16
 800079c:	0c2b      	lsrs	r3, r5, #16
 800079e:	0014      	movs	r4, r2
 80007a0:	4660      	mov	r0, ip
 80007a2:	4665      	mov	r5, ip
 80007a4:	043f      	lsls	r7, r7, #16
 80007a6:	0c3f      	lsrs	r7, r7, #16
 80007a8:	437c      	muls	r4, r7
 80007aa:	4342      	muls	r2, r0
 80007ac:	435d      	muls	r5, r3
 80007ae:	437b      	muls	r3, r7
 80007b0:	0c27      	lsrs	r7, r4, #16
 80007b2:	189b      	adds	r3, r3, r2
 80007b4:	18ff      	adds	r7, r7, r3
 80007b6:	42ba      	cmp	r2, r7
 80007b8:	d903      	bls.n	80007c2 <__aeabi_fmul+0x15a>
 80007ba:	2380      	movs	r3, #128	; 0x80
 80007bc:	025b      	lsls	r3, r3, #9
 80007be:	469c      	mov	ip, r3
 80007c0:	4465      	add	r5, ip
 80007c2:	0424      	lsls	r4, r4, #16
 80007c4:	043a      	lsls	r2, r7, #16
 80007c6:	0c24      	lsrs	r4, r4, #16
 80007c8:	1912      	adds	r2, r2, r4
 80007ca:	0193      	lsls	r3, r2, #6
 80007cc:	1e5c      	subs	r4, r3, #1
 80007ce:	41a3      	sbcs	r3, r4
 80007d0:	0c3f      	lsrs	r7, r7, #16
 80007d2:	0e92      	lsrs	r2, r2, #26
 80007d4:	197d      	adds	r5, r7, r5
 80007d6:	431a      	orrs	r2, r3
 80007d8:	01ad      	lsls	r5, r5, #6
 80007da:	4315      	orrs	r5, r2
 80007dc:	012b      	lsls	r3, r5, #4
 80007de:	d504      	bpl.n	80007ea <__aeabi_fmul+0x182>
 80007e0:	2301      	movs	r3, #1
 80007e2:	465e      	mov	r6, fp
 80007e4:	086a      	lsrs	r2, r5, #1
 80007e6:	401d      	ands	r5, r3
 80007e8:	4315      	orrs	r5, r2
 80007ea:	0032      	movs	r2, r6
 80007ec:	327f      	adds	r2, #127	; 0x7f
 80007ee:	2a00      	cmp	r2, #0
 80007f0:	dd25      	ble.n	800083e <__aeabi_fmul+0x1d6>
 80007f2:	076b      	lsls	r3, r5, #29
 80007f4:	d004      	beq.n	8000800 <__aeabi_fmul+0x198>
 80007f6:	230f      	movs	r3, #15
 80007f8:	402b      	ands	r3, r5
 80007fa:	2b04      	cmp	r3, #4
 80007fc:	d000      	beq.n	8000800 <__aeabi_fmul+0x198>
 80007fe:	3504      	adds	r5, #4
 8000800:	012b      	lsls	r3, r5, #4
 8000802:	d503      	bpl.n	800080c <__aeabi_fmul+0x1a4>
 8000804:	0032      	movs	r2, r6
 8000806:	4b27      	ldr	r3, [pc, #156]	; (80008a4 <__aeabi_fmul+0x23c>)
 8000808:	3280      	adds	r2, #128	; 0x80
 800080a:	401d      	ands	r5, r3
 800080c:	2afe      	cmp	r2, #254	; 0xfe
 800080e:	dc94      	bgt.n	800073a <__aeabi_fmul+0xd2>
 8000810:	2401      	movs	r4, #1
 8000812:	01a8      	lsls	r0, r5, #6
 8000814:	0a40      	lsrs	r0, r0, #9
 8000816:	b2d2      	uxtb	r2, r2
 8000818:	400c      	ands	r4, r1
 800081a:	e76f      	b.n	80006fc <__aeabi_fmul+0x94>
 800081c:	2080      	movs	r0, #128	; 0x80
 800081e:	03c0      	lsls	r0, r0, #15
 8000820:	4207      	tst	r7, r0
 8000822:	d007      	beq.n	8000834 <__aeabi_fmul+0x1cc>
 8000824:	4205      	tst	r5, r0
 8000826:	d105      	bne.n	8000834 <__aeabi_fmul+0x1cc>
 8000828:	4328      	orrs	r0, r5
 800082a:	0240      	lsls	r0, r0, #9
 800082c:	0a40      	lsrs	r0, r0, #9
 800082e:	4644      	mov	r4, r8
 8000830:	22ff      	movs	r2, #255	; 0xff
 8000832:	e763      	b.n	80006fc <__aeabi_fmul+0x94>
 8000834:	4338      	orrs	r0, r7
 8000836:	0240      	lsls	r0, r0, #9
 8000838:	0a40      	lsrs	r0, r0, #9
 800083a:	22ff      	movs	r2, #255	; 0xff
 800083c:	e75e      	b.n	80006fc <__aeabi_fmul+0x94>
 800083e:	2401      	movs	r4, #1
 8000840:	1aa3      	subs	r3, r4, r2
 8000842:	2b1b      	cmp	r3, #27
 8000844:	dd05      	ble.n	8000852 <__aeabi_fmul+0x1ea>
 8000846:	400c      	ands	r4, r1
 8000848:	2200      	movs	r2, #0
 800084a:	2000      	movs	r0, #0
 800084c:	e756      	b.n	80006fc <__aeabi_fmul+0x94>
 800084e:	465e      	mov	r6, fp
 8000850:	e7cb      	b.n	80007ea <__aeabi_fmul+0x182>
 8000852:	002a      	movs	r2, r5
 8000854:	2020      	movs	r0, #32
 8000856:	40da      	lsrs	r2, r3
 8000858:	1ac3      	subs	r3, r0, r3
 800085a:	409d      	lsls	r5, r3
 800085c:	002b      	movs	r3, r5
 800085e:	1e5d      	subs	r5, r3, #1
 8000860:	41ab      	sbcs	r3, r5
 8000862:	4313      	orrs	r3, r2
 8000864:	075a      	lsls	r2, r3, #29
 8000866:	d004      	beq.n	8000872 <__aeabi_fmul+0x20a>
 8000868:	220f      	movs	r2, #15
 800086a:	401a      	ands	r2, r3
 800086c:	2a04      	cmp	r2, #4
 800086e:	d000      	beq.n	8000872 <__aeabi_fmul+0x20a>
 8000870:	3304      	adds	r3, #4
 8000872:	015a      	lsls	r2, r3, #5
 8000874:	d504      	bpl.n	8000880 <__aeabi_fmul+0x218>
 8000876:	2401      	movs	r4, #1
 8000878:	2201      	movs	r2, #1
 800087a:	400c      	ands	r4, r1
 800087c:	2000      	movs	r0, #0
 800087e:	e73d      	b.n	80006fc <__aeabi_fmul+0x94>
 8000880:	2401      	movs	r4, #1
 8000882:	019b      	lsls	r3, r3, #6
 8000884:	0a58      	lsrs	r0, r3, #9
 8000886:	400c      	ands	r4, r1
 8000888:	2200      	movs	r2, #0
 800088a:	e737      	b.n	80006fc <__aeabi_fmul+0x94>
 800088c:	2080      	movs	r0, #128	; 0x80
 800088e:	2401      	movs	r4, #1
 8000890:	03c0      	lsls	r0, r0, #15
 8000892:	4328      	orrs	r0, r5
 8000894:	0240      	lsls	r0, r0, #9
 8000896:	0a40      	lsrs	r0, r0, #9
 8000898:	400c      	ands	r4, r1
 800089a:	22ff      	movs	r2, #255	; 0xff
 800089c:	e72e      	b.n	80006fc <__aeabi_fmul+0x94>
 800089e:	46c0      	nop			; (mov r8, r8)
 80008a0:	08006000 	.word	0x08006000
 80008a4:	f7ffffff 	.word	0xf7ffffff

080008a8 <__aeabi_ui2f>:
 80008a8:	b510      	push	{r4, lr}
 80008aa:	1e04      	subs	r4, r0, #0
 80008ac:	d027      	beq.n	80008fe <__aeabi_ui2f+0x56>
 80008ae:	f001 fe3b 	bl	8002528 <__clzsi2>
 80008b2:	239e      	movs	r3, #158	; 0x9e
 80008b4:	1a1b      	subs	r3, r3, r0
 80008b6:	2b96      	cmp	r3, #150	; 0x96
 80008b8:	dc0a      	bgt.n	80008d0 <__aeabi_ui2f+0x28>
 80008ba:	2296      	movs	r2, #150	; 0x96
 80008bc:	1ad2      	subs	r2, r2, r3
 80008be:	4094      	lsls	r4, r2
 80008c0:	0264      	lsls	r4, r4, #9
 80008c2:	0a64      	lsrs	r4, r4, #9
 80008c4:	b2db      	uxtb	r3, r3
 80008c6:	0264      	lsls	r4, r4, #9
 80008c8:	05db      	lsls	r3, r3, #23
 80008ca:	0a60      	lsrs	r0, r4, #9
 80008cc:	4318      	orrs	r0, r3
 80008ce:	bd10      	pop	{r4, pc}
 80008d0:	2b99      	cmp	r3, #153	; 0x99
 80008d2:	dc17      	bgt.n	8000904 <__aeabi_ui2f+0x5c>
 80008d4:	2299      	movs	r2, #153	; 0x99
 80008d6:	1ad2      	subs	r2, r2, r3
 80008d8:	2a00      	cmp	r2, #0
 80008da:	dd27      	ble.n	800092c <__aeabi_ui2f+0x84>
 80008dc:	4094      	lsls	r4, r2
 80008de:	0022      	movs	r2, r4
 80008e0:	4c13      	ldr	r4, [pc, #76]	; (8000930 <__aeabi_ui2f+0x88>)
 80008e2:	4014      	ands	r4, r2
 80008e4:	0751      	lsls	r1, r2, #29
 80008e6:	d004      	beq.n	80008f2 <__aeabi_ui2f+0x4a>
 80008e8:	210f      	movs	r1, #15
 80008ea:	400a      	ands	r2, r1
 80008ec:	2a04      	cmp	r2, #4
 80008ee:	d000      	beq.n	80008f2 <__aeabi_ui2f+0x4a>
 80008f0:	3404      	adds	r4, #4
 80008f2:	0162      	lsls	r2, r4, #5
 80008f4:	d412      	bmi.n	800091c <__aeabi_ui2f+0x74>
 80008f6:	01a4      	lsls	r4, r4, #6
 80008f8:	0a64      	lsrs	r4, r4, #9
 80008fa:	b2db      	uxtb	r3, r3
 80008fc:	e7e3      	b.n	80008c6 <__aeabi_ui2f+0x1e>
 80008fe:	2300      	movs	r3, #0
 8000900:	2400      	movs	r4, #0
 8000902:	e7e0      	b.n	80008c6 <__aeabi_ui2f+0x1e>
 8000904:	22b9      	movs	r2, #185	; 0xb9
 8000906:	0021      	movs	r1, r4
 8000908:	1ad2      	subs	r2, r2, r3
 800090a:	4091      	lsls	r1, r2
 800090c:	000a      	movs	r2, r1
 800090e:	1e51      	subs	r1, r2, #1
 8000910:	418a      	sbcs	r2, r1
 8000912:	2105      	movs	r1, #5
 8000914:	1a09      	subs	r1, r1, r0
 8000916:	40cc      	lsrs	r4, r1
 8000918:	4314      	orrs	r4, r2
 800091a:	e7db      	b.n	80008d4 <__aeabi_ui2f+0x2c>
 800091c:	4b04      	ldr	r3, [pc, #16]	; (8000930 <__aeabi_ui2f+0x88>)
 800091e:	401c      	ands	r4, r3
 8000920:	239f      	movs	r3, #159	; 0x9f
 8000922:	01a4      	lsls	r4, r4, #6
 8000924:	1a1b      	subs	r3, r3, r0
 8000926:	0a64      	lsrs	r4, r4, #9
 8000928:	b2db      	uxtb	r3, r3
 800092a:	e7cc      	b.n	80008c6 <__aeabi_ui2f+0x1e>
 800092c:	0022      	movs	r2, r4
 800092e:	e7d7      	b.n	80008e0 <__aeabi_ui2f+0x38>
 8000930:	fbffffff 	.word	0xfbffffff

08000934 <__aeabi_dadd>:
 8000934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000936:	4645      	mov	r5, r8
 8000938:	46de      	mov	lr, fp
 800093a:	4657      	mov	r7, sl
 800093c:	464e      	mov	r6, r9
 800093e:	030c      	lsls	r4, r1, #12
 8000940:	b5e0      	push	{r5, r6, r7, lr}
 8000942:	004e      	lsls	r6, r1, #1
 8000944:	0fc9      	lsrs	r1, r1, #31
 8000946:	4688      	mov	r8, r1
 8000948:	000d      	movs	r5, r1
 800094a:	0a61      	lsrs	r1, r4, #9
 800094c:	0f44      	lsrs	r4, r0, #29
 800094e:	430c      	orrs	r4, r1
 8000950:	00c7      	lsls	r7, r0, #3
 8000952:	0319      	lsls	r1, r3, #12
 8000954:	0058      	lsls	r0, r3, #1
 8000956:	0fdb      	lsrs	r3, r3, #31
 8000958:	469b      	mov	fp, r3
 800095a:	0a4b      	lsrs	r3, r1, #9
 800095c:	0f51      	lsrs	r1, r2, #29
 800095e:	430b      	orrs	r3, r1
 8000960:	0d76      	lsrs	r6, r6, #21
 8000962:	0d40      	lsrs	r0, r0, #21
 8000964:	0019      	movs	r1, r3
 8000966:	00d2      	lsls	r2, r2, #3
 8000968:	45d8      	cmp	r8, fp
 800096a:	d100      	bne.n	800096e <__aeabi_dadd+0x3a>
 800096c:	e0ae      	b.n	8000acc <__aeabi_dadd+0x198>
 800096e:	1a35      	subs	r5, r6, r0
 8000970:	2d00      	cmp	r5, #0
 8000972:	dc00      	bgt.n	8000976 <__aeabi_dadd+0x42>
 8000974:	e0f6      	b.n	8000b64 <__aeabi_dadd+0x230>
 8000976:	2800      	cmp	r0, #0
 8000978:	d10f      	bne.n	800099a <__aeabi_dadd+0x66>
 800097a:	4313      	orrs	r3, r2
 800097c:	d100      	bne.n	8000980 <__aeabi_dadd+0x4c>
 800097e:	e0db      	b.n	8000b38 <__aeabi_dadd+0x204>
 8000980:	1e6b      	subs	r3, r5, #1
 8000982:	2b00      	cmp	r3, #0
 8000984:	d000      	beq.n	8000988 <__aeabi_dadd+0x54>
 8000986:	e137      	b.n	8000bf8 <__aeabi_dadd+0x2c4>
 8000988:	1aba      	subs	r2, r7, r2
 800098a:	4297      	cmp	r7, r2
 800098c:	41bf      	sbcs	r7, r7
 800098e:	1a64      	subs	r4, r4, r1
 8000990:	427f      	negs	r7, r7
 8000992:	1be4      	subs	r4, r4, r7
 8000994:	2601      	movs	r6, #1
 8000996:	0017      	movs	r7, r2
 8000998:	e024      	b.n	80009e4 <__aeabi_dadd+0xb0>
 800099a:	4bc6      	ldr	r3, [pc, #792]	; (8000cb4 <__aeabi_dadd+0x380>)
 800099c:	429e      	cmp	r6, r3
 800099e:	d04d      	beq.n	8000a3c <__aeabi_dadd+0x108>
 80009a0:	2380      	movs	r3, #128	; 0x80
 80009a2:	041b      	lsls	r3, r3, #16
 80009a4:	4319      	orrs	r1, r3
 80009a6:	2d38      	cmp	r5, #56	; 0x38
 80009a8:	dd00      	ble.n	80009ac <__aeabi_dadd+0x78>
 80009aa:	e107      	b.n	8000bbc <__aeabi_dadd+0x288>
 80009ac:	2d1f      	cmp	r5, #31
 80009ae:	dd00      	ble.n	80009b2 <__aeabi_dadd+0x7e>
 80009b0:	e138      	b.n	8000c24 <__aeabi_dadd+0x2f0>
 80009b2:	2020      	movs	r0, #32
 80009b4:	1b43      	subs	r3, r0, r5
 80009b6:	469a      	mov	sl, r3
 80009b8:	000b      	movs	r3, r1
 80009ba:	4650      	mov	r0, sl
 80009bc:	4083      	lsls	r3, r0
 80009be:	4699      	mov	r9, r3
 80009c0:	0013      	movs	r3, r2
 80009c2:	4648      	mov	r0, r9
 80009c4:	40eb      	lsrs	r3, r5
 80009c6:	4318      	orrs	r0, r3
 80009c8:	0003      	movs	r3, r0
 80009ca:	4650      	mov	r0, sl
 80009cc:	4082      	lsls	r2, r0
 80009ce:	1e50      	subs	r0, r2, #1
 80009d0:	4182      	sbcs	r2, r0
 80009d2:	40e9      	lsrs	r1, r5
 80009d4:	431a      	orrs	r2, r3
 80009d6:	1aba      	subs	r2, r7, r2
 80009d8:	1a61      	subs	r1, r4, r1
 80009da:	4297      	cmp	r7, r2
 80009dc:	41a4      	sbcs	r4, r4
 80009de:	0017      	movs	r7, r2
 80009e0:	4264      	negs	r4, r4
 80009e2:	1b0c      	subs	r4, r1, r4
 80009e4:	0223      	lsls	r3, r4, #8
 80009e6:	d562      	bpl.n	8000aae <__aeabi_dadd+0x17a>
 80009e8:	0264      	lsls	r4, r4, #9
 80009ea:	0a65      	lsrs	r5, r4, #9
 80009ec:	2d00      	cmp	r5, #0
 80009ee:	d100      	bne.n	80009f2 <__aeabi_dadd+0xbe>
 80009f0:	e0df      	b.n	8000bb2 <__aeabi_dadd+0x27e>
 80009f2:	0028      	movs	r0, r5
 80009f4:	f001 fd98 	bl	8002528 <__clzsi2>
 80009f8:	0003      	movs	r3, r0
 80009fa:	3b08      	subs	r3, #8
 80009fc:	2b1f      	cmp	r3, #31
 80009fe:	dd00      	ble.n	8000a02 <__aeabi_dadd+0xce>
 8000a00:	e0d2      	b.n	8000ba8 <__aeabi_dadd+0x274>
 8000a02:	2220      	movs	r2, #32
 8000a04:	003c      	movs	r4, r7
 8000a06:	1ad2      	subs	r2, r2, r3
 8000a08:	409d      	lsls	r5, r3
 8000a0a:	40d4      	lsrs	r4, r2
 8000a0c:	409f      	lsls	r7, r3
 8000a0e:	4325      	orrs	r5, r4
 8000a10:	429e      	cmp	r6, r3
 8000a12:	dd00      	ble.n	8000a16 <__aeabi_dadd+0xe2>
 8000a14:	e0c4      	b.n	8000ba0 <__aeabi_dadd+0x26c>
 8000a16:	1b9e      	subs	r6, r3, r6
 8000a18:	1c73      	adds	r3, r6, #1
 8000a1a:	2b1f      	cmp	r3, #31
 8000a1c:	dd00      	ble.n	8000a20 <__aeabi_dadd+0xec>
 8000a1e:	e0f1      	b.n	8000c04 <__aeabi_dadd+0x2d0>
 8000a20:	2220      	movs	r2, #32
 8000a22:	0038      	movs	r0, r7
 8000a24:	0029      	movs	r1, r5
 8000a26:	1ad2      	subs	r2, r2, r3
 8000a28:	40d8      	lsrs	r0, r3
 8000a2a:	4091      	lsls	r1, r2
 8000a2c:	4097      	lsls	r7, r2
 8000a2e:	002c      	movs	r4, r5
 8000a30:	4301      	orrs	r1, r0
 8000a32:	1e78      	subs	r0, r7, #1
 8000a34:	4187      	sbcs	r7, r0
 8000a36:	40dc      	lsrs	r4, r3
 8000a38:	2600      	movs	r6, #0
 8000a3a:	430f      	orrs	r7, r1
 8000a3c:	077b      	lsls	r3, r7, #29
 8000a3e:	d009      	beq.n	8000a54 <__aeabi_dadd+0x120>
 8000a40:	230f      	movs	r3, #15
 8000a42:	403b      	ands	r3, r7
 8000a44:	2b04      	cmp	r3, #4
 8000a46:	d005      	beq.n	8000a54 <__aeabi_dadd+0x120>
 8000a48:	1d3b      	adds	r3, r7, #4
 8000a4a:	42bb      	cmp	r3, r7
 8000a4c:	41bf      	sbcs	r7, r7
 8000a4e:	427f      	negs	r7, r7
 8000a50:	19e4      	adds	r4, r4, r7
 8000a52:	001f      	movs	r7, r3
 8000a54:	0223      	lsls	r3, r4, #8
 8000a56:	d52c      	bpl.n	8000ab2 <__aeabi_dadd+0x17e>
 8000a58:	4b96      	ldr	r3, [pc, #600]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000a5a:	3601      	adds	r6, #1
 8000a5c:	429e      	cmp	r6, r3
 8000a5e:	d100      	bne.n	8000a62 <__aeabi_dadd+0x12e>
 8000a60:	e09a      	b.n	8000b98 <__aeabi_dadd+0x264>
 8000a62:	4645      	mov	r5, r8
 8000a64:	4b94      	ldr	r3, [pc, #592]	; (8000cb8 <__aeabi_dadd+0x384>)
 8000a66:	08ff      	lsrs	r7, r7, #3
 8000a68:	401c      	ands	r4, r3
 8000a6a:	0760      	lsls	r0, r4, #29
 8000a6c:	0576      	lsls	r6, r6, #21
 8000a6e:	0264      	lsls	r4, r4, #9
 8000a70:	4307      	orrs	r7, r0
 8000a72:	0b24      	lsrs	r4, r4, #12
 8000a74:	0d76      	lsrs	r6, r6, #21
 8000a76:	2100      	movs	r1, #0
 8000a78:	0324      	lsls	r4, r4, #12
 8000a7a:	0b23      	lsrs	r3, r4, #12
 8000a7c:	0d0c      	lsrs	r4, r1, #20
 8000a7e:	4a8f      	ldr	r2, [pc, #572]	; (8000cbc <__aeabi_dadd+0x388>)
 8000a80:	0524      	lsls	r4, r4, #20
 8000a82:	431c      	orrs	r4, r3
 8000a84:	4014      	ands	r4, r2
 8000a86:	0533      	lsls	r3, r6, #20
 8000a88:	4323      	orrs	r3, r4
 8000a8a:	005b      	lsls	r3, r3, #1
 8000a8c:	07ed      	lsls	r5, r5, #31
 8000a8e:	085b      	lsrs	r3, r3, #1
 8000a90:	432b      	orrs	r3, r5
 8000a92:	0038      	movs	r0, r7
 8000a94:	0019      	movs	r1, r3
 8000a96:	bc3c      	pop	{r2, r3, r4, r5}
 8000a98:	4690      	mov	r8, r2
 8000a9a:	4699      	mov	r9, r3
 8000a9c:	46a2      	mov	sl, r4
 8000a9e:	46ab      	mov	fp, r5
 8000aa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000aa2:	4664      	mov	r4, ip
 8000aa4:	4304      	orrs	r4, r0
 8000aa6:	d100      	bne.n	8000aaa <__aeabi_dadd+0x176>
 8000aa8:	e211      	b.n	8000ece <__aeabi_dadd+0x59a>
 8000aaa:	0004      	movs	r4, r0
 8000aac:	4667      	mov	r7, ip
 8000aae:	077b      	lsls	r3, r7, #29
 8000ab0:	d1c6      	bne.n	8000a40 <__aeabi_dadd+0x10c>
 8000ab2:	4645      	mov	r5, r8
 8000ab4:	0760      	lsls	r0, r4, #29
 8000ab6:	08ff      	lsrs	r7, r7, #3
 8000ab8:	4307      	orrs	r7, r0
 8000aba:	08e4      	lsrs	r4, r4, #3
 8000abc:	4b7d      	ldr	r3, [pc, #500]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000abe:	429e      	cmp	r6, r3
 8000ac0:	d030      	beq.n	8000b24 <__aeabi_dadd+0x1f0>
 8000ac2:	0324      	lsls	r4, r4, #12
 8000ac4:	0576      	lsls	r6, r6, #21
 8000ac6:	0b24      	lsrs	r4, r4, #12
 8000ac8:	0d76      	lsrs	r6, r6, #21
 8000aca:	e7d4      	b.n	8000a76 <__aeabi_dadd+0x142>
 8000acc:	1a33      	subs	r3, r6, r0
 8000ace:	469a      	mov	sl, r3
 8000ad0:	2b00      	cmp	r3, #0
 8000ad2:	dd78      	ble.n	8000bc6 <__aeabi_dadd+0x292>
 8000ad4:	2800      	cmp	r0, #0
 8000ad6:	d031      	beq.n	8000b3c <__aeabi_dadd+0x208>
 8000ad8:	4876      	ldr	r0, [pc, #472]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000ada:	4286      	cmp	r6, r0
 8000adc:	d0ae      	beq.n	8000a3c <__aeabi_dadd+0x108>
 8000ade:	2080      	movs	r0, #128	; 0x80
 8000ae0:	0400      	lsls	r0, r0, #16
 8000ae2:	4301      	orrs	r1, r0
 8000ae4:	4653      	mov	r3, sl
 8000ae6:	2b38      	cmp	r3, #56	; 0x38
 8000ae8:	dc00      	bgt.n	8000aec <__aeabi_dadd+0x1b8>
 8000aea:	e0e9      	b.n	8000cc0 <__aeabi_dadd+0x38c>
 8000aec:	430a      	orrs	r2, r1
 8000aee:	1e51      	subs	r1, r2, #1
 8000af0:	418a      	sbcs	r2, r1
 8000af2:	2100      	movs	r1, #0
 8000af4:	19d2      	adds	r2, r2, r7
 8000af6:	42ba      	cmp	r2, r7
 8000af8:	41bf      	sbcs	r7, r7
 8000afa:	1909      	adds	r1, r1, r4
 8000afc:	427c      	negs	r4, r7
 8000afe:	0017      	movs	r7, r2
 8000b00:	190c      	adds	r4, r1, r4
 8000b02:	0223      	lsls	r3, r4, #8
 8000b04:	d5d3      	bpl.n	8000aae <__aeabi_dadd+0x17a>
 8000b06:	4b6b      	ldr	r3, [pc, #428]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000b08:	3601      	adds	r6, #1
 8000b0a:	429e      	cmp	r6, r3
 8000b0c:	d100      	bne.n	8000b10 <__aeabi_dadd+0x1dc>
 8000b0e:	e13a      	b.n	8000d86 <__aeabi_dadd+0x452>
 8000b10:	2001      	movs	r0, #1
 8000b12:	4b69      	ldr	r3, [pc, #420]	; (8000cb8 <__aeabi_dadd+0x384>)
 8000b14:	401c      	ands	r4, r3
 8000b16:	087b      	lsrs	r3, r7, #1
 8000b18:	4007      	ands	r7, r0
 8000b1a:	431f      	orrs	r7, r3
 8000b1c:	07e0      	lsls	r0, r4, #31
 8000b1e:	4307      	orrs	r7, r0
 8000b20:	0864      	lsrs	r4, r4, #1
 8000b22:	e78b      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000b24:	0023      	movs	r3, r4
 8000b26:	433b      	orrs	r3, r7
 8000b28:	d100      	bne.n	8000b2c <__aeabi_dadd+0x1f8>
 8000b2a:	e1cb      	b.n	8000ec4 <__aeabi_dadd+0x590>
 8000b2c:	2280      	movs	r2, #128	; 0x80
 8000b2e:	0312      	lsls	r2, r2, #12
 8000b30:	4314      	orrs	r4, r2
 8000b32:	0324      	lsls	r4, r4, #12
 8000b34:	0b24      	lsrs	r4, r4, #12
 8000b36:	e79e      	b.n	8000a76 <__aeabi_dadd+0x142>
 8000b38:	002e      	movs	r6, r5
 8000b3a:	e77f      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000b3c:	0008      	movs	r0, r1
 8000b3e:	4310      	orrs	r0, r2
 8000b40:	d100      	bne.n	8000b44 <__aeabi_dadd+0x210>
 8000b42:	e0b4      	b.n	8000cae <__aeabi_dadd+0x37a>
 8000b44:	1e58      	subs	r0, r3, #1
 8000b46:	2800      	cmp	r0, #0
 8000b48:	d000      	beq.n	8000b4c <__aeabi_dadd+0x218>
 8000b4a:	e0de      	b.n	8000d0a <__aeabi_dadd+0x3d6>
 8000b4c:	18ba      	adds	r2, r7, r2
 8000b4e:	42ba      	cmp	r2, r7
 8000b50:	419b      	sbcs	r3, r3
 8000b52:	1864      	adds	r4, r4, r1
 8000b54:	425b      	negs	r3, r3
 8000b56:	18e4      	adds	r4, r4, r3
 8000b58:	0017      	movs	r7, r2
 8000b5a:	2601      	movs	r6, #1
 8000b5c:	0223      	lsls	r3, r4, #8
 8000b5e:	d5a6      	bpl.n	8000aae <__aeabi_dadd+0x17a>
 8000b60:	2602      	movs	r6, #2
 8000b62:	e7d5      	b.n	8000b10 <__aeabi_dadd+0x1dc>
 8000b64:	2d00      	cmp	r5, #0
 8000b66:	d16e      	bne.n	8000c46 <__aeabi_dadd+0x312>
 8000b68:	1c70      	adds	r0, r6, #1
 8000b6a:	0540      	lsls	r0, r0, #21
 8000b6c:	0d40      	lsrs	r0, r0, #21
 8000b6e:	2801      	cmp	r0, #1
 8000b70:	dc00      	bgt.n	8000b74 <__aeabi_dadd+0x240>
 8000b72:	e0f9      	b.n	8000d68 <__aeabi_dadd+0x434>
 8000b74:	1ab8      	subs	r0, r7, r2
 8000b76:	4684      	mov	ip, r0
 8000b78:	4287      	cmp	r7, r0
 8000b7a:	4180      	sbcs	r0, r0
 8000b7c:	1ae5      	subs	r5, r4, r3
 8000b7e:	4240      	negs	r0, r0
 8000b80:	1a2d      	subs	r5, r5, r0
 8000b82:	0228      	lsls	r0, r5, #8
 8000b84:	d400      	bmi.n	8000b88 <__aeabi_dadd+0x254>
 8000b86:	e089      	b.n	8000c9c <__aeabi_dadd+0x368>
 8000b88:	1bd7      	subs	r7, r2, r7
 8000b8a:	42ba      	cmp	r2, r7
 8000b8c:	4192      	sbcs	r2, r2
 8000b8e:	1b1c      	subs	r4, r3, r4
 8000b90:	4252      	negs	r2, r2
 8000b92:	1aa5      	subs	r5, r4, r2
 8000b94:	46d8      	mov	r8, fp
 8000b96:	e729      	b.n	80009ec <__aeabi_dadd+0xb8>
 8000b98:	4645      	mov	r5, r8
 8000b9a:	2400      	movs	r4, #0
 8000b9c:	2700      	movs	r7, #0
 8000b9e:	e76a      	b.n	8000a76 <__aeabi_dadd+0x142>
 8000ba0:	4c45      	ldr	r4, [pc, #276]	; (8000cb8 <__aeabi_dadd+0x384>)
 8000ba2:	1af6      	subs	r6, r6, r3
 8000ba4:	402c      	ands	r4, r5
 8000ba6:	e749      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000ba8:	003d      	movs	r5, r7
 8000baa:	3828      	subs	r0, #40	; 0x28
 8000bac:	4085      	lsls	r5, r0
 8000bae:	2700      	movs	r7, #0
 8000bb0:	e72e      	b.n	8000a10 <__aeabi_dadd+0xdc>
 8000bb2:	0038      	movs	r0, r7
 8000bb4:	f001 fcb8 	bl	8002528 <__clzsi2>
 8000bb8:	3020      	adds	r0, #32
 8000bba:	e71d      	b.n	80009f8 <__aeabi_dadd+0xc4>
 8000bbc:	430a      	orrs	r2, r1
 8000bbe:	1e51      	subs	r1, r2, #1
 8000bc0:	418a      	sbcs	r2, r1
 8000bc2:	2100      	movs	r1, #0
 8000bc4:	e707      	b.n	80009d6 <__aeabi_dadd+0xa2>
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d000      	beq.n	8000bcc <__aeabi_dadd+0x298>
 8000bca:	e0f3      	b.n	8000db4 <__aeabi_dadd+0x480>
 8000bcc:	1c70      	adds	r0, r6, #1
 8000bce:	0543      	lsls	r3, r0, #21
 8000bd0:	0d5b      	lsrs	r3, r3, #21
 8000bd2:	2b01      	cmp	r3, #1
 8000bd4:	dc00      	bgt.n	8000bd8 <__aeabi_dadd+0x2a4>
 8000bd6:	e0ad      	b.n	8000d34 <__aeabi_dadd+0x400>
 8000bd8:	4b36      	ldr	r3, [pc, #216]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000bda:	4298      	cmp	r0, r3
 8000bdc:	d100      	bne.n	8000be0 <__aeabi_dadd+0x2ac>
 8000bde:	e0d1      	b.n	8000d84 <__aeabi_dadd+0x450>
 8000be0:	18ba      	adds	r2, r7, r2
 8000be2:	42ba      	cmp	r2, r7
 8000be4:	41bf      	sbcs	r7, r7
 8000be6:	1864      	adds	r4, r4, r1
 8000be8:	427f      	negs	r7, r7
 8000bea:	19e4      	adds	r4, r4, r7
 8000bec:	07e7      	lsls	r7, r4, #31
 8000bee:	0852      	lsrs	r2, r2, #1
 8000bf0:	4317      	orrs	r7, r2
 8000bf2:	0864      	lsrs	r4, r4, #1
 8000bf4:	0006      	movs	r6, r0
 8000bf6:	e721      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000bf8:	482e      	ldr	r0, [pc, #184]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000bfa:	4285      	cmp	r5, r0
 8000bfc:	d100      	bne.n	8000c00 <__aeabi_dadd+0x2cc>
 8000bfe:	e093      	b.n	8000d28 <__aeabi_dadd+0x3f4>
 8000c00:	001d      	movs	r5, r3
 8000c02:	e6d0      	b.n	80009a6 <__aeabi_dadd+0x72>
 8000c04:	0029      	movs	r1, r5
 8000c06:	3e1f      	subs	r6, #31
 8000c08:	40f1      	lsrs	r1, r6
 8000c0a:	2b20      	cmp	r3, #32
 8000c0c:	d100      	bne.n	8000c10 <__aeabi_dadd+0x2dc>
 8000c0e:	e08d      	b.n	8000d2c <__aeabi_dadd+0x3f8>
 8000c10:	2240      	movs	r2, #64	; 0x40
 8000c12:	1ad3      	subs	r3, r2, r3
 8000c14:	409d      	lsls	r5, r3
 8000c16:	432f      	orrs	r7, r5
 8000c18:	1e7d      	subs	r5, r7, #1
 8000c1a:	41af      	sbcs	r7, r5
 8000c1c:	2400      	movs	r4, #0
 8000c1e:	430f      	orrs	r7, r1
 8000c20:	2600      	movs	r6, #0
 8000c22:	e744      	b.n	8000aae <__aeabi_dadd+0x17a>
 8000c24:	002b      	movs	r3, r5
 8000c26:	0008      	movs	r0, r1
 8000c28:	3b20      	subs	r3, #32
 8000c2a:	40d8      	lsrs	r0, r3
 8000c2c:	0003      	movs	r3, r0
 8000c2e:	2d20      	cmp	r5, #32
 8000c30:	d100      	bne.n	8000c34 <__aeabi_dadd+0x300>
 8000c32:	e07d      	b.n	8000d30 <__aeabi_dadd+0x3fc>
 8000c34:	2040      	movs	r0, #64	; 0x40
 8000c36:	1b45      	subs	r5, r0, r5
 8000c38:	40a9      	lsls	r1, r5
 8000c3a:	430a      	orrs	r2, r1
 8000c3c:	1e51      	subs	r1, r2, #1
 8000c3e:	418a      	sbcs	r2, r1
 8000c40:	2100      	movs	r1, #0
 8000c42:	431a      	orrs	r2, r3
 8000c44:	e6c7      	b.n	80009d6 <__aeabi_dadd+0xa2>
 8000c46:	2e00      	cmp	r6, #0
 8000c48:	d050      	beq.n	8000cec <__aeabi_dadd+0x3b8>
 8000c4a:	4e1a      	ldr	r6, [pc, #104]	; (8000cb4 <__aeabi_dadd+0x380>)
 8000c4c:	42b0      	cmp	r0, r6
 8000c4e:	d057      	beq.n	8000d00 <__aeabi_dadd+0x3cc>
 8000c50:	2680      	movs	r6, #128	; 0x80
 8000c52:	426b      	negs	r3, r5
 8000c54:	4699      	mov	r9, r3
 8000c56:	0436      	lsls	r6, r6, #16
 8000c58:	4334      	orrs	r4, r6
 8000c5a:	464b      	mov	r3, r9
 8000c5c:	2b38      	cmp	r3, #56	; 0x38
 8000c5e:	dd00      	ble.n	8000c62 <__aeabi_dadd+0x32e>
 8000c60:	e0d6      	b.n	8000e10 <__aeabi_dadd+0x4dc>
 8000c62:	2b1f      	cmp	r3, #31
 8000c64:	dd00      	ble.n	8000c68 <__aeabi_dadd+0x334>
 8000c66:	e135      	b.n	8000ed4 <__aeabi_dadd+0x5a0>
 8000c68:	2620      	movs	r6, #32
 8000c6a:	1af5      	subs	r5, r6, r3
 8000c6c:	0026      	movs	r6, r4
 8000c6e:	40ae      	lsls	r6, r5
 8000c70:	46b2      	mov	sl, r6
 8000c72:	003e      	movs	r6, r7
 8000c74:	40de      	lsrs	r6, r3
 8000c76:	46ac      	mov	ip, r5
 8000c78:	0035      	movs	r5, r6
 8000c7a:	4656      	mov	r6, sl
 8000c7c:	432e      	orrs	r6, r5
 8000c7e:	4665      	mov	r5, ip
 8000c80:	40af      	lsls	r7, r5
 8000c82:	1e7d      	subs	r5, r7, #1
 8000c84:	41af      	sbcs	r7, r5
 8000c86:	40dc      	lsrs	r4, r3
 8000c88:	4337      	orrs	r7, r6
 8000c8a:	1bd7      	subs	r7, r2, r7
 8000c8c:	42ba      	cmp	r2, r7
 8000c8e:	4192      	sbcs	r2, r2
 8000c90:	1b0c      	subs	r4, r1, r4
 8000c92:	4252      	negs	r2, r2
 8000c94:	1aa4      	subs	r4, r4, r2
 8000c96:	0006      	movs	r6, r0
 8000c98:	46d8      	mov	r8, fp
 8000c9a:	e6a3      	b.n	80009e4 <__aeabi_dadd+0xb0>
 8000c9c:	4664      	mov	r4, ip
 8000c9e:	4667      	mov	r7, ip
 8000ca0:	432c      	orrs	r4, r5
 8000ca2:	d000      	beq.n	8000ca6 <__aeabi_dadd+0x372>
 8000ca4:	e6a2      	b.n	80009ec <__aeabi_dadd+0xb8>
 8000ca6:	2500      	movs	r5, #0
 8000ca8:	2600      	movs	r6, #0
 8000caa:	2700      	movs	r7, #0
 8000cac:	e706      	b.n	8000abc <__aeabi_dadd+0x188>
 8000cae:	001e      	movs	r6, r3
 8000cb0:	e6c4      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000cb2:	46c0      	nop			; (mov r8, r8)
 8000cb4:	000007ff 	.word	0x000007ff
 8000cb8:	ff7fffff 	.word	0xff7fffff
 8000cbc:	800fffff 	.word	0x800fffff
 8000cc0:	2b1f      	cmp	r3, #31
 8000cc2:	dc63      	bgt.n	8000d8c <__aeabi_dadd+0x458>
 8000cc4:	2020      	movs	r0, #32
 8000cc6:	1ac3      	subs	r3, r0, r3
 8000cc8:	0008      	movs	r0, r1
 8000cca:	4098      	lsls	r0, r3
 8000ccc:	469c      	mov	ip, r3
 8000cce:	4683      	mov	fp, r0
 8000cd0:	4653      	mov	r3, sl
 8000cd2:	0010      	movs	r0, r2
 8000cd4:	40d8      	lsrs	r0, r3
 8000cd6:	0003      	movs	r3, r0
 8000cd8:	4658      	mov	r0, fp
 8000cda:	4318      	orrs	r0, r3
 8000cdc:	4663      	mov	r3, ip
 8000cde:	409a      	lsls	r2, r3
 8000ce0:	1e53      	subs	r3, r2, #1
 8000ce2:	419a      	sbcs	r2, r3
 8000ce4:	4653      	mov	r3, sl
 8000ce6:	4302      	orrs	r2, r0
 8000ce8:	40d9      	lsrs	r1, r3
 8000cea:	e703      	b.n	8000af4 <__aeabi_dadd+0x1c0>
 8000cec:	0026      	movs	r6, r4
 8000cee:	433e      	orrs	r6, r7
 8000cf0:	d006      	beq.n	8000d00 <__aeabi_dadd+0x3cc>
 8000cf2:	43eb      	mvns	r3, r5
 8000cf4:	4699      	mov	r9, r3
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	d0c7      	beq.n	8000c8a <__aeabi_dadd+0x356>
 8000cfa:	4e94      	ldr	r6, [pc, #592]	; (8000f4c <__aeabi_dadd+0x618>)
 8000cfc:	42b0      	cmp	r0, r6
 8000cfe:	d1ac      	bne.n	8000c5a <__aeabi_dadd+0x326>
 8000d00:	000c      	movs	r4, r1
 8000d02:	0017      	movs	r7, r2
 8000d04:	0006      	movs	r6, r0
 8000d06:	46d8      	mov	r8, fp
 8000d08:	e698      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000d0a:	4b90      	ldr	r3, [pc, #576]	; (8000f4c <__aeabi_dadd+0x618>)
 8000d0c:	459a      	cmp	sl, r3
 8000d0e:	d00b      	beq.n	8000d28 <__aeabi_dadd+0x3f4>
 8000d10:	4682      	mov	sl, r0
 8000d12:	e6e7      	b.n	8000ae4 <__aeabi_dadd+0x1b0>
 8000d14:	2800      	cmp	r0, #0
 8000d16:	d000      	beq.n	8000d1a <__aeabi_dadd+0x3e6>
 8000d18:	e09e      	b.n	8000e58 <__aeabi_dadd+0x524>
 8000d1a:	0018      	movs	r0, r3
 8000d1c:	4310      	orrs	r0, r2
 8000d1e:	d100      	bne.n	8000d22 <__aeabi_dadd+0x3ee>
 8000d20:	e0e9      	b.n	8000ef6 <__aeabi_dadd+0x5c2>
 8000d22:	001c      	movs	r4, r3
 8000d24:	0017      	movs	r7, r2
 8000d26:	46d8      	mov	r8, fp
 8000d28:	4e88      	ldr	r6, [pc, #544]	; (8000f4c <__aeabi_dadd+0x618>)
 8000d2a:	e687      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000d2c:	2500      	movs	r5, #0
 8000d2e:	e772      	b.n	8000c16 <__aeabi_dadd+0x2e2>
 8000d30:	2100      	movs	r1, #0
 8000d32:	e782      	b.n	8000c3a <__aeabi_dadd+0x306>
 8000d34:	0023      	movs	r3, r4
 8000d36:	433b      	orrs	r3, r7
 8000d38:	2e00      	cmp	r6, #0
 8000d3a:	d000      	beq.n	8000d3e <__aeabi_dadd+0x40a>
 8000d3c:	e0ab      	b.n	8000e96 <__aeabi_dadd+0x562>
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d100      	bne.n	8000d44 <__aeabi_dadd+0x410>
 8000d42:	e0e7      	b.n	8000f14 <__aeabi_dadd+0x5e0>
 8000d44:	000b      	movs	r3, r1
 8000d46:	4313      	orrs	r3, r2
 8000d48:	d100      	bne.n	8000d4c <__aeabi_dadd+0x418>
 8000d4a:	e677      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000d4c:	18ba      	adds	r2, r7, r2
 8000d4e:	42ba      	cmp	r2, r7
 8000d50:	41bf      	sbcs	r7, r7
 8000d52:	1864      	adds	r4, r4, r1
 8000d54:	427f      	negs	r7, r7
 8000d56:	19e4      	adds	r4, r4, r7
 8000d58:	0223      	lsls	r3, r4, #8
 8000d5a:	d400      	bmi.n	8000d5e <__aeabi_dadd+0x42a>
 8000d5c:	e0f2      	b.n	8000f44 <__aeabi_dadd+0x610>
 8000d5e:	4b7c      	ldr	r3, [pc, #496]	; (8000f50 <__aeabi_dadd+0x61c>)
 8000d60:	0017      	movs	r7, r2
 8000d62:	401c      	ands	r4, r3
 8000d64:	0006      	movs	r6, r0
 8000d66:	e669      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000d68:	0020      	movs	r0, r4
 8000d6a:	4338      	orrs	r0, r7
 8000d6c:	2e00      	cmp	r6, #0
 8000d6e:	d1d1      	bne.n	8000d14 <__aeabi_dadd+0x3e0>
 8000d70:	2800      	cmp	r0, #0
 8000d72:	d15b      	bne.n	8000e2c <__aeabi_dadd+0x4f8>
 8000d74:	001c      	movs	r4, r3
 8000d76:	4314      	orrs	r4, r2
 8000d78:	d100      	bne.n	8000d7c <__aeabi_dadd+0x448>
 8000d7a:	e0a8      	b.n	8000ece <__aeabi_dadd+0x59a>
 8000d7c:	001c      	movs	r4, r3
 8000d7e:	0017      	movs	r7, r2
 8000d80:	46d8      	mov	r8, fp
 8000d82:	e65b      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000d84:	0006      	movs	r6, r0
 8000d86:	2400      	movs	r4, #0
 8000d88:	2700      	movs	r7, #0
 8000d8a:	e697      	b.n	8000abc <__aeabi_dadd+0x188>
 8000d8c:	4650      	mov	r0, sl
 8000d8e:	000b      	movs	r3, r1
 8000d90:	3820      	subs	r0, #32
 8000d92:	40c3      	lsrs	r3, r0
 8000d94:	4699      	mov	r9, r3
 8000d96:	4653      	mov	r3, sl
 8000d98:	2b20      	cmp	r3, #32
 8000d9a:	d100      	bne.n	8000d9e <__aeabi_dadd+0x46a>
 8000d9c:	e095      	b.n	8000eca <__aeabi_dadd+0x596>
 8000d9e:	2340      	movs	r3, #64	; 0x40
 8000da0:	4650      	mov	r0, sl
 8000da2:	1a1b      	subs	r3, r3, r0
 8000da4:	4099      	lsls	r1, r3
 8000da6:	430a      	orrs	r2, r1
 8000da8:	1e51      	subs	r1, r2, #1
 8000daa:	418a      	sbcs	r2, r1
 8000dac:	464b      	mov	r3, r9
 8000dae:	2100      	movs	r1, #0
 8000db0:	431a      	orrs	r2, r3
 8000db2:	e69f      	b.n	8000af4 <__aeabi_dadd+0x1c0>
 8000db4:	2e00      	cmp	r6, #0
 8000db6:	d130      	bne.n	8000e1a <__aeabi_dadd+0x4e6>
 8000db8:	0026      	movs	r6, r4
 8000dba:	433e      	orrs	r6, r7
 8000dbc:	d067      	beq.n	8000e8e <__aeabi_dadd+0x55a>
 8000dbe:	43db      	mvns	r3, r3
 8000dc0:	469a      	mov	sl, r3
 8000dc2:	2b00      	cmp	r3, #0
 8000dc4:	d01c      	beq.n	8000e00 <__aeabi_dadd+0x4cc>
 8000dc6:	4e61      	ldr	r6, [pc, #388]	; (8000f4c <__aeabi_dadd+0x618>)
 8000dc8:	42b0      	cmp	r0, r6
 8000dca:	d060      	beq.n	8000e8e <__aeabi_dadd+0x55a>
 8000dcc:	4653      	mov	r3, sl
 8000dce:	2b38      	cmp	r3, #56	; 0x38
 8000dd0:	dd00      	ble.n	8000dd4 <__aeabi_dadd+0x4a0>
 8000dd2:	e096      	b.n	8000f02 <__aeabi_dadd+0x5ce>
 8000dd4:	2b1f      	cmp	r3, #31
 8000dd6:	dd00      	ble.n	8000dda <__aeabi_dadd+0x4a6>
 8000dd8:	e09f      	b.n	8000f1a <__aeabi_dadd+0x5e6>
 8000dda:	2620      	movs	r6, #32
 8000ddc:	1af3      	subs	r3, r6, r3
 8000dde:	0026      	movs	r6, r4
 8000de0:	409e      	lsls	r6, r3
 8000de2:	469c      	mov	ip, r3
 8000de4:	46b3      	mov	fp, r6
 8000de6:	4653      	mov	r3, sl
 8000de8:	003e      	movs	r6, r7
 8000dea:	40de      	lsrs	r6, r3
 8000dec:	0033      	movs	r3, r6
 8000dee:	465e      	mov	r6, fp
 8000df0:	431e      	orrs	r6, r3
 8000df2:	4663      	mov	r3, ip
 8000df4:	409f      	lsls	r7, r3
 8000df6:	1e7b      	subs	r3, r7, #1
 8000df8:	419f      	sbcs	r7, r3
 8000dfa:	4653      	mov	r3, sl
 8000dfc:	40dc      	lsrs	r4, r3
 8000dfe:	4337      	orrs	r7, r6
 8000e00:	18bf      	adds	r7, r7, r2
 8000e02:	4297      	cmp	r7, r2
 8000e04:	4192      	sbcs	r2, r2
 8000e06:	1864      	adds	r4, r4, r1
 8000e08:	4252      	negs	r2, r2
 8000e0a:	18a4      	adds	r4, r4, r2
 8000e0c:	0006      	movs	r6, r0
 8000e0e:	e678      	b.n	8000b02 <__aeabi_dadd+0x1ce>
 8000e10:	4327      	orrs	r7, r4
 8000e12:	1e7c      	subs	r4, r7, #1
 8000e14:	41a7      	sbcs	r7, r4
 8000e16:	2400      	movs	r4, #0
 8000e18:	e737      	b.n	8000c8a <__aeabi_dadd+0x356>
 8000e1a:	4e4c      	ldr	r6, [pc, #304]	; (8000f4c <__aeabi_dadd+0x618>)
 8000e1c:	42b0      	cmp	r0, r6
 8000e1e:	d036      	beq.n	8000e8e <__aeabi_dadd+0x55a>
 8000e20:	2680      	movs	r6, #128	; 0x80
 8000e22:	425b      	negs	r3, r3
 8000e24:	0436      	lsls	r6, r6, #16
 8000e26:	469a      	mov	sl, r3
 8000e28:	4334      	orrs	r4, r6
 8000e2a:	e7cf      	b.n	8000dcc <__aeabi_dadd+0x498>
 8000e2c:	0018      	movs	r0, r3
 8000e2e:	4310      	orrs	r0, r2
 8000e30:	d100      	bne.n	8000e34 <__aeabi_dadd+0x500>
 8000e32:	e603      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000e34:	1ab8      	subs	r0, r7, r2
 8000e36:	4684      	mov	ip, r0
 8000e38:	4567      	cmp	r7, ip
 8000e3a:	41ad      	sbcs	r5, r5
 8000e3c:	1ae0      	subs	r0, r4, r3
 8000e3e:	426d      	negs	r5, r5
 8000e40:	1b40      	subs	r0, r0, r5
 8000e42:	0205      	lsls	r5, r0, #8
 8000e44:	d400      	bmi.n	8000e48 <__aeabi_dadd+0x514>
 8000e46:	e62c      	b.n	8000aa2 <__aeabi_dadd+0x16e>
 8000e48:	1bd7      	subs	r7, r2, r7
 8000e4a:	42ba      	cmp	r2, r7
 8000e4c:	4192      	sbcs	r2, r2
 8000e4e:	1b1c      	subs	r4, r3, r4
 8000e50:	4252      	negs	r2, r2
 8000e52:	1aa4      	subs	r4, r4, r2
 8000e54:	46d8      	mov	r8, fp
 8000e56:	e5f1      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000e58:	0018      	movs	r0, r3
 8000e5a:	4310      	orrs	r0, r2
 8000e5c:	d100      	bne.n	8000e60 <__aeabi_dadd+0x52c>
 8000e5e:	e763      	b.n	8000d28 <__aeabi_dadd+0x3f4>
 8000e60:	08f8      	lsrs	r0, r7, #3
 8000e62:	0767      	lsls	r7, r4, #29
 8000e64:	4307      	orrs	r7, r0
 8000e66:	2080      	movs	r0, #128	; 0x80
 8000e68:	08e4      	lsrs	r4, r4, #3
 8000e6a:	0300      	lsls	r0, r0, #12
 8000e6c:	4204      	tst	r4, r0
 8000e6e:	d008      	beq.n	8000e82 <__aeabi_dadd+0x54e>
 8000e70:	08dd      	lsrs	r5, r3, #3
 8000e72:	4205      	tst	r5, r0
 8000e74:	d105      	bne.n	8000e82 <__aeabi_dadd+0x54e>
 8000e76:	08d2      	lsrs	r2, r2, #3
 8000e78:	0759      	lsls	r1, r3, #29
 8000e7a:	4311      	orrs	r1, r2
 8000e7c:	000f      	movs	r7, r1
 8000e7e:	002c      	movs	r4, r5
 8000e80:	46d8      	mov	r8, fp
 8000e82:	0f7b      	lsrs	r3, r7, #29
 8000e84:	00e4      	lsls	r4, r4, #3
 8000e86:	431c      	orrs	r4, r3
 8000e88:	00ff      	lsls	r7, r7, #3
 8000e8a:	4e30      	ldr	r6, [pc, #192]	; (8000f4c <__aeabi_dadd+0x618>)
 8000e8c:	e5d6      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000e8e:	000c      	movs	r4, r1
 8000e90:	0017      	movs	r7, r2
 8000e92:	0006      	movs	r6, r0
 8000e94:	e5d2      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d038      	beq.n	8000f0c <__aeabi_dadd+0x5d8>
 8000e9a:	000b      	movs	r3, r1
 8000e9c:	4313      	orrs	r3, r2
 8000e9e:	d100      	bne.n	8000ea2 <__aeabi_dadd+0x56e>
 8000ea0:	e742      	b.n	8000d28 <__aeabi_dadd+0x3f4>
 8000ea2:	08f8      	lsrs	r0, r7, #3
 8000ea4:	0767      	lsls	r7, r4, #29
 8000ea6:	4307      	orrs	r7, r0
 8000ea8:	2080      	movs	r0, #128	; 0x80
 8000eaa:	08e4      	lsrs	r4, r4, #3
 8000eac:	0300      	lsls	r0, r0, #12
 8000eae:	4204      	tst	r4, r0
 8000eb0:	d0e7      	beq.n	8000e82 <__aeabi_dadd+0x54e>
 8000eb2:	08cb      	lsrs	r3, r1, #3
 8000eb4:	4203      	tst	r3, r0
 8000eb6:	d1e4      	bne.n	8000e82 <__aeabi_dadd+0x54e>
 8000eb8:	08d2      	lsrs	r2, r2, #3
 8000eba:	0749      	lsls	r1, r1, #29
 8000ebc:	4311      	orrs	r1, r2
 8000ebe:	000f      	movs	r7, r1
 8000ec0:	001c      	movs	r4, r3
 8000ec2:	e7de      	b.n	8000e82 <__aeabi_dadd+0x54e>
 8000ec4:	2700      	movs	r7, #0
 8000ec6:	2400      	movs	r4, #0
 8000ec8:	e5d5      	b.n	8000a76 <__aeabi_dadd+0x142>
 8000eca:	2100      	movs	r1, #0
 8000ecc:	e76b      	b.n	8000da6 <__aeabi_dadd+0x472>
 8000ece:	2500      	movs	r5, #0
 8000ed0:	2700      	movs	r7, #0
 8000ed2:	e5f3      	b.n	8000abc <__aeabi_dadd+0x188>
 8000ed4:	464e      	mov	r6, r9
 8000ed6:	0025      	movs	r5, r4
 8000ed8:	3e20      	subs	r6, #32
 8000eda:	40f5      	lsrs	r5, r6
 8000edc:	464b      	mov	r3, r9
 8000ede:	002e      	movs	r6, r5
 8000ee0:	2b20      	cmp	r3, #32
 8000ee2:	d02d      	beq.n	8000f40 <__aeabi_dadd+0x60c>
 8000ee4:	2540      	movs	r5, #64	; 0x40
 8000ee6:	1aed      	subs	r5, r5, r3
 8000ee8:	40ac      	lsls	r4, r5
 8000eea:	4327      	orrs	r7, r4
 8000eec:	1e7c      	subs	r4, r7, #1
 8000eee:	41a7      	sbcs	r7, r4
 8000ef0:	2400      	movs	r4, #0
 8000ef2:	4337      	orrs	r7, r6
 8000ef4:	e6c9      	b.n	8000c8a <__aeabi_dadd+0x356>
 8000ef6:	2480      	movs	r4, #128	; 0x80
 8000ef8:	2500      	movs	r5, #0
 8000efa:	0324      	lsls	r4, r4, #12
 8000efc:	4e13      	ldr	r6, [pc, #76]	; (8000f4c <__aeabi_dadd+0x618>)
 8000efe:	2700      	movs	r7, #0
 8000f00:	e5dc      	b.n	8000abc <__aeabi_dadd+0x188>
 8000f02:	4327      	orrs	r7, r4
 8000f04:	1e7c      	subs	r4, r7, #1
 8000f06:	41a7      	sbcs	r7, r4
 8000f08:	2400      	movs	r4, #0
 8000f0a:	e779      	b.n	8000e00 <__aeabi_dadd+0x4cc>
 8000f0c:	000c      	movs	r4, r1
 8000f0e:	0017      	movs	r7, r2
 8000f10:	4e0e      	ldr	r6, [pc, #56]	; (8000f4c <__aeabi_dadd+0x618>)
 8000f12:	e593      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000f14:	000c      	movs	r4, r1
 8000f16:	0017      	movs	r7, r2
 8000f18:	e590      	b.n	8000a3c <__aeabi_dadd+0x108>
 8000f1a:	4656      	mov	r6, sl
 8000f1c:	0023      	movs	r3, r4
 8000f1e:	3e20      	subs	r6, #32
 8000f20:	40f3      	lsrs	r3, r6
 8000f22:	4699      	mov	r9, r3
 8000f24:	4653      	mov	r3, sl
 8000f26:	2b20      	cmp	r3, #32
 8000f28:	d00e      	beq.n	8000f48 <__aeabi_dadd+0x614>
 8000f2a:	2340      	movs	r3, #64	; 0x40
 8000f2c:	4656      	mov	r6, sl
 8000f2e:	1b9b      	subs	r3, r3, r6
 8000f30:	409c      	lsls	r4, r3
 8000f32:	4327      	orrs	r7, r4
 8000f34:	1e7c      	subs	r4, r7, #1
 8000f36:	41a7      	sbcs	r7, r4
 8000f38:	464b      	mov	r3, r9
 8000f3a:	2400      	movs	r4, #0
 8000f3c:	431f      	orrs	r7, r3
 8000f3e:	e75f      	b.n	8000e00 <__aeabi_dadd+0x4cc>
 8000f40:	2400      	movs	r4, #0
 8000f42:	e7d2      	b.n	8000eea <__aeabi_dadd+0x5b6>
 8000f44:	0017      	movs	r7, r2
 8000f46:	e5b2      	b.n	8000aae <__aeabi_dadd+0x17a>
 8000f48:	2400      	movs	r4, #0
 8000f4a:	e7f2      	b.n	8000f32 <__aeabi_dadd+0x5fe>
 8000f4c:	000007ff 	.word	0x000007ff
 8000f50:	ff7fffff 	.word	0xff7fffff

08000f54 <__aeabi_ddiv>:
 8000f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f56:	4657      	mov	r7, sl
 8000f58:	4645      	mov	r5, r8
 8000f5a:	46de      	mov	lr, fp
 8000f5c:	464e      	mov	r6, r9
 8000f5e:	b5e0      	push	{r5, r6, r7, lr}
 8000f60:	004c      	lsls	r4, r1, #1
 8000f62:	030e      	lsls	r6, r1, #12
 8000f64:	b087      	sub	sp, #28
 8000f66:	4683      	mov	fp, r0
 8000f68:	4692      	mov	sl, r2
 8000f6a:	001d      	movs	r5, r3
 8000f6c:	4680      	mov	r8, r0
 8000f6e:	0b36      	lsrs	r6, r6, #12
 8000f70:	0d64      	lsrs	r4, r4, #21
 8000f72:	0fcf      	lsrs	r7, r1, #31
 8000f74:	2c00      	cmp	r4, #0
 8000f76:	d04f      	beq.n	8001018 <__aeabi_ddiv+0xc4>
 8000f78:	4b6f      	ldr	r3, [pc, #444]	; (8001138 <__aeabi_ddiv+0x1e4>)
 8000f7a:	429c      	cmp	r4, r3
 8000f7c:	d035      	beq.n	8000fea <__aeabi_ddiv+0x96>
 8000f7e:	2380      	movs	r3, #128	; 0x80
 8000f80:	0f42      	lsrs	r2, r0, #29
 8000f82:	041b      	lsls	r3, r3, #16
 8000f84:	00f6      	lsls	r6, r6, #3
 8000f86:	4313      	orrs	r3, r2
 8000f88:	4333      	orrs	r3, r6
 8000f8a:	4699      	mov	r9, r3
 8000f8c:	00c3      	lsls	r3, r0, #3
 8000f8e:	4698      	mov	r8, r3
 8000f90:	4b6a      	ldr	r3, [pc, #424]	; (800113c <__aeabi_ddiv+0x1e8>)
 8000f92:	2600      	movs	r6, #0
 8000f94:	469c      	mov	ip, r3
 8000f96:	2300      	movs	r3, #0
 8000f98:	4464      	add	r4, ip
 8000f9a:	9303      	str	r3, [sp, #12]
 8000f9c:	032b      	lsls	r3, r5, #12
 8000f9e:	0b1b      	lsrs	r3, r3, #12
 8000fa0:	469b      	mov	fp, r3
 8000fa2:	006b      	lsls	r3, r5, #1
 8000fa4:	0fed      	lsrs	r5, r5, #31
 8000fa6:	4650      	mov	r0, sl
 8000fa8:	0d5b      	lsrs	r3, r3, #21
 8000faa:	9501      	str	r5, [sp, #4]
 8000fac:	d05e      	beq.n	800106c <__aeabi_ddiv+0x118>
 8000fae:	4a62      	ldr	r2, [pc, #392]	; (8001138 <__aeabi_ddiv+0x1e4>)
 8000fb0:	4293      	cmp	r3, r2
 8000fb2:	d053      	beq.n	800105c <__aeabi_ddiv+0x108>
 8000fb4:	465a      	mov	r2, fp
 8000fb6:	00d1      	lsls	r1, r2, #3
 8000fb8:	2280      	movs	r2, #128	; 0x80
 8000fba:	0f40      	lsrs	r0, r0, #29
 8000fbc:	0412      	lsls	r2, r2, #16
 8000fbe:	4302      	orrs	r2, r0
 8000fc0:	430a      	orrs	r2, r1
 8000fc2:	4693      	mov	fp, r2
 8000fc4:	4652      	mov	r2, sl
 8000fc6:	00d1      	lsls	r1, r2, #3
 8000fc8:	4a5c      	ldr	r2, [pc, #368]	; (800113c <__aeabi_ddiv+0x1e8>)
 8000fca:	4694      	mov	ip, r2
 8000fcc:	2200      	movs	r2, #0
 8000fce:	4463      	add	r3, ip
 8000fd0:	0038      	movs	r0, r7
 8000fd2:	4068      	eors	r0, r5
 8000fd4:	4684      	mov	ip, r0
 8000fd6:	9002      	str	r0, [sp, #8]
 8000fd8:	1ae4      	subs	r4, r4, r3
 8000fda:	4316      	orrs	r6, r2
 8000fdc:	2e0f      	cmp	r6, #15
 8000fde:	d900      	bls.n	8000fe2 <__aeabi_ddiv+0x8e>
 8000fe0:	e0b4      	b.n	800114c <__aeabi_ddiv+0x1f8>
 8000fe2:	4b57      	ldr	r3, [pc, #348]	; (8001140 <__aeabi_ddiv+0x1ec>)
 8000fe4:	00b6      	lsls	r6, r6, #2
 8000fe6:	599b      	ldr	r3, [r3, r6]
 8000fe8:	469f      	mov	pc, r3
 8000fea:	0003      	movs	r3, r0
 8000fec:	4333      	orrs	r3, r6
 8000fee:	4699      	mov	r9, r3
 8000ff0:	d16c      	bne.n	80010cc <__aeabi_ddiv+0x178>
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	4698      	mov	r8, r3
 8000ff6:	3302      	adds	r3, #2
 8000ff8:	2608      	movs	r6, #8
 8000ffa:	9303      	str	r3, [sp, #12]
 8000ffc:	e7ce      	b.n	8000f9c <__aeabi_ddiv+0x48>
 8000ffe:	46cb      	mov	fp, r9
 8001000:	4641      	mov	r1, r8
 8001002:	9a03      	ldr	r2, [sp, #12]
 8001004:	9701      	str	r7, [sp, #4]
 8001006:	2a02      	cmp	r2, #2
 8001008:	d165      	bne.n	80010d6 <__aeabi_ddiv+0x182>
 800100a:	9b01      	ldr	r3, [sp, #4]
 800100c:	4c4a      	ldr	r4, [pc, #296]	; (8001138 <__aeabi_ddiv+0x1e4>)
 800100e:	469c      	mov	ip, r3
 8001010:	2300      	movs	r3, #0
 8001012:	2200      	movs	r2, #0
 8001014:	4698      	mov	r8, r3
 8001016:	e06b      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001018:	0003      	movs	r3, r0
 800101a:	4333      	orrs	r3, r6
 800101c:	4699      	mov	r9, r3
 800101e:	d04e      	beq.n	80010be <__aeabi_ddiv+0x16a>
 8001020:	2e00      	cmp	r6, #0
 8001022:	d100      	bne.n	8001026 <__aeabi_ddiv+0xd2>
 8001024:	e1bc      	b.n	80013a0 <__aeabi_ddiv+0x44c>
 8001026:	0030      	movs	r0, r6
 8001028:	f001 fa7e 	bl	8002528 <__clzsi2>
 800102c:	0003      	movs	r3, r0
 800102e:	3b0b      	subs	r3, #11
 8001030:	2b1c      	cmp	r3, #28
 8001032:	dd00      	ble.n	8001036 <__aeabi_ddiv+0xe2>
 8001034:	e1ac      	b.n	8001390 <__aeabi_ddiv+0x43c>
 8001036:	221d      	movs	r2, #29
 8001038:	1ad3      	subs	r3, r2, r3
 800103a:	465a      	mov	r2, fp
 800103c:	0001      	movs	r1, r0
 800103e:	40da      	lsrs	r2, r3
 8001040:	3908      	subs	r1, #8
 8001042:	408e      	lsls	r6, r1
 8001044:	0013      	movs	r3, r2
 8001046:	4333      	orrs	r3, r6
 8001048:	4699      	mov	r9, r3
 800104a:	465b      	mov	r3, fp
 800104c:	408b      	lsls	r3, r1
 800104e:	4698      	mov	r8, r3
 8001050:	2300      	movs	r3, #0
 8001052:	4c3c      	ldr	r4, [pc, #240]	; (8001144 <__aeabi_ddiv+0x1f0>)
 8001054:	2600      	movs	r6, #0
 8001056:	1a24      	subs	r4, r4, r0
 8001058:	9303      	str	r3, [sp, #12]
 800105a:	e79f      	b.n	8000f9c <__aeabi_ddiv+0x48>
 800105c:	4651      	mov	r1, sl
 800105e:	465a      	mov	r2, fp
 8001060:	4311      	orrs	r1, r2
 8001062:	d129      	bne.n	80010b8 <__aeabi_ddiv+0x164>
 8001064:	2200      	movs	r2, #0
 8001066:	4693      	mov	fp, r2
 8001068:	3202      	adds	r2, #2
 800106a:	e7b1      	b.n	8000fd0 <__aeabi_ddiv+0x7c>
 800106c:	4659      	mov	r1, fp
 800106e:	4301      	orrs	r1, r0
 8001070:	d01e      	beq.n	80010b0 <__aeabi_ddiv+0x15c>
 8001072:	465b      	mov	r3, fp
 8001074:	2b00      	cmp	r3, #0
 8001076:	d100      	bne.n	800107a <__aeabi_ddiv+0x126>
 8001078:	e19e      	b.n	80013b8 <__aeabi_ddiv+0x464>
 800107a:	4658      	mov	r0, fp
 800107c:	f001 fa54 	bl	8002528 <__clzsi2>
 8001080:	0003      	movs	r3, r0
 8001082:	3b0b      	subs	r3, #11
 8001084:	2b1c      	cmp	r3, #28
 8001086:	dd00      	ble.n	800108a <__aeabi_ddiv+0x136>
 8001088:	e18f      	b.n	80013aa <__aeabi_ddiv+0x456>
 800108a:	0002      	movs	r2, r0
 800108c:	4659      	mov	r1, fp
 800108e:	3a08      	subs	r2, #8
 8001090:	4091      	lsls	r1, r2
 8001092:	468b      	mov	fp, r1
 8001094:	211d      	movs	r1, #29
 8001096:	1acb      	subs	r3, r1, r3
 8001098:	4651      	mov	r1, sl
 800109a:	40d9      	lsrs	r1, r3
 800109c:	000b      	movs	r3, r1
 800109e:	4659      	mov	r1, fp
 80010a0:	430b      	orrs	r3, r1
 80010a2:	4651      	mov	r1, sl
 80010a4:	469b      	mov	fp, r3
 80010a6:	4091      	lsls	r1, r2
 80010a8:	4b26      	ldr	r3, [pc, #152]	; (8001144 <__aeabi_ddiv+0x1f0>)
 80010aa:	2200      	movs	r2, #0
 80010ac:	1a1b      	subs	r3, r3, r0
 80010ae:	e78f      	b.n	8000fd0 <__aeabi_ddiv+0x7c>
 80010b0:	2300      	movs	r3, #0
 80010b2:	2201      	movs	r2, #1
 80010b4:	469b      	mov	fp, r3
 80010b6:	e78b      	b.n	8000fd0 <__aeabi_ddiv+0x7c>
 80010b8:	4651      	mov	r1, sl
 80010ba:	2203      	movs	r2, #3
 80010bc:	e788      	b.n	8000fd0 <__aeabi_ddiv+0x7c>
 80010be:	2300      	movs	r3, #0
 80010c0:	4698      	mov	r8, r3
 80010c2:	3301      	adds	r3, #1
 80010c4:	2604      	movs	r6, #4
 80010c6:	2400      	movs	r4, #0
 80010c8:	9303      	str	r3, [sp, #12]
 80010ca:	e767      	b.n	8000f9c <__aeabi_ddiv+0x48>
 80010cc:	2303      	movs	r3, #3
 80010ce:	46b1      	mov	r9, r6
 80010d0:	9303      	str	r3, [sp, #12]
 80010d2:	260c      	movs	r6, #12
 80010d4:	e762      	b.n	8000f9c <__aeabi_ddiv+0x48>
 80010d6:	2a03      	cmp	r2, #3
 80010d8:	d100      	bne.n	80010dc <__aeabi_ddiv+0x188>
 80010da:	e25c      	b.n	8001596 <__aeabi_ddiv+0x642>
 80010dc:	9b01      	ldr	r3, [sp, #4]
 80010de:	2a01      	cmp	r2, #1
 80010e0:	d000      	beq.n	80010e4 <__aeabi_ddiv+0x190>
 80010e2:	e1e4      	b.n	80014ae <__aeabi_ddiv+0x55a>
 80010e4:	4013      	ands	r3, r2
 80010e6:	469c      	mov	ip, r3
 80010e8:	2300      	movs	r3, #0
 80010ea:	2400      	movs	r4, #0
 80010ec:	2200      	movs	r2, #0
 80010ee:	4698      	mov	r8, r3
 80010f0:	2100      	movs	r1, #0
 80010f2:	0312      	lsls	r2, r2, #12
 80010f4:	0b13      	lsrs	r3, r2, #12
 80010f6:	0d0a      	lsrs	r2, r1, #20
 80010f8:	0512      	lsls	r2, r2, #20
 80010fa:	431a      	orrs	r2, r3
 80010fc:	0523      	lsls	r3, r4, #20
 80010fe:	4c12      	ldr	r4, [pc, #72]	; (8001148 <__aeabi_ddiv+0x1f4>)
 8001100:	4640      	mov	r0, r8
 8001102:	4022      	ands	r2, r4
 8001104:	4313      	orrs	r3, r2
 8001106:	4662      	mov	r2, ip
 8001108:	005b      	lsls	r3, r3, #1
 800110a:	07d2      	lsls	r2, r2, #31
 800110c:	085b      	lsrs	r3, r3, #1
 800110e:	4313      	orrs	r3, r2
 8001110:	0019      	movs	r1, r3
 8001112:	b007      	add	sp, #28
 8001114:	bc3c      	pop	{r2, r3, r4, r5}
 8001116:	4690      	mov	r8, r2
 8001118:	4699      	mov	r9, r3
 800111a:	46a2      	mov	sl, r4
 800111c:	46ab      	mov	fp, r5
 800111e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001120:	2300      	movs	r3, #0
 8001122:	2280      	movs	r2, #128	; 0x80
 8001124:	469c      	mov	ip, r3
 8001126:	0312      	lsls	r2, r2, #12
 8001128:	4698      	mov	r8, r3
 800112a:	4c03      	ldr	r4, [pc, #12]	; (8001138 <__aeabi_ddiv+0x1e4>)
 800112c:	e7e0      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 800112e:	2300      	movs	r3, #0
 8001130:	4c01      	ldr	r4, [pc, #4]	; (8001138 <__aeabi_ddiv+0x1e4>)
 8001132:	2200      	movs	r2, #0
 8001134:	4698      	mov	r8, r3
 8001136:	e7db      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001138:	000007ff 	.word	0x000007ff
 800113c:	fffffc01 	.word	0xfffffc01
 8001140:	08006040 	.word	0x08006040
 8001144:	fffffc0d 	.word	0xfffffc0d
 8001148:	800fffff 	.word	0x800fffff
 800114c:	45d9      	cmp	r9, fp
 800114e:	d900      	bls.n	8001152 <__aeabi_ddiv+0x1fe>
 8001150:	e139      	b.n	80013c6 <__aeabi_ddiv+0x472>
 8001152:	d100      	bne.n	8001156 <__aeabi_ddiv+0x202>
 8001154:	e134      	b.n	80013c0 <__aeabi_ddiv+0x46c>
 8001156:	2300      	movs	r3, #0
 8001158:	4646      	mov	r6, r8
 800115a:	464d      	mov	r5, r9
 800115c:	469a      	mov	sl, r3
 800115e:	3c01      	subs	r4, #1
 8001160:	465b      	mov	r3, fp
 8001162:	0e0a      	lsrs	r2, r1, #24
 8001164:	021b      	lsls	r3, r3, #8
 8001166:	431a      	orrs	r2, r3
 8001168:	020b      	lsls	r3, r1, #8
 800116a:	0c17      	lsrs	r7, r2, #16
 800116c:	9303      	str	r3, [sp, #12]
 800116e:	0413      	lsls	r3, r2, #16
 8001170:	0c1b      	lsrs	r3, r3, #16
 8001172:	0039      	movs	r1, r7
 8001174:	0028      	movs	r0, r5
 8001176:	4690      	mov	r8, r2
 8001178:	9301      	str	r3, [sp, #4]
 800117a:	f7fe ffe1 	bl	8000140 <__udivsi3>
 800117e:	0002      	movs	r2, r0
 8001180:	9b01      	ldr	r3, [sp, #4]
 8001182:	4683      	mov	fp, r0
 8001184:	435a      	muls	r2, r3
 8001186:	0028      	movs	r0, r5
 8001188:	0039      	movs	r1, r7
 800118a:	4691      	mov	r9, r2
 800118c:	f7ff f85e 	bl	800024c <__aeabi_uidivmod>
 8001190:	0c35      	lsrs	r5, r6, #16
 8001192:	0409      	lsls	r1, r1, #16
 8001194:	430d      	orrs	r5, r1
 8001196:	45a9      	cmp	r9, r5
 8001198:	d90d      	bls.n	80011b6 <__aeabi_ddiv+0x262>
 800119a:	465b      	mov	r3, fp
 800119c:	4445      	add	r5, r8
 800119e:	3b01      	subs	r3, #1
 80011a0:	45a8      	cmp	r8, r5
 80011a2:	d900      	bls.n	80011a6 <__aeabi_ddiv+0x252>
 80011a4:	e13a      	b.n	800141c <__aeabi_ddiv+0x4c8>
 80011a6:	45a9      	cmp	r9, r5
 80011a8:	d800      	bhi.n	80011ac <__aeabi_ddiv+0x258>
 80011aa:	e137      	b.n	800141c <__aeabi_ddiv+0x4c8>
 80011ac:	2302      	movs	r3, #2
 80011ae:	425b      	negs	r3, r3
 80011b0:	469c      	mov	ip, r3
 80011b2:	4445      	add	r5, r8
 80011b4:	44e3      	add	fp, ip
 80011b6:	464b      	mov	r3, r9
 80011b8:	1aeb      	subs	r3, r5, r3
 80011ba:	0039      	movs	r1, r7
 80011bc:	0018      	movs	r0, r3
 80011be:	9304      	str	r3, [sp, #16]
 80011c0:	f7fe ffbe 	bl	8000140 <__udivsi3>
 80011c4:	9b01      	ldr	r3, [sp, #4]
 80011c6:	0005      	movs	r5, r0
 80011c8:	4343      	muls	r3, r0
 80011ca:	0039      	movs	r1, r7
 80011cc:	9804      	ldr	r0, [sp, #16]
 80011ce:	4699      	mov	r9, r3
 80011d0:	f7ff f83c 	bl	800024c <__aeabi_uidivmod>
 80011d4:	0433      	lsls	r3, r6, #16
 80011d6:	0409      	lsls	r1, r1, #16
 80011d8:	0c1b      	lsrs	r3, r3, #16
 80011da:	430b      	orrs	r3, r1
 80011dc:	4599      	cmp	r9, r3
 80011de:	d909      	bls.n	80011f4 <__aeabi_ddiv+0x2a0>
 80011e0:	4443      	add	r3, r8
 80011e2:	1e6a      	subs	r2, r5, #1
 80011e4:	4598      	cmp	r8, r3
 80011e6:	d900      	bls.n	80011ea <__aeabi_ddiv+0x296>
 80011e8:	e11a      	b.n	8001420 <__aeabi_ddiv+0x4cc>
 80011ea:	4599      	cmp	r9, r3
 80011ec:	d800      	bhi.n	80011f0 <__aeabi_ddiv+0x29c>
 80011ee:	e117      	b.n	8001420 <__aeabi_ddiv+0x4cc>
 80011f0:	3d02      	subs	r5, #2
 80011f2:	4443      	add	r3, r8
 80011f4:	464a      	mov	r2, r9
 80011f6:	1a9b      	subs	r3, r3, r2
 80011f8:	465a      	mov	r2, fp
 80011fa:	0412      	lsls	r2, r2, #16
 80011fc:	432a      	orrs	r2, r5
 80011fe:	9903      	ldr	r1, [sp, #12]
 8001200:	4693      	mov	fp, r2
 8001202:	0c10      	lsrs	r0, r2, #16
 8001204:	0c0a      	lsrs	r2, r1, #16
 8001206:	4691      	mov	r9, r2
 8001208:	0409      	lsls	r1, r1, #16
 800120a:	465a      	mov	r2, fp
 800120c:	0c09      	lsrs	r1, r1, #16
 800120e:	464e      	mov	r6, r9
 8001210:	000d      	movs	r5, r1
 8001212:	0412      	lsls	r2, r2, #16
 8001214:	0c12      	lsrs	r2, r2, #16
 8001216:	4345      	muls	r5, r0
 8001218:	9105      	str	r1, [sp, #20]
 800121a:	4351      	muls	r1, r2
 800121c:	4372      	muls	r2, r6
 800121e:	4370      	muls	r0, r6
 8001220:	1952      	adds	r2, r2, r5
 8001222:	0c0e      	lsrs	r6, r1, #16
 8001224:	18b2      	adds	r2, r6, r2
 8001226:	4295      	cmp	r5, r2
 8001228:	d903      	bls.n	8001232 <__aeabi_ddiv+0x2de>
 800122a:	2580      	movs	r5, #128	; 0x80
 800122c:	026d      	lsls	r5, r5, #9
 800122e:	46ac      	mov	ip, r5
 8001230:	4460      	add	r0, ip
 8001232:	0c15      	lsrs	r5, r2, #16
 8001234:	0409      	lsls	r1, r1, #16
 8001236:	0412      	lsls	r2, r2, #16
 8001238:	0c09      	lsrs	r1, r1, #16
 800123a:	1828      	adds	r0, r5, r0
 800123c:	1852      	adds	r2, r2, r1
 800123e:	4283      	cmp	r3, r0
 8001240:	d200      	bcs.n	8001244 <__aeabi_ddiv+0x2f0>
 8001242:	e0ce      	b.n	80013e2 <__aeabi_ddiv+0x48e>
 8001244:	d100      	bne.n	8001248 <__aeabi_ddiv+0x2f4>
 8001246:	e0c8      	b.n	80013da <__aeabi_ddiv+0x486>
 8001248:	1a1d      	subs	r5, r3, r0
 800124a:	4653      	mov	r3, sl
 800124c:	1a9e      	subs	r6, r3, r2
 800124e:	45b2      	cmp	sl, r6
 8001250:	4192      	sbcs	r2, r2
 8001252:	4252      	negs	r2, r2
 8001254:	1aab      	subs	r3, r5, r2
 8001256:	469a      	mov	sl, r3
 8001258:	4598      	cmp	r8, r3
 800125a:	d100      	bne.n	800125e <__aeabi_ddiv+0x30a>
 800125c:	e117      	b.n	800148e <__aeabi_ddiv+0x53a>
 800125e:	0039      	movs	r1, r7
 8001260:	0018      	movs	r0, r3
 8001262:	f7fe ff6d 	bl	8000140 <__udivsi3>
 8001266:	9b01      	ldr	r3, [sp, #4]
 8001268:	0005      	movs	r5, r0
 800126a:	4343      	muls	r3, r0
 800126c:	0039      	movs	r1, r7
 800126e:	4650      	mov	r0, sl
 8001270:	9304      	str	r3, [sp, #16]
 8001272:	f7fe ffeb 	bl	800024c <__aeabi_uidivmod>
 8001276:	9804      	ldr	r0, [sp, #16]
 8001278:	040b      	lsls	r3, r1, #16
 800127a:	0c31      	lsrs	r1, r6, #16
 800127c:	4319      	orrs	r1, r3
 800127e:	4288      	cmp	r0, r1
 8001280:	d909      	bls.n	8001296 <__aeabi_ddiv+0x342>
 8001282:	4441      	add	r1, r8
 8001284:	1e6b      	subs	r3, r5, #1
 8001286:	4588      	cmp	r8, r1
 8001288:	d900      	bls.n	800128c <__aeabi_ddiv+0x338>
 800128a:	e107      	b.n	800149c <__aeabi_ddiv+0x548>
 800128c:	4288      	cmp	r0, r1
 800128e:	d800      	bhi.n	8001292 <__aeabi_ddiv+0x33e>
 8001290:	e104      	b.n	800149c <__aeabi_ddiv+0x548>
 8001292:	3d02      	subs	r5, #2
 8001294:	4441      	add	r1, r8
 8001296:	9b04      	ldr	r3, [sp, #16]
 8001298:	1acb      	subs	r3, r1, r3
 800129a:	0018      	movs	r0, r3
 800129c:	0039      	movs	r1, r7
 800129e:	9304      	str	r3, [sp, #16]
 80012a0:	f7fe ff4e 	bl	8000140 <__udivsi3>
 80012a4:	9b01      	ldr	r3, [sp, #4]
 80012a6:	4682      	mov	sl, r0
 80012a8:	4343      	muls	r3, r0
 80012aa:	0039      	movs	r1, r7
 80012ac:	9804      	ldr	r0, [sp, #16]
 80012ae:	9301      	str	r3, [sp, #4]
 80012b0:	f7fe ffcc 	bl	800024c <__aeabi_uidivmod>
 80012b4:	9801      	ldr	r0, [sp, #4]
 80012b6:	040b      	lsls	r3, r1, #16
 80012b8:	0431      	lsls	r1, r6, #16
 80012ba:	0c09      	lsrs	r1, r1, #16
 80012bc:	4319      	orrs	r1, r3
 80012be:	4288      	cmp	r0, r1
 80012c0:	d90d      	bls.n	80012de <__aeabi_ddiv+0x38a>
 80012c2:	4653      	mov	r3, sl
 80012c4:	4441      	add	r1, r8
 80012c6:	3b01      	subs	r3, #1
 80012c8:	4588      	cmp	r8, r1
 80012ca:	d900      	bls.n	80012ce <__aeabi_ddiv+0x37a>
 80012cc:	e0e8      	b.n	80014a0 <__aeabi_ddiv+0x54c>
 80012ce:	4288      	cmp	r0, r1
 80012d0:	d800      	bhi.n	80012d4 <__aeabi_ddiv+0x380>
 80012d2:	e0e5      	b.n	80014a0 <__aeabi_ddiv+0x54c>
 80012d4:	2302      	movs	r3, #2
 80012d6:	425b      	negs	r3, r3
 80012d8:	469c      	mov	ip, r3
 80012da:	4441      	add	r1, r8
 80012dc:	44e2      	add	sl, ip
 80012de:	9b01      	ldr	r3, [sp, #4]
 80012e0:	042d      	lsls	r5, r5, #16
 80012e2:	1ace      	subs	r6, r1, r3
 80012e4:	4651      	mov	r1, sl
 80012e6:	4329      	orrs	r1, r5
 80012e8:	9d05      	ldr	r5, [sp, #20]
 80012ea:	464f      	mov	r7, r9
 80012ec:	002a      	movs	r2, r5
 80012ee:	040b      	lsls	r3, r1, #16
 80012f0:	0c08      	lsrs	r0, r1, #16
 80012f2:	0c1b      	lsrs	r3, r3, #16
 80012f4:	435a      	muls	r2, r3
 80012f6:	4345      	muls	r5, r0
 80012f8:	437b      	muls	r3, r7
 80012fa:	4378      	muls	r0, r7
 80012fc:	195b      	adds	r3, r3, r5
 80012fe:	0c17      	lsrs	r7, r2, #16
 8001300:	18fb      	adds	r3, r7, r3
 8001302:	429d      	cmp	r5, r3
 8001304:	d903      	bls.n	800130e <__aeabi_ddiv+0x3ba>
 8001306:	2580      	movs	r5, #128	; 0x80
 8001308:	026d      	lsls	r5, r5, #9
 800130a:	46ac      	mov	ip, r5
 800130c:	4460      	add	r0, ip
 800130e:	0c1d      	lsrs	r5, r3, #16
 8001310:	0412      	lsls	r2, r2, #16
 8001312:	041b      	lsls	r3, r3, #16
 8001314:	0c12      	lsrs	r2, r2, #16
 8001316:	1828      	adds	r0, r5, r0
 8001318:	189b      	adds	r3, r3, r2
 800131a:	4286      	cmp	r6, r0
 800131c:	d200      	bcs.n	8001320 <__aeabi_ddiv+0x3cc>
 800131e:	e093      	b.n	8001448 <__aeabi_ddiv+0x4f4>
 8001320:	d100      	bne.n	8001324 <__aeabi_ddiv+0x3d0>
 8001322:	e08e      	b.n	8001442 <__aeabi_ddiv+0x4ee>
 8001324:	2301      	movs	r3, #1
 8001326:	4319      	orrs	r1, r3
 8001328:	4ba0      	ldr	r3, [pc, #640]	; (80015ac <__aeabi_ddiv+0x658>)
 800132a:	18e3      	adds	r3, r4, r3
 800132c:	2b00      	cmp	r3, #0
 800132e:	dc00      	bgt.n	8001332 <__aeabi_ddiv+0x3de>
 8001330:	e099      	b.n	8001466 <__aeabi_ddiv+0x512>
 8001332:	074a      	lsls	r2, r1, #29
 8001334:	d000      	beq.n	8001338 <__aeabi_ddiv+0x3e4>
 8001336:	e09e      	b.n	8001476 <__aeabi_ddiv+0x522>
 8001338:	465a      	mov	r2, fp
 800133a:	01d2      	lsls	r2, r2, #7
 800133c:	d506      	bpl.n	800134c <__aeabi_ddiv+0x3f8>
 800133e:	465a      	mov	r2, fp
 8001340:	4b9b      	ldr	r3, [pc, #620]	; (80015b0 <__aeabi_ddiv+0x65c>)
 8001342:	401a      	ands	r2, r3
 8001344:	2380      	movs	r3, #128	; 0x80
 8001346:	4693      	mov	fp, r2
 8001348:	00db      	lsls	r3, r3, #3
 800134a:	18e3      	adds	r3, r4, r3
 800134c:	4a99      	ldr	r2, [pc, #612]	; (80015b4 <__aeabi_ddiv+0x660>)
 800134e:	4293      	cmp	r3, r2
 8001350:	dd68      	ble.n	8001424 <__aeabi_ddiv+0x4d0>
 8001352:	2301      	movs	r3, #1
 8001354:	9a02      	ldr	r2, [sp, #8]
 8001356:	4c98      	ldr	r4, [pc, #608]	; (80015b8 <__aeabi_ddiv+0x664>)
 8001358:	401a      	ands	r2, r3
 800135a:	2300      	movs	r3, #0
 800135c:	4694      	mov	ip, r2
 800135e:	4698      	mov	r8, r3
 8001360:	2200      	movs	r2, #0
 8001362:	e6c5      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001364:	2280      	movs	r2, #128	; 0x80
 8001366:	464b      	mov	r3, r9
 8001368:	0312      	lsls	r2, r2, #12
 800136a:	4213      	tst	r3, r2
 800136c:	d00a      	beq.n	8001384 <__aeabi_ddiv+0x430>
 800136e:	465b      	mov	r3, fp
 8001370:	4213      	tst	r3, r2
 8001372:	d106      	bne.n	8001382 <__aeabi_ddiv+0x42e>
 8001374:	431a      	orrs	r2, r3
 8001376:	0312      	lsls	r2, r2, #12
 8001378:	0b12      	lsrs	r2, r2, #12
 800137a:	46ac      	mov	ip, r5
 800137c:	4688      	mov	r8, r1
 800137e:	4c8e      	ldr	r4, [pc, #568]	; (80015b8 <__aeabi_ddiv+0x664>)
 8001380:	e6b6      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001382:	464b      	mov	r3, r9
 8001384:	431a      	orrs	r2, r3
 8001386:	0312      	lsls	r2, r2, #12
 8001388:	0b12      	lsrs	r2, r2, #12
 800138a:	46bc      	mov	ip, r7
 800138c:	4c8a      	ldr	r4, [pc, #552]	; (80015b8 <__aeabi_ddiv+0x664>)
 800138e:	e6af      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001390:	0003      	movs	r3, r0
 8001392:	465a      	mov	r2, fp
 8001394:	3b28      	subs	r3, #40	; 0x28
 8001396:	409a      	lsls	r2, r3
 8001398:	2300      	movs	r3, #0
 800139a:	4691      	mov	r9, r2
 800139c:	4698      	mov	r8, r3
 800139e:	e657      	b.n	8001050 <__aeabi_ddiv+0xfc>
 80013a0:	4658      	mov	r0, fp
 80013a2:	f001 f8c1 	bl	8002528 <__clzsi2>
 80013a6:	3020      	adds	r0, #32
 80013a8:	e640      	b.n	800102c <__aeabi_ddiv+0xd8>
 80013aa:	0003      	movs	r3, r0
 80013ac:	4652      	mov	r2, sl
 80013ae:	3b28      	subs	r3, #40	; 0x28
 80013b0:	409a      	lsls	r2, r3
 80013b2:	2100      	movs	r1, #0
 80013b4:	4693      	mov	fp, r2
 80013b6:	e677      	b.n	80010a8 <__aeabi_ddiv+0x154>
 80013b8:	f001 f8b6 	bl	8002528 <__clzsi2>
 80013bc:	3020      	adds	r0, #32
 80013be:	e65f      	b.n	8001080 <__aeabi_ddiv+0x12c>
 80013c0:	4588      	cmp	r8, r1
 80013c2:	d200      	bcs.n	80013c6 <__aeabi_ddiv+0x472>
 80013c4:	e6c7      	b.n	8001156 <__aeabi_ddiv+0x202>
 80013c6:	464b      	mov	r3, r9
 80013c8:	07de      	lsls	r6, r3, #31
 80013ca:	085d      	lsrs	r5, r3, #1
 80013cc:	4643      	mov	r3, r8
 80013ce:	085b      	lsrs	r3, r3, #1
 80013d0:	431e      	orrs	r6, r3
 80013d2:	4643      	mov	r3, r8
 80013d4:	07db      	lsls	r3, r3, #31
 80013d6:	469a      	mov	sl, r3
 80013d8:	e6c2      	b.n	8001160 <__aeabi_ddiv+0x20c>
 80013da:	2500      	movs	r5, #0
 80013dc:	4592      	cmp	sl, r2
 80013de:	d300      	bcc.n	80013e2 <__aeabi_ddiv+0x48e>
 80013e0:	e733      	b.n	800124a <__aeabi_ddiv+0x2f6>
 80013e2:	9e03      	ldr	r6, [sp, #12]
 80013e4:	4659      	mov	r1, fp
 80013e6:	46b4      	mov	ip, r6
 80013e8:	44e2      	add	sl, ip
 80013ea:	45b2      	cmp	sl, r6
 80013ec:	41ad      	sbcs	r5, r5
 80013ee:	426d      	negs	r5, r5
 80013f0:	4445      	add	r5, r8
 80013f2:	18eb      	adds	r3, r5, r3
 80013f4:	3901      	subs	r1, #1
 80013f6:	4598      	cmp	r8, r3
 80013f8:	d207      	bcs.n	800140a <__aeabi_ddiv+0x4b6>
 80013fa:	4298      	cmp	r0, r3
 80013fc:	d900      	bls.n	8001400 <__aeabi_ddiv+0x4ac>
 80013fe:	e07f      	b.n	8001500 <__aeabi_ddiv+0x5ac>
 8001400:	d100      	bne.n	8001404 <__aeabi_ddiv+0x4b0>
 8001402:	e0bc      	b.n	800157e <__aeabi_ddiv+0x62a>
 8001404:	1a1d      	subs	r5, r3, r0
 8001406:	468b      	mov	fp, r1
 8001408:	e71f      	b.n	800124a <__aeabi_ddiv+0x2f6>
 800140a:	4598      	cmp	r8, r3
 800140c:	d1fa      	bne.n	8001404 <__aeabi_ddiv+0x4b0>
 800140e:	9d03      	ldr	r5, [sp, #12]
 8001410:	4555      	cmp	r5, sl
 8001412:	d9f2      	bls.n	80013fa <__aeabi_ddiv+0x4a6>
 8001414:	4643      	mov	r3, r8
 8001416:	468b      	mov	fp, r1
 8001418:	1a1d      	subs	r5, r3, r0
 800141a:	e716      	b.n	800124a <__aeabi_ddiv+0x2f6>
 800141c:	469b      	mov	fp, r3
 800141e:	e6ca      	b.n	80011b6 <__aeabi_ddiv+0x262>
 8001420:	0015      	movs	r5, r2
 8001422:	e6e7      	b.n	80011f4 <__aeabi_ddiv+0x2a0>
 8001424:	465a      	mov	r2, fp
 8001426:	08c9      	lsrs	r1, r1, #3
 8001428:	0752      	lsls	r2, r2, #29
 800142a:	430a      	orrs	r2, r1
 800142c:	055b      	lsls	r3, r3, #21
 800142e:	4690      	mov	r8, r2
 8001430:	0d5c      	lsrs	r4, r3, #21
 8001432:	465a      	mov	r2, fp
 8001434:	2301      	movs	r3, #1
 8001436:	9902      	ldr	r1, [sp, #8]
 8001438:	0252      	lsls	r2, r2, #9
 800143a:	4019      	ands	r1, r3
 800143c:	0b12      	lsrs	r2, r2, #12
 800143e:	468c      	mov	ip, r1
 8001440:	e656      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001442:	2b00      	cmp	r3, #0
 8001444:	d100      	bne.n	8001448 <__aeabi_ddiv+0x4f4>
 8001446:	e76f      	b.n	8001328 <__aeabi_ddiv+0x3d4>
 8001448:	4446      	add	r6, r8
 800144a:	1e4a      	subs	r2, r1, #1
 800144c:	45b0      	cmp	r8, r6
 800144e:	d929      	bls.n	80014a4 <__aeabi_ddiv+0x550>
 8001450:	0011      	movs	r1, r2
 8001452:	4286      	cmp	r6, r0
 8001454:	d000      	beq.n	8001458 <__aeabi_ddiv+0x504>
 8001456:	e765      	b.n	8001324 <__aeabi_ddiv+0x3d0>
 8001458:	9a03      	ldr	r2, [sp, #12]
 800145a:	4293      	cmp	r3, r2
 800145c:	d000      	beq.n	8001460 <__aeabi_ddiv+0x50c>
 800145e:	e761      	b.n	8001324 <__aeabi_ddiv+0x3d0>
 8001460:	e762      	b.n	8001328 <__aeabi_ddiv+0x3d4>
 8001462:	2101      	movs	r1, #1
 8001464:	4249      	negs	r1, r1
 8001466:	2001      	movs	r0, #1
 8001468:	1ac2      	subs	r2, r0, r3
 800146a:	2a38      	cmp	r2, #56	; 0x38
 800146c:	dd21      	ble.n	80014b2 <__aeabi_ddiv+0x55e>
 800146e:	9b02      	ldr	r3, [sp, #8]
 8001470:	4003      	ands	r3, r0
 8001472:	469c      	mov	ip, r3
 8001474:	e638      	b.n	80010e8 <__aeabi_ddiv+0x194>
 8001476:	220f      	movs	r2, #15
 8001478:	400a      	ands	r2, r1
 800147a:	2a04      	cmp	r2, #4
 800147c:	d100      	bne.n	8001480 <__aeabi_ddiv+0x52c>
 800147e:	e75b      	b.n	8001338 <__aeabi_ddiv+0x3e4>
 8001480:	000a      	movs	r2, r1
 8001482:	1d11      	adds	r1, r2, #4
 8001484:	4291      	cmp	r1, r2
 8001486:	4192      	sbcs	r2, r2
 8001488:	4252      	negs	r2, r2
 800148a:	4493      	add	fp, r2
 800148c:	e754      	b.n	8001338 <__aeabi_ddiv+0x3e4>
 800148e:	4b47      	ldr	r3, [pc, #284]	; (80015ac <__aeabi_ddiv+0x658>)
 8001490:	18e3      	adds	r3, r4, r3
 8001492:	2b00      	cmp	r3, #0
 8001494:	dde5      	ble.n	8001462 <__aeabi_ddiv+0x50e>
 8001496:	2201      	movs	r2, #1
 8001498:	4252      	negs	r2, r2
 800149a:	e7f2      	b.n	8001482 <__aeabi_ddiv+0x52e>
 800149c:	001d      	movs	r5, r3
 800149e:	e6fa      	b.n	8001296 <__aeabi_ddiv+0x342>
 80014a0:	469a      	mov	sl, r3
 80014a2:	e71c      	b.n	80012de <__aeabi_ddiv+0x38a>
 80014a4:	42b0      	cmp	r0, r6
 80014a6:	d839      	bhi.n	800151c <__aeabi_ddiv+0x5c8>
 80014a8:	d06e      	beq.n	8001588 <__aeabi_ddiv+0x634>
 80014aa:	0011      	movs	r1, r2
 80014ac:	e73a      	b.n	8001324 <__aeabi_ddiv+0x3d0>
 80014ae:	9302      	str	r3, [sp, #8]
 80014b0:	e73a      	b.n	8001328 <__aeabi_ddiv+0x3d4>
 80014b2:	2a1f      	cmp	r2, #31
 80014b4:	dc3c      	bgt.n	8001530 <__aeabi_ddiv+0x5dc>
 80014b6:	2320      	movs	r3, #32
 80014b8:	1a9b      	subs	r3, r3, r2
 80014ba:	000c      	movs	r4, r1
 80014bc:	4658      	mov	r0, fp
 80014be:	4099      	lsls	r1, r3
 80014c0:	4098      	lsls	r0, r3
 80014c2:	1e4b      	subs	r3, r1, #1
 80014c4:	4199      	sbcs	r1, r3
 80014c6:	465b      	mov	r3, fp
 80014c8:	40d4      	lsrs	r4, r2
 80014ca:	40d3      	lsrs	r3, r2
 80014cc:	4320      	orrs	r0, r4
 80014ce:	4308      	orrs	r0, r1
 80014d0:	001a      	movs	r2, r3
 80014d2:	0743      	lsls	r3, r0, #29
 80014d4:	d009      	beq.n	80014ea <__aeabi_ddiv+0x596>
 80014d6:	230f      	movs	r3, #15
 80014d8:	4003      	ands	r3, r0
 80014da:	2b04      	cmp	r3, #4
 80014dc:	d005      	beq.n	80014ea <__aeabi_ddiv+0x596>
 80014de:	0001      	movs	r1, r0
 80014e0:	1d08      	adds	r0, r1, #4
 80014e2:	4288      	cmp	r0, r1
 80014e4:	419b      	sbcs	r3, r3
 80014e6:	425b      	negs	r3, r3
 80014e8:	18d2      	adds	r2, r2, r3
 80014ea:	0213      	lsls	r3, r2, #8
 80014ec:	d53a      	bpl.n	8001564 <__aeabi_ddiv+0x610>
 80014ee:	2301      	movs	r3, #1
 80014f0:	9a02      	ldr	r2, [sp, #8]
 80014f2:	2401      	movs	r4, #1
 80014f4:	401a      	ands	r2, r3
 80014f6:	2300      	movs	r3, #0
 80014f8:	4694      	mov	ip, r2
 80014fa:	4698      	mov	r8, r3
 80014fc:	2200      	movs	r2, #0
 80014fe:	e5f7      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 8001500:	2102      	movs	r1, #2
 8001502:	4249      	negs	r1, r1
 8001504:	468c      	mov	ip, r1
 8001506:	9d03      	ldr	r5, [sp, #12]
 8001508:	44e3      	add	fp, ip
 800150a:	46ac      	mov	ip, r5
 800150c:	44e2      	add	sl, ip
 800150e:	45aa      	cmp	sl, r5
 8001510:	41ad      	sbcs	r5, r5
 8001512:	426d      	negs	r5, r5
 8001514:	4445      	add	r5, r8
 8001516:	18ed      	adds	r5, r5, r3
 8001518:	1a2d      	subs	r5, r5, r0
 800151a:	e696      	b.n	800124a <__aeabi_ddiv+0x2f6>
 800151c:	1e8a      	subs	r2, r1, #2
 800151e:	9903      	ldr	r1, [sp, #12]
 8001520:	004d      	lsls	r5, r1, #1
 8001522:	428d      	cmp	r5, r1
 8001524:	4189      	sbcs	r1, r1
 8001526:	4249      	negs	r1, r1
 8001528:	4441      	add	r1, r8
 800152a:	1876      	adds	r6, r6, r1
 800152c:	9503      	str	r5, [sp, #12]
 800152e:	e78f      	b.n	8001450 <__aeabi_ddiv+0x4fc>
 8001530:	201f      	movs	r0, #31
 8001532:	4240      	negs	r0, r0
 8001534:	1ac3      	subs	r3, r0, r3
 8001536:	4658      	mov	r0, fp
 8001538:	40d8      	lsrs	r0, r3
 800153a:	0003      	movs	r3, r0
 800153c:	2a20      	cmp	r2, #32
 800153e:	d028      	beq.n	8001592 <__aeabi_ddiv+0x63e>
 8001540:	2040      	movs	r0, #64	; 0x40
 8001542:	465d      	mov	r5, fp
 8001544:	1a82      	subs	r2, r0, r2
 8001546:	4095      	lsls	r5, r2
 8001548:	4329      	orrs	r1, r5
 800154a:	1e4a      	subs	r2, r1, #1
 800154c:	4191      	sbcs	r1, r2
 800154e:	4319      	orrs	r1, r3
 8001550:	2307      	movs	r3, #7
 8001552:	2200      	movs	r2, #0
 8001554:	400b      	ands	r3, r1
 8001556:	d009      	beq.n	800156c <__aeabi_ddiv+0x618>
 8001558:	230f      	movs	r3, #15
 800155a:	2200      	movs	r2, #0
 800155c:	400b      	ands	r3, r1
 800155e:	0008      	movs	r0, r1
 8001560:	2b04      	cmp	r3, #4
 8001562:	d1bd      	bne.n	80014e0 <__aeabi_ddiv+0x58c>
 8001564:	0001      	movs	r1, r0
 8001566:	0753      	lsls	r3, r2, #29
 8001568:	0252      	lsls	r2, r2, #9
 800156a:	0b12      	lsrs	r2, r2, #12
 800156c:	08c9      	lsrs	r1, r1, #3
 800156e:	4319      	orrs	r1, r3
 8001570:	2301      	movs	r3, #1
 8001572:	4688      	mov	r8, r1
 8001574:	9902      	ldr	r1, [sp, #8]
 8001576:	2400      	movs	r4, #0
 8001578:	4019      	ands	r1, r3
 800157a:	468c      	mov	ip, r1
 800157c:	e5b8      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 800157e:	4552      	cmp	r2, sl
 8001580:	d8be      	bhi.n	8001500 <__aeabi_ddiv+0x5ac>
 8001582:	468b      	mov	fp, r1
 8001584:	2500      	movs	r5, #0
 8001586:	e660      	b.n	800124a <__aeabi_ddiv+0x2f6>
 8001588:	9d03      	ldr	r5, [sp, #12]
 800158a:	429d      	cmp	r5, r3
 800158c:	d3c6      	bcc.n	800151c <__aeabi_ddiv+0x5c8>
 800158e:	0011      	movs	r1, r2
 8001590:	e762      	b.n	8001458 <__aeabi_ddiv+0x504>
 8001592:	2500      	movs	r5, #0
 8001594:	e7d8      	b.n	8001548 <__aeabi_ddiv+0x5f4>
 8001596:	2280      	movs	r2, #128	; 0x80
 8001598:	465b      	mov	r3, fp
 800159a:	0312      	lsls	r2, r2, #12
 800159c:	431a      	orrs	r2, r3
 800159e:	9b01      	ldr	r3, [sp, #4]
 80015a0:	0312      	lsls	r2, r2, #12
 80015a2:	0b12      	lsrs	r2, r2, #12
 80015a4:	469c      	mov	ip, r3
 80015a6:	4688      	mov	r8, r1
 80015a8:	4c03      	ldr	r4, [pc, #12]	; (80015b8 <__aeabi_ddiv+0x664>)
 80015aa:	e5a1      	b.n	80010f0 <__aeabi_ddiv+0x19c>
 80015ac:	000003ff 	.word	0x000003ff
 80015b0:	feffffff 	.word	0xfeffffff
 80015b4:	000007fe 	.word	0x000007fe
 80015b8:	000007ff 	.word	0x000007ff

080015bc <__eqdf2>:
 80015bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015be:	464f      	mov	r7, r9
 80015c0:	4646      	mov	r6, r8
 80015c2:	46d6      	mov	lr, sl
 80015c4:	005c      	lsls	r4, r3, #1
 80015c6:	b5c0      	push	{r6, r7, lr}
 80015c8:	031f      	lsls	r7, r3, #12
 80015ca:	0fdb      	lsrs	r3, r3, #31
 80015cc:	469a      	mov	sl, r3
 80015ce:	4b17      	ldr	r3, [pc, #92]	; (800162c <__eqdf2+0x70>)
 80015d0:	030e      	lsls	r6, r1, #12
 80015d2:	004d      	lsls	r5, r1, #1
 80015d4:	4684      	mov	ip, r0
 80015d6:	4680      	mov	r8, r0
 80015d8:	0b36      	lsrs	r6, r6, #12
 80015da:	0d6d      	lsrs	r5, r5, #21
 80015dc:	0fc9      	lsrs	r1, r1, #31
 80015de:	4691      	mov	r9, r2
 80015e0:	0b3f      	lsrs	r7, r7, #12
 80015e2:	0d64      	lsrs	r4, r4, #21
 80015e4:	2001      	movs	r0, #1
 80015e6:	429d      	cmp	r5, r3
 80015e8:	d008      	beq.n	80015fc <__eqdf2+0x40>
 80015ea:	429c      	cmp	r4, r3
 80015ec:	d001      	beq.n	80015f2 <__eqdf2+0x36>
 80015ee:	42a5      	cmp	r5, r4
 80015f0:	d00b      	beq.n	800160a <__eqdf2+0x4e>
 80015f2:	bc1c      	pop	{r2, r3, r4}
 80015f4:	4690      	mov	r8, r2
 80015f6:	4699      	mov	r9, r3
 80015f8:	46a2      	mov	sl, r4
 80015fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80015fc:	4663      	mov	r3, ip
 80015fe:	4333      	orrs	r3, r6
 8001600:	d1f7      	bne.n	80015f2 <__eqdf2+0x36>
 8001602:	42ac      	cmp	r4, r5
 8001604:	d1f5      	bne.n	80015f2 <__eqdf2+0x36>
 8001606:	433a      	orrs	r2, r7
 8001608:	d1f3      	bne.n	80015f2 <__eqdf2+0x36>
 800160a:	2001      	movs	r0, #1
 800160c:	42be      	cmp	r6, r7
 800160e:	d1f0      	bne.n	80015f2 <__eqdf2+0x36>
 8001610:	45c8      	cmp	r8, r9
 8001612:	d1ee      	bne.n	80015f2 <__eqdf2+0x36>
 8001614:	4551      	cmp	r1, sl
 8001616:	d007      	beq.n	8001628 <__eqdf2+0x6c>
 8001618:	2d00      	cmp	r5, #0
 800161a:	d1ea      	bne.n	80015f2 <__eqdf2+0x36>
 800161c:	4663      	mov	r3, ip
 800161e:	431e      	orrs	r6, r3
 8001620:	0030      	movs	r0, r6
 8001622:	1e46      	subs	r6, r0, #1
 8001624:	41b0      	sbcs	r0, r6
 8001626:	e7e4      	b.n	80015f2 <__eqdf2+0x36>
 8001628:	2000      	movs	r0, #0
 800162a:	e7e2      	b.n	80015f2 <__eqdf2+0x36>
 800162c:	000007ff 	.word	0x000007ff

08001630 <__gedf2>:
 8001630:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001632:	4645      	mov	r5, r8
 8001634:	46de      	mov	lr, fp
 8001636:	4657      	mov	r7, sl
 8001638:	464e      	mov	r6, r9
 800163a:	b5e0      	push	{r5, r6, r7, lr}
 800163c:	031f      	lsls	r7, r3, #12
 800163e:	0b3d      	lsrs	r5, r7, #12
 8001640:	4f2c      	ldr	r7, [pc, #176]	; (80016f4 <__gedf2+0xc4>)
 8001642:	030e      	lsls	r6, r1, #12
 8001644:	004c      	lsls	r4, r1, #1
 8001646:	46ab      	mov	fp, r5
 8001648:	005d      	lsls	r5, r3, #1
 800164a:	4684      	mov	ip, r0
 800164c:	0b36      	lsrs	r6, r6, #12
 800164e:	0d64      	lsrs	r4, r4, #21
 8001650:	0fc9      	lsrs	r1, r1, #31
 8001652:	4690      	mov	r8, r2
 8001654:	0d6d      	lsrs	r5, r5, #21
 8001656:	0fdb      	lsrs	r3, r3, #31
 8001658:	42bc      	cmp	r4, r7
 800165a:	d02a      	beq.n	80016b2 <__gedf2+0x82>
 800165c:	4f25      	ldr	r7, [pc, #148]	; (80016f4 <__gedf2+0xc4>)
 800165e:	42bd      	cmp	r5, r7
 8001660:	d02d      	beq.n	80016be <__gedf2+0x8e>
 8001662:	2c00      	cmp	r4, #0
 8001664:	d10f      	bne.n	8001686 <__gedf2+0x56>
 8001666:	4330      	orrs	r0, r6
 8001668:	0007      	movs	r7, r0
 800166a:	4681      	mov	r9, r0
 800166c:	4278      	negs	r0, r7
 800166e:	4178      	adcs	r0, r7
 8001670:	b2c0      	uxtb	r0, r0
 8001672:	2d00      	cmp	r5, #0
 8001674:	d117      	bne.n	80016a6 <__gedf2+0x76>
 8001676:	465f      	mov	r7, fp
 8001678:	433a      	orrs	r2, r7
 800167a:	d114      	bne.n	80016a6 <__gedf2+0x76>
 800167c:	464b      	mov	r3, r9
 800167e:	2000      	movs	r0, #0
 8001680:	2b00      	cmp	r3, #0
 8001682:	d00a      	beq.n	800169a <__gedf2+0x6a>
 8001684:	e006      	b.n	8001694 <__gedf2+0x64>
 8001686:	2d00      	cmp	r5, #0
 8001688:	d102      	bne.n	8001690 <__gedf2+0x60>
 800168a:	4658      	mov	r0, fp
 800168c:	4302      	orrs	r2, r0
 800168e:	d001      	beq.n	8001694 <__gedf2+0x64>
 8001690:	4299      	cmp	r1, r3
 8001692:	d018      	beq.n	80016c6 <__gedf2+0x96>
 8001694:	4248      	negs	r0, r1
 8001696:	2101      	movs	r1, #1
 8001698:	4308      	orrs	r0, r1
 800169a:	bc3c      	pop	{r2, r3, r4, r5}
 800169c:	4690      	mov	r8, r2
 800169e:	4699      	mov	r9, r3
 80016a0:	46a2      	mov	sl, r4
 80016a2:	46ab      	mov	fp, r5
 80016a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016a6:	2800      	cmp	r0, #0
 80016a8:	d0f2      	beq.n	8001690 <__gedf2+0x60>
 80016aa:	2001      	movs	r0, #1
 80016ac:	3b01      	subs	r3, #1
 80016ae:	4318      	orrs	r0, r3
 80016b0:	e7f3      	b.n	800169a <__gedf2+0x6a>
 80016b2:	0037      	movs	r7, r6
 80016b4:	4307      	orrs	r7, r0
 80016b6:	d0d1      	beq.n	800165c <__gedf2+0x2c>
 80016b8:	2002      	movs	r0, #2
 80016ba:	4240      	negs	r0, r0
 80016bc:	e7ed      	b.n	800169a <__gedf2+0x6a>
 80016be:	465f      	mov	r7, fp
 80016c0:	4317      	orrs	r7, r2
 80016c2:	d0ce      	beq.n	8001662 <__gedf2+0x32>
 80016c4:	e7f8      	b.n	80016b8 <__gedf2+0x88>
 80016c6:	42ac      	cmp	r4, r5
 80016c8:	dce4      	bgt.n	8001694 <__gedf2+0x64>
 80016ca:	da03      	bge.n	80016d4 <__gedf2+0xa4>
 80016cc:	1e48      	subs	r0, r1, #1
 80016ce:	2101      	movs	r1, #1
 80016d0:	4308      	orrs	r0, r1
 80016d2:	e7e2      	b.n	800169a <__gedf2+0x6a>
 80016d4:	455e      	cmp	r6, fp
 80016d6:	d8dd      	bhi.n	8001694 <__gedf2+0x64>
 80016d8:	d006      	beq.n	80016e8 <__gedf2+0xb8>
 80016da:	2000      	movs	r0, #0
 80016dc:	455e      	cmp	r6, fp
 80016de:	d2dc      	bcs.n	800169a <__gedf2+0x6a>
 80016e0:	2301      	movs	r3, #1
 80016e2:	1e48      	subs	r0, r1, #1
 80016e4:	4318      	orrs	r0, r3
 80016e6:	e7d8      	b.n	800169a <__gedf2+0x6a>
 80016e8:	45c4      	cmp	ip, r8
 80016ea:	d8d3      	bhi.n	8001694 <__gedf2+0x64>
 80016ec:	2000      	movs	r0, #0
 80016ee:	45c4      	cmp	ip, r8
 80016f0:	d3f6      	bcc.n	80016e0 <__gedf2+0xb0>
 80016f2:	e7d2      	b.n	800169a <__gedf2+0x6a>
 80016f4:	000007ff 	.word	0x000007ff

080016f8 <__ledf2>:
 80016f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80016fa:	464e      	mov	r6, r9
 80016fc:	4645      	mov	r5, r8
 80016fe:	46de      	mov	lr, fp
 8001700:	4657      	mov	r7, sl
 8001702:	005c      	lsls	r4, r3, #1
 8001704:	b5e0      	push	{r5, r6, r7, lr}
 8001706:	031f      	lsls	r7, r3, #12
 8001708:	0fdb      	lsrs	r3, r3, #31
 800170a:	4699      	mov	r9, r3
 800170c:	4b2a      	ldr	r3, [pc, #168]	; (80017b8 <__ledf2+0xc0>)
 800170e:	030e      	lsls	r6, r1, #12
 8001710:	004d      	lsls	r5, r1, #1
 8001712:	0fc9      	lsrs	r1, r1, #31
 8001714:	4684      	mov	ip, r0
 8001716:	0b36      	lsrs	r6, r6, #12
 8001718:	0d6d      	lsrs	r5, r5, #21
 800171a:	468b      	mov	fp, r1
 800171c:	4690      	mov	r8, r2
 800171e:	0b3f      	lsrs	r7, r7, #12
 8001720:	0d64      	lsrs	r4, r4, #21
 8001722:	429d      	cmp	r5, r3
 8001724:	d020      	beq.n	8001768 <__ledf2+0x70>
 8001726:	4b24      	ldr	r3, [pc, #144]	; (80017b8 <__ledf2+0xc0>)
 8001728:	429c      	cmp	r4, r3
 800172a:	d022      	beq.n	8001772 <__ledf2+0x7a>
 800172c:	2d00      	cmp	r5, #0
 800172e:	d112      	bne.n	8001756 <__ledf2+0x5e>
 8001730:	4330      	orrs	r0, r6
 8001732:	4243      	negs	r3, r0
 8001734:	4143      	adcs	r3, r0
 8001736:	b2db      	uxtb	r3, r3
 8001738:	2c00      	cmp	r4, #0
 800173a:	d01f      	beq.n	800177c <__ledf2+0x84>
 800173c:	2b00      	cmp	r3, #0
 800173e:	d00c      	beq.n	800175a <__ledf2+0x62>
 8001740:	464b      	mov	r3, r9
 8001742:	2001      	movs	r0, #1
 8001744:	3b01      	subs	r3, #1
 8001746:	4303      	orrs	r3, r0
 8001748:	0018      	movs	r0, r3
 800174a:	bc3c      	pop	{r2, r3, r4, r5}
 800174c:	4690      	mov	r8, r2
 800174e:	4699      	mov	r9, r3
 8001750:	46a2      	mov	sl, r4
 8001752:	46ab      	mov	fp, r5
 8001754:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001756:	2c00      	cmp	r4, #0
 8001758:	d016      	beq.n	8001788 <__ledf2+0x90>
 800175a:	45cb      	cmp	fp, r9
 800175c:	d017      	beq.n	800178e <__ledf2+0x96>
 800175e:	465b      	mov	r3, fp
 8001760:	4259      	negs	r1, r3
 8001762:	2301      	movs	r3, #1
 8001764:	430b      	orrs	r3, r1
 8001766:	e7ef      	b.n	8001748 <__ledf2+0x50>
 8001768:	0031      	movs	r1, r6
 800176a:	2302      	movs	r3, #2
 800176c:	4301      	orrs	r1, r0
 800176e:	d1eb      	bne.n	8001748 <__ledf2+0x50>
 8001770:	e7d9      	b.n	8001726 <__ledf2+0x2e>
 8001772:	0039      	movs	r1, r7
 8001774:	2302      	movs	r3, #2
 8001776:	4311      	orrs	r1, r2
 8001778:	d1e6      	bne.n	8001748 <__ledf2+0x50>
 800177a:	e7d7      	b.n	800172c <__ledf2+0x34>
 800177c:	433a      	orrs	r2, r7
 800177e:	d1dd      	bne.n	800173c <__ledf2+0x44>
 8001780:	2300      	movs	r3, #0
 8001782:	2800      	cmp	r0, #0
 8001784:	d0e0      	beq.n	8001748 <__ledf2+0x50>
 8001786:	e7ea      	b.n	800175e <__ledf2+0x66>
 8001788:	433a      	orrs	r2, r7
 800178a:	d1e6      	bne.n	800175a <__ledf2+0x62>
 800178c:	e7e7      	b.n	800175e <__ledf2+0x66>
 800178e:	42a5      	cmp	r5, r4
 8001790:	dce5      	bgt.n	800175e <__ledf2+0x66>
 8001792:	db05      	blt.n	80017a0 <__ledf2+0xa8>
 8001794:	42be      	cmp	r6, r7
 8001796:	d8e2      	bhi.n	800175e <__ledf2+0x66>
 8001798:	d007      	beq.n	80017aa <__ledf2+0xb2>
 800179a:	2300      	movs	r3, #0
 800179c:	42be      	cmp	r6, r7
 800179e:	d2d3      	bcs.n	8001748 <__ledf2+0x50>
 80017a0:	4659      	mov	r1, fp
 80017a2:	2301      	movs	r3, #1
 80017a4:	3901      	subs	r1, #1
 80017a6:	430b      	orrs	r3, r1
 80017a8:	e7ce      	b.n	8001748 <__ledf2+0x50>
 80017aa:	45c4      	cmp	ip, r8
 80017ac:	d8d7      	bhi.n	800175e <__ledf2+0x66>
 80017ae:	2300      	movs	r3, #0
 80017b0:	45c4      	cmp	ip, r8
 80017b2:	d3f5      	bcc.n	80017a0 <__ledf2+0xa8>
 80017b4:	e7c8      	b.n	8001748 <__ledf2+0x50>
 80017b6:	46c0      	nop			; (mov r8, r8)
 80017b8:	000007ff 	.word	0x000007ff

080017bc <__aeabi_dmul>:
 80017bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017be:	4657      	mov	r7, sl
 80017c0:	4645      	mov	r5, r8
 80017c2:	46de      	mov	lr, fp
 80017c4:	464e      	mov	r6, r9
 80017c6:	b5e0      	push	{r5, r6, r7, lr}
 80017c8:	030c      	lsls	r4, r1, #12
 80017ca:	4698      	mov	r8, r3
 80017cc:	004e      	lsls	r6, r1, #1
 80017ce:	0b23      	lsrs	r3, r4, #12
 80017d0:	b087      	sub	sp, #28
 80017d2:	0007      	movs	r7, r0
 80017d4:	4692      	mov	sl, r2
 80017d6:	469b      	mov	fp, r3
 80017d8:	0d76      	lsrs	r6, r6, #21
 80017da:	0fcd      	lsrs	r5, r1, #31
 80017dc:	2e00      	cmp	r6, #0
 80017de:	d06b      	beq.n	80018b8 <__aeabi_dmul+0xfc>
 80017e0:	4b6d      	ldr	r3, [pc, #436]	; (8001998 <__aeabi_dmul+0x1dc>)
 80017e2:	429e      	cmp	r6, r3
 80017e4:	d035      	beq.n	8001852 <__aeabi_dmul+0x96>
 80017e6:	2480      	movs	r4, #128	; 0x80
 80017e8:	465b      	mov	r3, fp
 80017ea:	0f42      	lsrs	r2, r0, #29
 80017ec:	0424      	lsls	r4, r4, #16
 80017ee:	00db      	lsls	r3, r3, #3
 80017f0:	4314      	orrs	r4, r2
 80017f2:	431c      	orrs	r4, r3
 80017f4:	00c3      	lsls	r3, r0, #3
 80017f6:	4699      	mov	r9, r3
 80017f8:	4b68      	ldr	r3, [pc, #416]	; (800199c <__aeabi_dmul+0x1e0>)
 80017fa:	46a3      	mov	fp, r4
 80017fc:	469c      	mov	ip, r3
 80017fe:	2300      	movs	r3, #0
 8001800:	2700      	movs	r7, #0
 8001802:	4466      	add	r6, ip
 8001804:	9302      	str	r3, [sp, #8]
 8001806:	4643      	mov	r3, r8
 8001808:	031c      	lsls	r4, r3, #12
 800180a:	005a      	lsls	r2, r3, #1
 800180c:	0fdb      	lsrs	r3, r3, #31
 800180e:	4650      	mov	r0, sl
 8001810:	0b24      	lsrs	r4, r4, #12
 8001812:	0d52      	lsrs	r2, r2, #21
 8001814:	4698      	mov	r8, r3
 8001816:	d100      	bne.n	800181a <__aeabi_dmul+0x5e>
 8001818:	e076      	b.n	8001908 <__aeabi_dmul+0x14c>
 800181a:	4b5f      	ldr	r3, [pc, #380]	; (8001998 <__aeabi_dmul+0x1dc>)
 800181c:	429a      	cmp	r2, r3
 800181e:	d06d      	beq.n	80018fc <__aeabi_dmul+0x140>
 8001820:	2380      	movs	r3, #128	; 0x80
 8001822:	0f41      	lsrs	r1, r0, #29
 8001824:	041b      	lsls	r3, r3, #16
 8001826:	430b      	orrs	r3, r1
 8001828:	495c      	ldr	r1, [pc, #368]	; (800199c <__aeabi_dmul+0x1e0>)
 800182a:	00e4      	lsls	r4, r4, #3
 800182c:	468c      	mov	ip, r1
 800182e:	431c      	orrs	r4, r3
 8001830:	00c3      	lsls	r3, r0, #3
 8001832:	2000      	movs	r0, #0
 8001834:	4462      	add	r2, ip
 8001836:	4641      	mov	r1, r8
 8001838:	18b6      	adds	r6, r6, r2
 800183a:	4069      	eors	r1, r5
 800183c:	1c72      	adds	r2, r6, #1
 800183e:	9101      	str	r1, [sp, #4]
 8001840:	4694      	mov	ip, r2
 8001842:	4307      	orrs	r7, r0
 8001844:	2f0f      	cmp	r7, #15
 8001846:	d900      	bls.n	800184a <__aeabi_dmul+0x8e>
 8001848:	e0b0      	b.n	80019ac <__aeabi_dmul+0x1f0>
 800184a:	4a55      	ldr	r2, [pc, #340]	; (80019a0 <__aeabi_dmul+0x1e4>)
 800184c:	00bf      	lsls	r7, r7, #2
 800184e:	59d2      	ldr	r2, [r2, r7]
 8001850:	4697      	mov	pc, r2
 8001852:	465b      	mov	r3, fp
 8001854:	4303      	orrs	r3, r0
 8001856:	4699      	mov	r9, r3
 8001858:	d000      	beq.n	800185c <__aeabi_dmul+0xa0>
 800185a:	e087      	b.n	800196c <__aeabi_dmul+0x1b0>
 800185c:	2300      	movs	r3, #0
 800185e:	469b      	mov	fp, r3
 8001860:	3302      	adds	r3, #2
 8001862:	2708      	movs	r7, #8
 8001864:	9302      	str	r3, [sp, #8]
 8001866:	e7ce      	b.n	8001806 <__aeabi_dmul+0x4a>
 8001868:	4642      	mov	r2, r8
 800186a:	9201      	str	r2, [sp, #4]
 800186c:	2802      	cmp	r0, #2
 800186e:	d067      	beq.n	8001940 <__aeabi_dmul+0x184>
 8001870:	2803      	cmp	r0, #3
 8001872:	d100      	bne.n	8001876 <__aeabi_dmul+0xba>
 8001874:	e20e      	b.n	8001c94 <__aeabi_dmul+0x4d8>
 8001876:	2801      	cmp	r0, #1
 8001878:	d000      	beq.n	800187c <__aeabi_dmul+0xc0>
 800187a:	e162      	b.n	8001b42 <__aeabi_dmul+0x386>
 800187c:	2300      	movs	r3, #0
 800187e:	2400      	movs	r4, #0
 8001880:	2200      	movs	r2, #0
 8001882:	4699      	mov	r9, r3
 8001884:	9901      	ldr	r1, [sp, #4]
 8001886:	4001      	ands	r1, r0
 8001888:	b2cd      	uxtb	r5, r1
 800188a:	2100      	movs	r1, #0
 800188c:	0312      	lsls	r2, r2, #12
 800188e:	0d0b      	lsrs	r3, r1, #20
 8001890:	0b12      	lsrs	r2, r2, #12
 8001892:	051b      	lsls	r3, r3, #20
 8001894:	4313      	orrs	r3, r2
 8001896:	4a43      	ldr	r2, [pc, #268]	; (80019a4 <__aeabi_dmul+0x1e8>)
 8001898:	0524      	lsls	r4, r4, #20
 800189a:	4013      	ands	r3, r2
 800189c:	431c      	orrs	r4, r3
 800189e:	0064      	lsls	r4, r4, #1
 80018a0:	07ed      	lsls	r5, r5, #31
 80018a2:	0864      	lsrs	r4, r4, #1
 80018a4:	432c      	orrs	r4, r5
 80018a6:	4648      	mov	r0, r9
 80018a8:	0021      	movs	r1, r4
 80018aa:	b007      	add	sp, #28
 80018ac:	bc3c      	pop	{r2, r3, r4, r5}
 80018ae:	4690      	mov	r8, r2
 80018b0:	4699      	mov	r9, r3
 80018b2:	46a2      	mov	sl, r4
 80018b4:	46ab      	mov	fp, r5
 80018b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018b8:	4303      	orrs	r3, r0
 80018ba:	4699      	mov	r9, r3
 80018bc:	d04f      	beq.n	800195e <__aeabi_dmul+0x1a2>
 80018be:	465b      	mov	r3, fp
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	d100      	bne.n	80018c6 <__aeabi_dmul+0x10a>
 80018c4:	e189      	b.n	8001bda <__aeabi_dmul+0x41e>
 80018c6:	4658      	mov	r0, fp
 80018c8:	f000 fe2e 	bl	8002528 <__clzsi2>
 80018cc:	0003      	movs	r3, r0
 80018ce:	3b0b      	subs	r3, #11
 80018d0:	2b1c      	cmp	r3, #28
 80018d2:	dd00      	ble.n	80018d6 <__aeabi_dmul+0x11a>
 80018d4:	e17a      	b.n	8001bcc <__aeabi_dmul+0x410>
 80018d6:	221d      	movs	r2, #29
 80018d8:	1ad3      	subs	r3, r2, r3
 80018da:	003a      	movs	r2, r7
 80018dc:	0001      	movs	r1, r0
 80018de:	465c      	mov	r4, fp
 80018e0:	40da      	lsrs	r2, r3
 80018e2:	3908      	subs	r1, #8
 80018e4:	408c      	lsls	r4, r1
 80018e6:	0013      	movs	r3, r2
 80018e8:	408f      	lsls	r7, r1
 80018ea:	4323      	orrs	r3, r4
 80018ec:	469b      	mov	fp, r3
 80018ee:	46b9      	mov	r9, r7
 80018f0:	2300      	movs	r3, #0
 80018f2:	4e2d      	ldr	r6, [pc, #180]	; (80019a8 <__aeabi_dmul+0x1ec>)
 80018f4:	2700      	movs	r7, #0
 80018f6:	1a36      	subs	r6, r6, r0
 80018f8:	9302      	str	r3, [sp, #8]
 80018fa:	e784      	b.n	8001806 <__aeabi_dmul+0x4a>
 80018fc:	4653      	mov	r3, sl
 80018fe:	4323      	orrs	r3, r4
 8001900:	d12a      	bne.n	8001958 <__aeabi_dmul+0x19c>
 8001902:	2400      	movs	r4, #0
 8001904:	2002      	movs	r0, #2
 8001906:	e796      	b.n	8001836 <__aeabi_dmul+0x7a>
 8001908:	4653      	mov	r3, sl
 800190a:	4323      	orrs	r3, r4
 800190c:	d020      	beq.n	8001950 <__aeabi_dmul+0x194>
 800190e:	2c00      	cmp	r4, #0
 8001910:	d100      	bne.n	8001914 <__aeabi_dmul+0x158>
 8001912:	e157      	b.n	8001bc4 <__aeabi_dmul+0x408>
 8001914:	0020      	movs	r0, r4
 8001916:	f000 fe07 	bl	8002528 <__clzsi2>
 800191a:	0003      	movs	r3, r0
 800191c:	3b0b      	subs	r3, #11
 800191e:	2b1c      	cmp	r3, #28
 8001920:	dd00      	ble.n	8001924 <__aeabi_dmul+0x168>
 8001922:	e149      	b.n	8001bb8 <__aeabi_dmul+0x3fc>
 8001924:	211d      	movs	r1, #29
 8001926:	1acb      	subs	r3, r1, r3
 8001928:	4651      	mov	r1, sl
 800192a:	0002      	movs	r2, r0
 800192c:	40d9      	lsrs	r1, r3
 800192e:	4653      	mov	r3, sl
 8001930:	3a08      	subs	r2, #8
 8001932:	4094      	lsls	r4, r2
 8001934:	4093      	lsls	r3, r2
 8001936:	430c      	orrs	r4, r1
 8001938:	4a1b      	ldr	r2, [pc, #108]	; (80019a8 <__aeabi_dmul+0x1ec>)
 800193a:	1a12      	subs	r2, r2, r0
 800193c:	2000      	movs	r0, #0
 800193e:	e77a      	b.n	8001836 <__aeabi_dmul+0x7a>
 8001940:	2501      	movs	r5, #1
 8001942:	9b01      	ldr	r3, [sp, #4]
 8001944:	4c14      	ldr	r4, [pc, #80]	; (8001998 <__aeabi_dmul+0x1dc>)
 8001946:	401d      	ands	r5, r3
 8001948:	2300      	movs	r3, #0
 800194a:	2200      	movs	r2, #0
 800194c:	4699      	mov	r9, r3
 800194e:	e79c      	b.n	800188a <__aeabi_dmul+0xce>
 8001950:	2400      	movs	r4, #0
 8001952:	2200      	movs	r2, #0
 8001954:	2001      	movs	r0, #1
 8001956:	e76e      	b.n	8001836 <__aeabi_dmul+0x7a>
 8001958:	4653      	mov	r3, sl
 800195a:	2003      	movs	r0, #3
 800195c:	e76b      	b.n	8001836 <__aeabi_dmul+0x7a>
 800195e:	2300      	movs	r3, #0
 8001960:	469b      	mov	fp, r3
 8001962:	3301      	adds	r3, #1
 8001964:	2704      	movs	r7, #4
 8001966:	2600      	movs	r6, #0
 8001968:	9302      	str	r3, [sp, #8]
 800196a:	e74c      	b.n	8001806 <__aeabi_dmul+0x4a>
 800196c:	2303      	movs	r3, #3
 800196e:	4681      	mov	r9, r0
 8001970:	270c      	movs	r7, #12
 8001972:	9302      	str	r3, [sp, #8]
 8001974:	e747      	b.n	8001806 <__aeabi_dmul+0x4a>
 8001976:	2280      	movs	r2, #128	; 0x80
 8001978:	2300      	movs	r3, #0
 800197a:	2500      	movs	r5, #0
 800197c:	0312      	lsls	r2, r2, #12
 800197e:	4699      	mov	r9, r3
 8001980:	4c05      	ldr	r4, [pc, #20]	; (8001998 <__aeabi_dmul+0x1dc>)
 8001982:	e782      	b.n	800188a <__aeabi_dmul+0xce>
 8001984:	465c      	mov	r4, fp
 8001986:	464b      	mov	r3, r9
 8001988:	9802      	ldr	r0, [sp, #8]
 800198a:	e76f      	b.n	800186c <__aeabi_dmul+0xb0>
 800198c:	465c      	mov	r4, fp
 800198e:	464b      	mov	r3, r9
 8001990:	9501      	str	r5, [sp, #4]
 8001992:	9802      	ldr	r0, [sp, #8]
 8001994:	e76a      	b.n	800186c <__aeabi_dmul+0xb0>
 8001996:	46c0      	nop			; (mov r8, r8)
 8001998:	000007ff 	.word	0x000007ff
 800199c:	fffffc01 	.word	0xfffffc01
 80019a0:	08006080 	.word	0x08006080
 80019a4:	800fffff 	.word	0x800fffff
 80019a8:	fffffc0d 	.word	0xfffffc0d
 80019ac:	464a      	mov	r2, r9
 80019ae:	4649      	mov	r1, r9
 80019b0:	0c17      	lsrs	r7, r2, #16
 80019b2:	0c1a      	lsrs	r2, r3, #16
 80019b4:	041b      	lsls	r3, r3, #16
 80019b6:	0c1b      	lsrs	r3, r3, #16
 80019b8:	0408      	lsls	r0, r1, #16
 80019ba:	0019      	movs	r1, r3
 80019bc:	0c00      	lsrs	r0, r0, #16
 80019be:	4341      	muls	r1, r0
 80019c0:	0015      	movs	r5, r2
 80019c2:	4688      	mov	r8, r1
 80019c4:	0019      	movs	r1, r3
 80019c6:	437d      	muls	r5, r7
 80019c8:	4379      	muls	r1, r7
 80019ca:	9503      	str	r5, [sp, #12]
 80019cc:	4689      	mov	r9, r1
 80019ce:	0029      	movs	r1, r5
 80019d0:	0015      	movs	r5, r2
 80019d2:	4345      	muls	r5, r0
 80019d4:	444d      	add	r5, r9
 80019d6:	9502      	str	r5, [sp, #8]
 80019d8:	4645      	mov	r5, r8
 80019da:	0c2d      	lsrs	r5, r5, #16
 80019dc:	46aa      	mov	sl, r5
 80019de:	9d02      	ldr	r5, [sp, #8]
 80019e0:	4455      	add	r5, sl
 80019e2:	45a9      	cmp	r9, r5
 80019e4:	d906      	bls.n	80019f4 <__aeabi_dmul+0x238>
 80019e6:	468a      	mov	sl, r1
 80019e8:	2180      	movs	r1, #128	; 0x80
 80019ea:	0249      	lsls	r1, r1, #9
 80019ec:	4689      	mov	r9, r1
 80019ee:	44ca      	add	sl, r9
 80019f0:	4651      	mov	r1, sl
 80019f2:	9103      	str	r1, [sp, #12]
 80019f4:	0c29      	lsrs	r1, r5, #16
 80019f6:	9104      	str	r1, [sp, #16]
 80019f8:	4641      	mov	r1, r8
 80019fa:	0409      	lsls	r1, r1, #16
 80019fc:	042d      	lsls	r5, r5, #16
 80019fe:	0c09      	lsrs	r1, r1, #16
 8001a00:	4688      	mov	r8, r1
 8001a02:	0029      	movs	r1, r5
 8001a04:	0c25      	lsrs	r5, r4, #16
 8001a06:	0424      	lsls	r4, r4, #16
 8001a08:	4441      	add	r1, r8
 8001a0a:	0c24      	lsrs	r4, r4, #16
 8001a0c:	9105      	str	r1, [sp, #20]
 8001a0e:	0021      	movs	r1, r4
 8001a10:	4341      	muls	r1, r0
 8001a12:	4688      	mov	r8, r1
 8001a14:	0021      	movs	r1, r4
 8001a16:	4379      	muls	r1, r7
 8001a18:	468a      	mov	sl, r1
 8001a1a:	4368      	muls	r0, r5
 8001a1c:	4641      	mov	r1, r8
 8001a1e:	4450      	add	r0, sl
 8001a20:	4681      	mov	r9, r0
 8001a22:	0c08      	lsrs	r0, r1, #16
 8001a24:	4448      	add	r0, r9
 8001a26:	436f      	muls	r7, r5
 8001a28:	4582      	cmp	sl, r0
 8001a2a:	d903      	bls.n	8001a34 <__aeabi_dmul+0x278>
 8001a2c:	2180      	movs	r1, #128	; 0x80
 8001a2e:	0249      	lsls	r1, r1, #9
 8001a30:	4689      	mov	r9, r1
 8001a32:	444f      	add	r7, r9
 8001a34:	0c01      	lsrs	r1, r0, #16
 8001a36:	4689      	mov	r9, r1
 8001a38:	0039      	movs	r1, r7
 8001a3a:	4449      	add	r1, r9
 8001a3c:	9102      	str	r1, [sp, #8]
 8001a3e:	4641      	mov	r1, r8
 8001a40:	040f      	lsls	r7, r1, #16
 8001a42:	9904      	ldr	r1, [sp, #16]
 8001a44:	0c3f      	lsrs	r7, r7, #16
 8001a46:	4688      	mov	r8, r1
 8001a48:	0400      	lsls	r0, r0, #16
 8001a4a:	19c0      	adds	r0, r0, r7
 8001a4c:	4480      	add	r8, r0
 8001a4e:	4641      	mov	r1, r8
 8001a50:	9104      	str	r1, [sp, #16]
 8001a52:	4659      	mov	r1, fp
 8001a54:	0c0f      	lsrs	r7, r1, #16
 8001a56:	0409      	lsls	r1, r1, #16
 8001a58:	0c09      	lsrs	r1, r1, #16
 8001a5a:	4688      	mov	r8, r1
 8001a5c:	4359      	muls	r1, r3
 8001a5e:	468a      	mov	sl, r1
 8001a60:	0039      	movs	r1, r7
 8001a62:	4351      	muls	r1, r2
 8001a64:	4689      	mov	r9, r1
 8001a66:	4641      	mov	r1, r8
 8001a68:	434a      	muls	r2, r1
 8001a6a:	4651      	mov	r1, sl
 8001a6c:	0c09      	lsrs	r1, r1, #16
 8001a6e:	468b      	mov	fp, r1
 8001a70:	437b      	muls	r3, r7
 8001a72:	18d2      	adds	r2, r2, r3
 8001a74:	445a      	add	r2, fp
 8001a76:	4293      	cmp	r3, r2
 8001a78:	d903      	bls.n	8001a82 <__aeabi_dmul+0x2c6>
 8001a7a:	2380      	movs	r3, #128	; 0x80
 8001a7c:	025b      	lsls	r3, r3, #9
 8001a7e:	469b      	mov	fp, r3
 8001a80:	44d9      	add	r9, fp
 8001a82:	4651      	mov	r1, sl
 8001a84:	0409      	lsls	r1, r1, #16
 8001a86:	0c09      	lsrs	r1, r1, #16
 8001a88:	468a      	mov	sl, r1
 8001a8a:	4641      	mov	r1, r8
 8001a8c:	4361      	muls	r1, r4
 8001a8e:	437c      	muls	r4, r7
 8001a90:	0c13      	lsrs	r3, r2, #16
 8001a92:	0412      	lsls	r2, r2, #16
 8001a94:	444b      	add	r3, r9
 8001a96:	4452      	add	r2, sl
 8001a98:	46a1      	mov	r9, r4
 8001a9a:	468a      	mov	sl, r1
 8001a9c:	003c      	movs	r4, r7
 8001a9e:	4641      	mov	r1, r8
 8001aa0:	436c      	muls	r4, r5
 8001aa2:	434d      	muls	r5, r1
 8001aa4:	4651      	mov	r1, sl
 8001aa6:	444d      	add	r5, r9
 8001aa8:	0c0f      	lsrs	r7, r1, #16
 8001aaa:	197d      	adds	r5, r7, r5
 8001aac:	45a9      	cmp	r9, r5
 8001aae:	d903      	bls.n	8001ab8 <__aeabi_dmul+0x2fc>
 8001ab0:	2180      	movs	r1, #128	; 0x80
 8001ab2:	0249      	lsls	r1, r1, #9
 8001ab4:	4688      	mov	r8, r1
 8001ab6:	4444      	add	r4, r8
 8001ab8:	9f04      	ldr	r7, [sp, #16]
 8001aba:	9903      	ldr	r1, [sp, #12]
 8001abc:	46b8      	mov	r8, r7
 8001abe:	4441      	add	r1, r8
 8001ac0:	468b      	mov	fp, r1
 8001ac2:	4583      	cmp	fp, r0
 8001ac4:	4180      	sbcs	r0, r0
 8001ac6:	4241      	negs	r1, r0
 8001ac8:	4688      	mov	r8, r1
 8001aca:	4651      	mov	r1, sl
 8001acc:	0408      	lsls	r0, r1, #16
 8001ace:	042f      	lsls	r7, r5, #16
 8001ad0:	0c00      	lsrs	r0, r0, #16
 8001ad2:	183f      	adds	r7, r7, r0
 8001ad4:	4658      	mov	r0, fp
 8001ad6:	9902      	ldr	r1, [sp, #8]
 8001ad8:	1810      	adds	r0, r2, r0
 8001ada:	4689      	mov	r9, r1
 8001adc:	4290      	cmp	r0, r2
 8001ade:	4192      	sbcs	r2, r2
 8001ae0:	444f      	add	r7, r9
 8001ae2:	46ba      	mov	sl, r7
 8001ae4:	4252      	negs	r2, r2
 8001ae6:	4699      	mov	r9, r3
 8001ae8:	4693      	mov	fp, r2
 8001aea:	44c2      	add	sl, r8
 8001aec:	44d1      	add	r9, sl
 8001aee:	44cb      	add	fp, r9
 8001af0:	428f      	cmp	r7, r1
 8001af2:	41bf      	sbcs	r7, r7
 8001af4:	45c2      	cmp	sl, r8
 8001af6:	4189      	sbcs	r1, r1
 8001af8:	4599      	cmp	r9, r3
 8001afa:	419b      	sbcs	r3, r3
 8001afc:	4593      	cmp	fp, r2
 8001afe:	4192      	sbcs	r2, r2
 8001b00:	427f      	negs	r7, r7
 8001b02:	4249      	negs	r1, r1
 8001b04:	0c2d      	lsrs	r5, r5, #16
 8001b06:	4252      	negs	r2, r2
 8001b08:	430f      	orrs	r7, r1
 8001b0a:	425b      	negs	r3, r3
 8001b0c:	4313      	orrs	r3, r2
 8001b0e:	197f      	adds	r7, r7, r5
 8001b10:	18ff      	adds	r7, r7, r3
 8001b12:	465b      	mov	r3, fp
 8001b14:	193c      	adds	r4, r7, r4
 8001b16:	0ddb      	lsrs	r3, r3, #23
 8001b18:	9a05      	ldr	r2, [sp, #20]
 8001b1a:	0264      	lsls	r4, r4, #9
 8001b1c:	431c      	orrs	r4, r3
 8001b1e:	0243      	lsls	r3, r0, #9
 8001b20:	4313      	orrs	r3, r2
 8001b22:	1e5d      	subs	r5, r3, #1
 8001b24:	41ab      	sbcs	r3, r5
 8001b26:	465a      	mov	r2, fp
 8001b28:	0dc0      	lsrs	r0, r0, #23
 8001b2a:	4303      	orrs	r3, r0
 8001b2c:	0252      	lsls	r2, r2, #9
 8001b2e:	4313      	orrs	r3, r2
 8001b30:	01e2      	lsls	r2, r4, #7
 8001b32:	d556      	bpl.n	8001be2 <__aeabi_dmul+0x426>
 8001b34:	2001      	movs	r0, #1
 8001b36:	085a      	lsrs	r2, r3, #1
 8001b38:	4003      	ands	r3, r0
 8001b3a:	4313      	orrs	r3, r2
 8001b3c:	07e2      	lsls	r2, r4, #31
 8001b3e:	4313      	orrs	r3, r2
 8001b40:	0864      	lsrs	r4, r4, #1
 8001b42:	485a      	ldr	r0, [pc, #360]	; (8001cac <__aeabi_dmul+0x4f0>)
 8001b44:	4460      	add	r0, ip
 8001b46:	2800      	cmp	r0, #0
 8001b48:	dd4d      	ble.n	8001be6 <__aeabi_dmul+0x42a>
 8001b4a:	075a      	lsls	r2, r3, #29
 8001b4c:	d009      	beq.n	8001b62 <__aeabi_dmul+0x3a6>
 8001b4e:	220f      	movs	r2, #15
 8001b50:	401a      	ands	r2, r3
 8001b52:	2a04      	cmp	r2, #4
 8001b54:	d005      	beq.n	8001b62 <__aeabi_dmul+0x3a6>
 8001b56:	1d1a      	adds	r2, r3, #4
 8001b58:	429a      	cmp	r2, r3
 8001b5a:	419b      	sbcs	r3, r3
 8001b5c:	425b      	negs	r3, r3
 8001b5e:	18e4      	adds	r4, r4, r3
 8001b60:	0013      	movs	r3, r2
 8001b62:	01e2      	lsls	r2, r4, #7
 8001b64:	d504      	bpl.n	8001b70 <__aeabi_dmul+0x3b4>
 8001b66:	2080      	movs	r0, #128	; 0x80
 8001b68:	4a51      	ldr	r2, [pc, #324]	; (8001cb0 <__aeabi_dmul+0x4f4>)
 8001b6a:	00c0      	lsls	r0, r0, #3
 8001b6c:	4014      	ands	r4, r2
 8001b6e:	4460      	add	r0, ip
 8001b70:	4a50      	ldr	r2, [pc, #320]	; (8001cb4 <__aeabi_dmul+0x4f8>)
 8001b72:	4290      	cmp	r0, r2
 8001b74:	dd00      	ble.n	8001b78 <__aeabi_dmul+0x3bc>
 8001b76:	e6e3      	b.n	8001940 <__aeabi_dmul+0x184>
 8001b78:	2501      	movs	r5, #1
 8001b7a:	08db      	lsrs	r3, r3, #3
 8001b7c:	0762      	lsls	r2, r4, #29
 8001b7e:	431a      	orrs	r2, r3
 8001b80:	0264      	lsls	r4, r4, #9
 8001b82:	9b01      	ldr	r3, [sp, #4]
 8001b84:	4691      	mov	r9, r2
 8001b86:	0b22      	lsrs	r2, r4, #12
 8001b88:	0544      	lsls	r4, r0, #21
 8001b8a:	0d64      	lsrs	r4, r4, #21
 8001b8c:	401d      	ands	r5, r3
 8001b8e:	e67c      	b.n	800188a <__aeabi_dmul+0xce>
 8001b90:	2280      	movs	r2, #128	; 0x80
 8001b92:	4659      	mov	r1, fp
 8001b94:	0312      	lsls	r2, r2, #12
 8001b96:	4211      	tst	r1, r2
 8001b98:	d008      	beq.n	8001bac <__aeabi_dmul+0x3f0>
 8001b9a:	4214      	tst	r4, r2
 8001b9c:	d106      	bne.n	8001bac <__aeabi_dmul+0x3f0>
 8001b9e:	4322      	orrs	r2, r4
 8001ba0:	0312      	lsls	r2, r2, #12
 8001ba2:	0b12      	lsrs	r2, r2, #12
 8001ba4:	4645      	mov	r5, r8
 8001ba6:	4699      	mov	r9, r3
 8001ba8:	4c43      	ldr	r4, [pc, #268]	; (8001cb8 <__aeabi_dmul+0x4fc>)
 8001baa:	e66e      	b.n	800188a <__aeabi_dmul+0xce>
 8001bac:	465b      	mov	r3, fp
 8001bae:	431a      	orrs	r2, r3
 8001bb0:	0312      	lsls	r2, r2, #12
 8001bb2:	0b12      	lsrs	r2, r2, #12
 8001bb4:	4c40      	ldr	r4, [pc, #256]	; (8001cb8 <__aeabi_dmul+0x4fc>)
 8001bb6:	e668      	b.n	800188a <__aeabi_dmul+0xce>
 8001bb8:	0003      	movs	r3, r0
 8001bba:	4654      	mov	r4, sl
 8001bbc:	3b28      	subs	r3, #40	; 0x28
 8001bbe:	409c      	lsls	r4, r3
 8001bc0:	2300      	movs	r3, #0
 8001bc2:	e6b9      	b.n	8001938 <__aeabi_dmul+0x17c>
 8001bc4:	f000 fcb0 	bl	8002528 <__clzsi2>
 8001bc8:	3020      	adds	r0, #32
 8001bca:	e6a6      	b.n	800191a <__aeabi_dmul+0x15e>
 8001bcc:	0003      	movs	r3, r0
 8001bce:	3b28      	subs	r3, #40	; 0x28
 8001bd0:	409f      	lsls	r7, r3
 8001bd2:	2300      	movs	r3, #0
 8001bd4:	46bb      	mov	fp, r7
 8001bd6:	4699      	mov	r9, r3
 8001bd8:	e68a      	b.n	80018f0 <__aeabi_dmul+0x134>
 8001bda:	f000 fca5 	bl	8002528 <__clzsi2>
 8001bde:	3020      	adds	r0, #32
 8001be0:	e674      	b.n	80018cc <__aeabi_dmul+0x110>
 8001be2:	46b4      	mov	ip, r6
 8001be4:	e7ad      	b.n	8001b42 <__aeabi_dmul+0x386>
 8001be6:	2501      	movs	r5, #1
 8001be8:	1a2a      	subs	r2, r5, r0
 8001bea:	2a38      	cmp	r2, #56	; 0x38
 8001bec:	dd06      	ble.n	8001bfc <__aeabi_dmul+0x440>
 8001bee:	9b01      	ldr	r3, [sp, #4]
 8001bf0:	2400      	movs	r4, #0
 8001bf2:	401d      	ands	r5, r3
 8001bf4:	2300      	movs	r3, #0
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	4699      	mov	r9, r3
 8001bfa:	e646      	b.n	800188a <__aeabi_dmul+0xce>
 8001bfc:	2a1f      	cmp	r2, #31
 8001bfe:	dc21      	bgt.n	8001c44 <__aeabi_dmul+0x488>
 8001c00:	2520      	movs	r5, #32
 8001c02:	0020      	movs	r0, r4
 8001c04:	1aad      	subs	r5, r5, r2
 8001c06:	001e      	movs	r6, r3
 8001c08:	40ab      	lsls	r3, r5
 8001c0a:	40a8      	lsls	r0, r5
 8001c0c:	40d6      	lsrs	r6, r2
 8001c0e:	1e5d      	subs	r5, r3, #1
 8001c10:	41ab      	sbcs	r3, r5
 8001c12:	4330      	orrs	r0, r6
 8001c14:	4318      	orrs	r0, r3
 8001c16:	40d4      	lsrs	r4, r2
 8001c18:	0743      	lsls	r3, r0, #29
 8001c1a:	d009      	beq.n	8001c30 <__aeabi_dmul+0x474>
 8001c1c:	230f      	movs	r3, #15
 8001c1e:	4003      	ands	r3, r0
 8001c20:	2b04      	cmp	r3, #4
 8001c22:	d005      	beq.n	8001c30 <__aeabi_dmul+0x474>
 8001c24:	0003      	movs	r3, r0
 8001c26:	1d18      	adds	r0, r3, #4
 8001c28:	4298      	cmp	r0, r3
 8001c2a:	419b      	sbcs	r3, r3
 8001c2c:	425b      	negs	r3, r3
 8001c2e:	18e4      	adds	r4, r4, r3
 8001c30:	0223      	lsls	r3, r4, #8
 8001c32:	d521      	bpl.n	8001c78 <__aeabi_dmul+0x4bc>
 8001c34:	2501      	movs	r5, #1
 8001c36:	9b01      	ldr	r3, [sp, #4]
 8001c38:	2401      	movs	r4, #1
 8001c3a:	401d      	ands	r5, r3
 8001c3c:	2300      	movs	r3, #0
 8001c3e:	2200      	movs	r2, #0
 8001c40:	4699      	mov	r9, r3
 8001c42:	e622      	b.n	800188a <__aeabi_dmul+0xce>
 8001c44:	251f      	movs	r5, #31
 8001c46:	0021      	movs	r1, r4
 8001c48:	426d      	negs	r5, r5
 8001c4a:	1a28      	subs	r0, r5, r0
 8001c4c:	40c1      	lsrs	r1, r0
 8001c4e:	0008      	movs	r0, r1
 8001c50:	2a20      	cmp	r2, #32
 8001c52:	d01d      	beq.n	8001c90 <__aeabi_dmul+0x4d4>
 8001c54:	355f      	adds	r5, #95	; 0x5f
 8001c56:	1aaa      	subs	r2, r5, r2
 8001c58:	4094      	lsls	r4, r2
 8001c5a:	4323      	orrs	r3, r4
 8001c5c:	1e5c      	subs	r4, r3, #1
 8001c5e:	41a3      	sbcs	r3, r4
 8001c60:	2507      	movs	r5, #7
 8001c62:	4303      	orrs	r3, r0
 8001c64:	401d      	ands	r5, r3
 8001c66:	2200      	movs	r2, #0
 8001c68:	2d00      	cmp	r5, #0
 8001c6a:	d009      	beq.n	8001c80 <__aeabi_dmul+0x4c4>
 8001c6c:	220f      	movs	r2, #15
 8001c6e:	2400      	movs	r4, #0
 8001c70:	401a      	ands	r2, r3
 8001c72:	0018      	movs	r0, r3
 8001c74:	2a04      	cmp	r2, #4
 8001c76:	d1d6      	bne.n	8001c26 <__aeabi_dmul+0x46a>
 8001c78:	0003      	movs	r3, r0
 8001c7a:	0765      	lsls	r5, r4, #29
 8001c7c:	0264      	lsls	r4, r4, #9
 8001c7e:	0b22      	lsrs	r2, r4, #12
 8001c80:	08db      	lsrs	r3, r3, #3
 8001c82:	432b      	orrs	r3, r5
 8001c84:	2501      	movs	r5, #1
 8001c86:	4699      	mov	r9, r3
 8001c88:	9b01      	ldr	r3, [sp, #4]
 8001c8a:	2400      	movs	r4, #0
 8001c8c:	401d      	ands	r5, r3
 8001c8e:	e5fc      	b.n	800188a <__aeabi_dmul+0xce>
 8001c90:	2400      	movs	r4, #0
 8001c92:	e7e2      	b.n	8001c5a <__aeabi_dmul+0x49e>
 8001c94:	2280      	movs	r2, #128	; 0x80
 8001c96:	2501      	movs	r5, #1
 8001c98:	0312      	lsls	r2, r2, #12
 8001c9a:	4322      	orrs	r2, r4
 8001c9c:	9901      	ldr	r1, [sp, #4]
 8001c9e:	0312      	lsls	r2, r2, #12
 8001ca0:	0b12      	lsrs	r2, r2, #12
 8001ca2:	400d      	ands	r5, r1
 8001ca4:	4699      	mov	r9, r3
 8001ca6:	4c04      	ldr	r4, [pc, #16]	; (8001cb8 <__aeabi_dmul+0x4fc>)
 8001ca8:	e5ef      	b.n	800188a <__aeabi_dmul+0xce>
 8001caa:	46c0      	nop			; (mov r8, r8)
 8001cac:	000003ff 	.word	0x000003ff
 8001cb0:	feffffff 	.word	0xfeffffff
 8001cb4:	000007fe 	.word	0x000007fe
 8001cb8:	000007ff 	.word	0x000007ff

08001cbc <__aeabi_dsub>:
 8001cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cbe:	4646      	mov	r6, r8
 8001cc0:	46d6      	mov	lr, sl
 8001cc2:	464f      	mov	r7, r9
 8001cc4:	030c      	lsls	r4, r1, #12
 8001cc6:	b5c0      	push	{r6, r7, lr}
 8001cc8:	0fcd      	lsrs	r5, r1, #31
 8001cca:	004e      	lsls	r6, r1, #1
 8001ccc:	0a61      	lsrs	r1, r4, #9
 8001cce:	0f44      	lsrs	r4, r0, #29
 8001cd0:	430c      	orrs	r4, r1
 8001cd2:	00c1      	lsls	r1, r0, #3
 8001cd4:	0058      	lsls	r0, r3, #1
 8001cd6:	0d40      	lsrs	r0, r0, #21
 8001cd8:	4684      	mov	ip, r0
 8001cda:	468a      	mov	sl, r1
 8001cdc:	000f      	movs	r7, r1
 8001cde:	0319      	lsls	r1, r3, #12
 8001ce0:	0f50      	lsrs	r0, r2, #29
 8001ce2:	0a49      	lsrs	r1, r1, #9
 8001ce4:	4301      	orrs	r1, r0
 8001ce6:	48c6      	ldr	r0, [pc, #792]	; (8002000 <__aeabi_dsub+0x344>)
 8001ce8:	0d76      	lsrs	r6, r6, #21
 8001cea:	46a8      	mov	r8, r5
 8001cec:	0fdb      	lsrs	r3, r3, #31
 8001cee:	00d2      	lsls	r2, r2, #3
 8001cf0:	4584      	cmp	ip, r0
 8001cf2:	d100      	bne.n	8001cf6 <__aeabi_dsub+0x3a>
 8001cf4:	e0d8      	b.n	8001ea8 <__aeabi_dsub+0x1ec>
 8001cf6:	2001      	movs	r0, #1
 8001cf8:	4043      	eors	r3, r0
 8001cfa:	42ab      	cmp	r3, r5
 8001cfc:	d100      	bne.n	8001d00 <__aeabi_dsub+0x44>
 8001cfe:	e0a6      	b.n	8001e4e <__aeabi_dsub+0x192>
 8001d00:	4660      	mov	r0, ip
 8001d02:	1a35      	subs	r5, r6, r0
 8001d04:	2d00      	cmp	r5, #0
 8001d06:	dc00      	bgt.n	8001d0a <__aeabi_dsub+0x4e>
 8001d08:	e105      	b.n	8001f16 <__aeabi_dsub+0x25a>
 8001d0a:	2800      	cmp	r0, #0
 8001d0c:	d110      	bne.n	8001d30 <__aeabi_dsub+0x74>
 8001d0e:	000b      	movs	r3, r1
 8001d10:	4313      	orrs	r3, r2
 8001d12:	d100      	bne.n	8001d16 <__aeabi_dsub+0x5a>
 8001d14:	e0d7      	b.n	8001ec6 <__aeabi_dsub+0x20a>
 8001d16:	1e6b      	subs	r3, r5, #1
 8001d18:	2b00      	cmp	r3, #0
 8001d1a:	d000      	beq.n	8001d1e <__aeabi_dsub+0x62>
 8001d1c:	e14b      	b.n	8001fb6 <__aeabi_dsub+0x2fa>
 8001d1e:	4653      	mov	r3, sl
 8001d20:	1a9f      	subs	r7, r3, r2
 8001d22:	45ba      	cmp	sl, r7
 8001d24:	4180      	sbcs	r0, r0
 8001d26:	1a64      	subs	r4, r4, r1
 8001d28:	4240      	negs	r0, r0
 8001d2a:	1a24      	subs	r4, r4, r0
 8001d2c:	2601      	movs	r6, #1
 8001d2e:	e01e      	b.n	8001d6e <__aeabi_dsub+0xb2>
 8001d30:	4bb3      	ldr	r3, [pc, #716]	; (8002000 <__aeabi_dsub+0x344>)
 8001d32:	429e      	cmp	r6, r3
 8001d34:	d048      	beq.n	8001dc8 <__aeabi_dsub+0x10c>
 8001d36:	2380      	movs	r3, #128	; 0x80
 8001d38:	041b      	lsls	r3, r3, #16
 8001d3a:	4319      	orrs	r1, r3
 8001d3c:	2d38      	cmp	r5, #56	; 0x38
 8001d3e:	dd00      	ble.n	8001d42 <__aeabi_dsub+0x86>
 8001d40:	e119      	b.n	8001f76 <__aeabi_dsub+0x2ba>
 8001d42:	2d1f      	cmp	r5, #31
 8001d44:	dd00      	ble.n	8001d48 <__aeabi_dsub+0x8c>
 8001d46:	e14c      	b.n	8001fe2 <__aeabi_dsub+0x326>
 8001d48:	2320      	movs	r3, #32
 8001d4a:	000f      	movs	r7, r1
 8001d4c:	1b5b      	subs	r3, r3, r5
 8001d4e:	0010      	movs	r0, r2
 8001d50:	409a      	lsls	r2, r3
 8001d52:	409f      	lsls	r7, r3
 8001d54:	40e8      	lsrs	r0, r5
 8001d56:	1e53      	subs	r3, r2, #1
 8001d58:	419a      	sbcs	r2, r3
 8001d5a:	40e9      	lsrs	r1, r5
 8001d5c:	4307      	orrs	r7, r0
 8001d5e:	4317      	orrs	r7, r2
 8001d60:	4653      	mov	r3, sl
 8001d62:	1bdf      	subs	r7, r3, r7
 8001d64:	1a61      	subs	r1, r4, r1
 8001d66:	45ba      	cmp	sl, r7
 8001d68:	41a4      	sbcs	r4, r4
 8001d6a:	4264      	negs	r4, r4
 8001d6c:	1b0c      	subs	r4, r1, r4
 8001d6e:	0223      	lsls	r3, r4, #8
 8001d70:	d400      	bmi.n	8001d74 <__aeabi_dsub+0xb8>
 8001d72:	e0c5      	b.n	8001f00 <__aeabi_dsub+0x244>
 8001d74:	0264      	lsls	r4, r4, #9
 8001d76:	0a65      	lsrs	r5, r4, #9
 8001d78:	2d00      	cmp	r5, #0
 8001d7a:	d100      	bne.n	8001d7e <__aeabi_dsub+0xc2>
 8001d7c:	e0f6      	b.n	8001f6c <__aeabi_dsub+0x2b0>
 8001d7e:	0028      	movs	r0, r5
 8001d80:	f000 fbd2 	bl	8002528 <__clzsi2>
 8001d84:	0003      	movs	r3, r0
 8001d86:	3b08      	subs	r3, #8
 8001d88:	2b1f      	cmp	r3, #31
 8001d8a:	dd00      	ble.n	8001d8e <__aeabi_dsub+0xd2>
 8001d8c:	e0e9      	b.n	8001f62 <__aeabi_dsub+0x2a6>
 8001d8e:	2220      	movs	r2, #32
 8001d90:	003c      	movs	r4, r7
 8001d92:	1ad2      	subs	r2, r2, r3
 8001d94:	409d      	lsls	r5, r3
 8001d96:	40d4      	lsrs	r4, r2
 8001d98:	409f      	lsls	r7, r3
 8001d9a:	4325      	orrs	r5, r4
 8001d9c:	429e      	cmp	r6, r3
 8001d9e:	dd00      	ble.n	8001da2 <__aeabi_dsub+0xe6>
 8001da0:	e0db      	b.n	8001f5a <__aeabi_dsub+0x29e>
 8001da2:	1b9e      	subs	r6, r3, r6
 8001da4:	1c73      	adds	r3, r6, #1
 8001da6:	2b1f      	cmp	r3, #31
 8001da8:	dd00      	ble.n	8001dac <__aeabi_dsub+0xf0>
 8001daa:	e10a      	b.n	8001fc2 <__aeabi_dsub+0x306>
 8001dac:	2220      	movs	r2, #32
 8001dae:	0038      	movs	r0, r7
 8001db0:	1ad2      	subs	r2, r2, r3
 8001db2:	0029      	movs	r1, r5
 8001db4:	4097      	lsls	r7, r2
 8001db6:	002c      	movs	r4, r5
 8001db8:	4091      	lsls	r1, r2
 8001dba:	40d8      	lsrs	r0, r3
 8001dbc:	1e7a      	subs	r2, r7, #1
 8001dbe:	4197      	sbcs	r7, r2
 8001dc0:	40dc      	lsrs	r4, r3
 8001dc2:	2600      	movs	r6, #0
 8001dc4:	4301      	orrs	r1, r0
 8001dc6:	430f      	orrs	r7, r1
 8001dc8:	077b      	lsls	r3, r7, #29
 8001dca:	d009      	beq.n	8001de0 <__aeabi_dsub+0x124>
 8001dcc:	230f      	movs	r3, #15
 8001dce:	403b      	ands	r3, r7
 8001dd0:	2b04      	cmp	r3, #4
 8001dd2:	d005      	beq.n	8001de0 <__aeabi_dsub+0x124>
 8001dd4:	1d3b      	adds	r3, r7, #4
 8001dd6:	42bb      	cmp	r3, r7
 8001dd8:	41bf      	sbcs	r7, r7
 8001dda:	427f      	negs	r7, r7
 8001ddc:	19e4      	adds	r4, r4, r7
 8001dde:	001f      	movs	r7, r3
 8001de0:	0223      	lsls	r3, r4, #8
 8001de2:	d525      	bpl.n	8001e30 <__aeabi_dsub+0x174>
 8001de4:	4b86      	ldr	r3, [pc, #536]	; (8002000 <__aeabi_dsub+0x344>)
 8001de6:	3601      	adds	r6, #1
 8001de8:	429e      	cmp	r6, r3
 8001dea:	d100      	bne.n	8001dee <__aeabi_dsub+0x132>
 8001dec:	e0af      	b.n	8001f4e <__aeabi_dsub+0x292>
 8001dee:	4b85      	ldr	r3, [pc, #532]	; (8002004 <__aeabi_dsub+0x348>)
 8001df0:	2501      	movs	r5, #1
 8001df2:	401c      	ands	r4, r3
 8001df4:	4643      	mov	r3, r8
 8001df6:	0762      	lsls	r2, r4, #29
 8001df8:	08ff      	lsrs	r7, r7, #3
 8001dfa:	0264      	lsls	r4, r4, #9
 8001dfc:	0576      	lsls	r6, r6, #21
 8001dfe:	4317      	orrs	r7, r2
 8001e00:	0b24      	lsrs	r4, r4, #12
 8001e02:	0d76      	lsrs	r6, r6, #21
 8001e04:	401d      	ands	r5, r3
 8001e06:	2100      	movs	r1, #0
 8001e08:	0324      	lsls	r4, r4, #12
 8001e0a:	0b23      	lsrs	r3, r4, #12
 8001e0c:	0d0c      	lsrs	r4, r1, #20
 8001e0e:	4a7e      	ldr	r2, [pc, #504]	; (8002008 <__aeabi_dsub+0x34c>)
 8001e10:	0524      	lsls	r4, r4, #20
 8001e12:	431c      	orrs	r4, r3
 8001e14:	4014      	ands	r4, r2
 8001e16:	0533      	lsls	r3, r6, #20
 8001e18:	4323      	orrs	r3, r4
 8001e1a:	005b      	lsls	r3, r3, #1
 8001e1c:	07ed      	lsls	r5, r5, #31
 8001e1e:	085b      	lsrs	r3, r3, #1
 8001e20:	432b      	orrs	r3, r5
 8001e22:	0038      	movs	r0, r7
 8001e24:	0019      	movs	r1, r3
 8001e26:	bc1c      	pop	{r2, r3, r4}
 8001e28:	4690      	mov	r8, r2
 8001e2a:	4699      	mov	r9, r3
 8001e2c:	46a2      	mov	sl, r4
 8001e2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e30:	2501      	movs	r5, #1
 8001e32:	4643      	mov	r3, r8
 8001e34:	0762      	lsls	r2, r4, #29
 8001e36:	08ff      	lsrs	r7, r7, #3
 8001e38:	4317      	orrs	r7, r2
 8001e3a:	08e4      	lsrs	r4, r4, #3
 8001e3c:	401d      	ands	r5, r3
 8001e3e:	4b70      	ldr	r3, [pc, #448]	; (8002000 <__aeabi_dsub+0x344>)
 8001e40:	429e      	cmp	r6, r3
 8001e42:	d036      	beq.n	8001eb2 <__aeabi_dsub+0x1f6>
 8001e44:	0324      	lsls	r4, r4, #12
 8001e46:	0576      	lsls	r6, r6, #21
 8001e48:	0b24      	lsrs	r4, r4, #12
 8001e4a:	0d76      	lsrs	r6, r6, #21
 8001e4c:	e7db      	b.n	8001e06 <__aeabi_dsub+0x14a>
 8001e4e:	4663      	mov	r3, ip
 8001e50:	1af3      	subs	r3, r6, r3
 8001e52:	2b00      	cmp	r3, #0
 8001e54:	dc00      	bgt.n	8001e58 <__aeabi_dsub+0x19c>
 8001e56:	e094      	b.n	8001f82 <__aeabi_dsub+0x2c6>
 8001e58:	4660      	mov	r0, ip
 8001e5a:	2800      	cmp	r0, #0
 8001e5c:	d035      	beq.n	8001eca <__aeabi_dsub+0x20e>
 8001e5e:	4868      	ldr	r0, [pc, #416]	; (8002000 <__aeabi_dsub+0x344>)
 8001e60:	4286      	cmp	r6, r0
 8001e62:	d0b1      	beq.n	8001dc8 <__aeabi_dsub+0x10c>
 8001e64:	2780      	movs	r7, #128	; 0x80
 8001e66:	043f      	lsls	r7, r7, #16
 8001e68:	4339      	orrs	r1, r7
 8001e6a:	2b38      	cmp	r3, #56	; 0x38
 8001e6c:	dc00      	bgt.n	8001e70 <__aeabi_dsub+0x1b4>
 8001e6e:	e0fd      	b.n	800206c <__aeabi_dsub+0x3b0>
 8001e70:	430a      	orrs	r2, r1
 8001e72:	0017      	movs	r7, r2
 8001e74:	2100      	movs	r1, #0
 8001e76:	1e7a      	subs	r2, r7, #1
 8001e78:	4197      	sbcs	r7, r2
 8001e7a:	4457      	add	r7, sl
 8001e7c:	4557      	cmp	r7, sl
 8001e7e:	4180      	sbcs	r0, r0
 8001e80:	1909      	adds	r1, r1, r4
 8001e82:	4244      	negs	r4, r0
 8001e84:	190c      	adds	r4, r1, r4
 8001e86:	0223      	lsls	r3, r4, #8
 8001e88:	d53a      	bpl.n	8001f00 <__aeabi_dsub+0x244>
 8001e8a:	4b5d      	ldr	r3, [pc, #372]	; (8002000 <__aeabi_dsub+0x344>)
 8001e8c:	3601      	adds	r6, #1
 8001e8e:	429e      	cmp	r6, r3
 8001e90:	d100      	bne.n	8001e94 <__aeabi_dsub+0x1d8>
 8001e92:	e14b      	b.n	800212c <__aeabi_dsub+0x470>
 8001e94:	2201      	movs	r2, #1
 8001e96:	4b5b      	ldr	r3, [pc, #364]	; (8002004 <__aeabi_dsub+0x348>)
 8001e98:	401c      	ands	r4, r3
 8001e9a:	087b      	lsrs	r3, r7, #1
 8001e9c:	4017      	ands	r7, r2
 8001e9e:	431f      	orrs	r7, r3
 8001ea0:	07e2      	lsls	r2, r4, #31
 8001ea2:	4317      	orrs	r7, r2
 8001ea4:	0864      	lsrs	r4, r4, #1
 8001ea6:	e78f      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 8001ea8:	0008      	movs	r0, r1
 8001eaa:	4310      	orrs	r0, r2
 8001eac:	d000      	beq.n	8001eb0 <__aeabi_dsub+0x1f4>
 8001eae:	e724      	b.n	8001cfa <__aeabi_dsub+0x3e>
 8001eb0:	e721      	b.n	8001cf6 <__aeabi_dsub+0x3a>
 8001eb2:	0023      	movs	r3, r4
 8001eb4:	433b      	orrs	r3, r7
 8001eb6:	d100      	bne.n	8001eba <__aeabi_dsub+0x1fe>
 8001eb8:	e1b9      	b.n	800222e <__aeabi_dsub+0x572>
 8001eba:	2280      	movs	r2, #128	; 0x80
 8001ebc:	0312      	lsls	r2, r2, #12
 8001ebe:	4314      	orrs	r4, r2
 8001ec0:	0324      	lsls	r4, r4, #12
 8001ec2:	0b24      	lsrs	r4, r4, #12
 8001ec4:	e79f      	b.n	8001e06 <__aeabi_dsub+0x14a>
 8001ec6:	002e      	movs	r6, r5
 8001ec8:	e77e      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 8001eca:	0008      	movs	r0, r1
 8001ecc:	4310      	orrs	r0, r2
 8001ece:	d100      	bne.n	8001ed2 <__aeabi_dsub+0x216>
 8001ed0:	e0ca      	b.n	8002068 <__aeabi_dsub+0x3ac>
 8001ed2:	1e58      	subs	r0, r3, #1
 8001ed4:	4684      	mov	ip, r0
 8001ed6:	2800      	cmp	r0, #0
 8001ed8:	d000      	beq.n	8001edc <__aeabi_dsub+0x220>
 8001eda:	e0e7      	b.n	80020ac <__aeabi_dsub+0x3f0>
 8001edc:	4452      	add	r2, sl
 8001ede:	4552      	cmp	r2, sl
 8001ee0:	4180      	sbcs	r0, r0
 8001ee2:	1864      	adds	r4, r4, r1
 8001ee4:	4240      	negs	r0, r0
 8001ee6:	1824      	adds	r4, r4, r0
 8001ee8:	0017      	movs	r7, r2
 8001eea:	2601      	movs	r6, #1
 8001eec:	0223      	lsls	r3, r4, #8
 8001eee:	d507      	bpl.n	8001f00 <__aeabi_dsub+0x244>
 8001ef0:	2602      	movs	r6, #2
 8001ef2:	e7cf      	b.n	8001e94 <__aeabi_dsub+0x1d8>
 8001ef4:	4664      	mov	r4, ip
 8001ef6:	432c      	orrs	r4, r5
 8001ef8:	d100      	bne.n	8001efc <__aeabi_dsub+0x240>
 8001efa:	e1b3      	b.n	8002264 <__aeabi_dsub+0x5a8>
 8001efc:	002c      	movs	r4, r5
 8001efe:	4667      	mov	r7, ip
 8001f00:	077b      	lsls	r3, r7, #29
 8001f02:	d000      	beq.n	8001f06 <__aeabi_dsub+0x24a>
 8001f04:	e762      	b.n	8001dcc <__aeabi_dsub+0x110>
 8001f06:	0763      	lsls	r3, r4, #29
 8001f08:	08ff      	lsrs	r7, r7, #3
 8001f0a:	431f      	orrs	r7, r3
 8001f0c:	2501      	movs	r5, #1
 8001f0e:	4643      	mov	r3, r8
 8001f10:	08e4      	lsrs	r4, r4, #3
 8001f12:	401d      	ands	r5, r3
 8001f14:	e793      	b.n	8001e3e <__aeabi_dsub+0x182>
 8001f16:	2d00      	cmp	r5, #0
 8001f18:	d178      	bne.n	800200c <__aeabi_dsub+0x350>
 8001f1a:	1c75      	adds	r5, r6, #1
 8001f1c:	056d      	lsls	r5, r5, #21
 8001f1e:	0d6d      	lsrs	r5, r5, #21
 8001f20:	2d01      	cmp	r5, #1
 8001f22:	dc00      	bgt.n	8001f26 <__aeabi_dsub+0x26a>
 8001f24:	e0f2      	b.n	800210c <__aeabi_dsub+0x450>
 8001f26:	4650      	mov	r0, sl
 8001f28:	1a80      	subs	r0, r0, r2
 8001f2a:	4582      	cmp	sl, r0
 8001f2c:	41bf      	sbcs	r7, r7
 8001f2e:	1a65      	subs	r5, r4, r1
 8001f30:	427f      	negs	r7, r7
 8001f32:	1bed      	subs	r5, r5, r7
 8001f34:	4684      	mov	ip, r0
 8001f36:	0228      	lsls	r0, r5, #8
 8001f38:	d400      	bmi.n	8001f3c <__aeabi_dsub+0x280>
 8001f3a:	e08c      	b.n	8002056 <__aeabi_dsub+0x39a>
 8001f3c:	4650      	mov	r0, sl
 8001f3e:	1a17      	subs	r7, r2, r0
 8001f40:	42ba      	cmp	r2, r7
 8001f42:	4192      	sbcs	r2, r2
 8001f44:	1b0c      	subs	r4, r1, r4
 8001f46:	4255      	negs	r5, r2
 8001f48:	1b65      	subs	r5, r4, r5
 8001f4a:	4698      	mov	r8, r3
 8001f4c:	e714      	b.n	8001d78 <__aeabi_dsub+0xbc>
 8001f4e:	2501      	movs	r5, #1
 8001f50:	4643      	mov	r3, r8
 8001f52:	2400      	movs	r4, #0
 8001f54:	401d      	ands	r5, r3
 8001f56:	2700      	movs	r7, #0
 8001f58:	e755      	b.n	8001e06 <__aeabi_dsub+0x14a>
 8001f5a:	4c2a      	ldr	r4, [pc, #168]	; (8002004 <__aeabi_dsub+0x348>)
 8001f5c:	1af6      	subs	r6, r6, r3
 8001f5e:	402c      	ands	r4, r5
 8001f60:	e732      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 8001f62:	003d      	movs	r5, r7
 8001f64:	3828      	subs	r0, #40	; 0x28
 8001f66:	4085      	lsls	r5, r0
 8001f68:	2700      	movs	r7, #0
 8001f6a:	e717      	b.n	8001d9c <__aeabi_dsub+0xe0>
 8001f6c:	0038      	movs	r0, r7
 8001f6e:	f000 fadb 	bl	8002528 <__clzsi2>
 8001f72:	3020      	adds	r0, #32
 8001f74:	e706      	b.n	8001d84 <__aeabi_dsub+0xc8>
 8001f76:	430a      	orrs	r2, r1
 8001f78:	0017      	movs	r7, r2
 8001f7a:	2100      	movs	r1, #0
 8001f7c:	1e7a      	subs	r2, r7, #1
 8001f7e:	4197      	sbcs	r7, r2
 8001f80:	e6ee      	b.n	8001d60 <__aeabi_dsub+0xa4>
 8001f82:	2b00      	cmp	r3, #0
 8001f84:	d000      	beq.n	8001f88 <__aeabi_dsub+0x2cc>
 8001f86:	e0e5      	b.n	8002154 <__aeabi_dsub+0x498>
 8001f88:	1c73      	adds	r3, r6, #1
 8001f8a:	469c      	mov	ip, r3
 8001f8c:	055b      	lsls	r3, r3, #21
 8001f8e:	0d5b      	lsrs	r3, r3, #21
 8001f90:	2b01      	cmp	r3, #1
 8001f92:	dc00      	bgt.n	8001f96 <__aeabi_dsub+0x2da>
 8001f94:	e09f      	b.n	80020d6 <__aeabi_dsub+0x41a>
 8001f96:	4b1a      	ldr	r3, [pc, #104]	; (8002000 <__aeabi_dsub+0x344>)
 8001f98:	459c      	cmp	ip, r3
 8001f9a:	d100      	bne.n	8001f9e <__aeabi_dsub+0x2e2>
 8001f9c:	e0c5      	b.n	800212a <__aeabi_dsub+0x46e>
 8001f9e:	4452      	add	r2, sl
 8001fa0:	4552      	cmp	r2, sl
 8001fa2:	4180      	sbcs	r0, r0
 8001fa4:	1864      	adds	r4, r4, r1
 8001fa6:	4240      	negs	r0, r0
 8001fa8:	1824      	adds	r4, r4, r0
 8001faa:	07e7      	lsls	r7, r4, #31
 8001fac:	0852      	lsrs	r2, r2, #1
 8001fae:	4317      	orrs	r7, r2
 8001fb0:	0864      	lsrs	r4, r4, #1
 8001fb2:	4666      	mov	r6, ip
 8001fb4:	e708      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 8001fb6:	4812      	ldr	r0, [pc, #72]	; (8002000 <__aeabi_dsub+0x344>)
 8001fb8:	4285      	cmp	r5, r0
 8001fba:	d100      	bne.n	8001fbe <__aeabi_dsub+0x302>
 8001fbc:	e085      	b.n	80020ca <__aeabi_dsub+0x40e>
 8001fbe:	001d      	movs	r5, r3
 8001fc0:	e6bc      	b.n	8001d3c <__aeabi_dsub+0x80>
 8001fc2:	0029      	movs	r1, r5
 8001fc4:	3e1f      	subs	r6, #31
 8001fc6:	40f1      	lsrs	r1, r6
 8001fc8:	2b20      	cmp	r3, #32
 8001fca:	d100      	bne.n	8001fce <__aeabi_dsub+0x312>
 8001fcc:	e07f      	b.n	80020ce <__aeabi_dsub+0x412>
 8001fce:	2240      	movs	r2, #64	; 0x40
 8001fd0:	1ad3      	subs	r3, r2, r3
 8001fd2:	409d      	lsls	r5, r3
 8001fd4:	432f      	orrs	r7, r5
 8001fd6:	1e7d      	subs	r5, r7, #1
 8001fd8:	41af      	sbcs	r7, r5
 8001fda:	2400      	movs	r4, #0
 8001fdc:	430f      	orrs	r7, r1
 8001fde:	2600      	movs	r6, #0
 8001fe0:	e78e      	b.n	8001f00 <__aeabi_dsub+0x244>
 8001fe2:	002b      	movs	r3, r5
 8001fe4:	000f      	movs	r7, r1
 8001fe6:	3b20      	subs	r3, #32
 8001fe8:	40df      	lsrs	r7, r3
 8001fea:	2d20      	cmp	r5, #32
 8001fec:	d071      	beq.n	80020d2 <__aeabi_dsub+0x416>
 8001fee:	2340      	movs	r3, #64	; 0x40
 8001ff0:	1b5d      	subs	r5, r3, r5
 8001ff2:	40a9      	lsls	r1, r5
 8001ff4:	430a      	orrs	r2, r1
 8001ff6:	1e51      	subs	r1, r2, #1
 8001ff8:	418a      	sbcs	r2, r1
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	4317      	orrs	r7, r2
 8001ffe:	e6af      	b.n	8001d60 <__aeabi_dsub+0xa4>
 8002000:	000007ff 	.word	0x000007ff
 8002004:	ff7fffff 	.word	0xff7fffff
 8002008:	800fffff 	.word	0x800fffff
 800200c:	2e00      	cmp	r6, #0
 800200e:	d03e      	beq.n	800208e <__aeabi_dsub+0x3d2>
 8002010:	4eb3      	ldr	r6, [pc, #716]	; (80022e0 <__aeabi_dsub+0x624>)
 8002012:	45b4      	cmp	ip, r6
 8002014:	d045      	beq.n	80020a2 <__aeabi_dsub+0x3e6>
 8002016:	2680      	movs	r6, #128	; 0x80
 8002018:	0436      	lsls	r6, r6, #16
 800201a:	426d      	negs	r5, r5
 800201c:	4334      	orrs	r4, r6
 800201e:	2d38      	cmp	r5, #56	; 0x38
 8002020:	dd00      	ble.n	8002024 <__aeabi_dsub+0x368>
 8002022:	e0a8      	b.n	8002176 <__aeabi_dsub+0x4ba>
 8002024:	2d1f      	cmp	r5, #31
 8002026:	dd00      	ble.n	800202a <__aeabi_dsub+0x36e>
 8002028:	e11f      	b.n	800226a <__aeabi_dsub+0x5ae>
 800202a:	2620      	movs	r6, #32
 800202c:	0027      	movs	r7, r4
 800202e:	4650      	mov	r0, sl
 8002030:	1b76      	subs	r6, r6, r5
 8002032:	40b7      	lsls	r7, r6
 8002034:	40e8      	lsrs	r0, r5
 8002036:	4307      	orrs	r7, r0
 8002038:	4650      	mov	r0, sl
 800203a:	40b0      	lsls	r0, r6
 800203c:	1e46      	subs	r6, r0, #1
 800203e:	41b0      	sbcs	r0, r6
 8002040:	40ec      	lsrs	r4, r5
 8002042:	4338      	orrs	r0, r7
 8002044:	1a17      	subs	r7, r2, r0
 8002046:	42ba      	cmp	r2, r7
 8002048:	4192      	sbcs	r2, r2
 800204a:	1b0c      	subs	r4, r1, r4
 800204c:	4252      	negs	r2, r2
 800204e:	1aa4      	subs	r4, r4, r2
 8002050:	4666      	mov	r6, ip
 8002052:	4698      	mov	r8, r3
 8002054:	e68b      	b.n	8001d6e <__aeabi_dsub+0xb2>
 8002056:	4664      	mov	r4, ip
 8002058:	4667      	mov	r7, ip
 800205a:	432c      	orrs	r4, r5
 800205c:	d000      	beq.n	8002060 <__aeabi_dsub+0x3a4>
 800205e:	e68b      	b.n	8001d78 <__aeabi_dsub+0xbc>
 8002060:	2500      	movs	r5, #0
 8002062:	2600      	movs	r6, #0
 8002064:	2700      	movs	r7, #0
 8002066:	e6ea      	b.n	8001e3e <__aeabi_dsub+0x182>
 8002068:	001e      	movs	r6, r3
 800206a:	e6ad      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 800206c:	2b1f      	cmp	r3, #31
 800206e:	dc60      	bgt.n	8002132 <__aeabi_dsub+0x476>
 8002070:	2720      	movs	r7, #32
 8002072:	1af8      	subs	r0, r7, r3
 8002074:	000f      	movs	r7, r1
 8002076:	4684      	mov	ip, r0
 8002078:	4087      	lsls	r7, r0
 800207a:	0010      	movs	r0, r2
 800207c:	40d8      	lsrs	r0, r3
 800207e:	4307      	orrs	r7, r0
 8002080:	4660      	mov	r0, ip
 8002082:	4082      	lsls	r2, r0
 8002084:	1e50      	subs	r0, r2, #1
 8002086:	4182      	sbcs	r2, r0
 8002088:	40d9      	lsrs	r1, r3
 800208a:	4317      	orrs	r7, r2
 800208c:	e6f5      	b.n	8001e7a <__aeabi_dsub+0x1be>
 800208e:	0026      	movs	r6, r4
 8002090:	4650      	mov	r0, sl
 8002092:	4306      	orrs	r6, r0
 8002094:	d005      	beq.n	80020a2 <__aeabi_dsub+0x3e6>
 8002096:	43ed      	mvns	r5, r5
 8002098:	2d00      	cmp	r5, #0
 800209a:	d0d3      	beq.n	8002044 <__aeabi_dsub+0x388>
 800209c:	4e90      	ldr	r6, [pc, #576]	; (80022e0 <__aeabi_dsub+0x624>)
 800209e:	45b4      	cmp	ip, r6
 80020a0:	d1bd      	bne.n	800201e <__aeabi_dsub+0x362>
 80020a2:	000c      	movs	r4, r1
 80020a4:	0017      	movs	r7, r2
 80020a6:	4666      	mov	r6, ip
 80020a8:	4698      	mov	r8, r3
 80020aa:	e68d      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80020ac:	488c      	ldr	r0, [pc, #560]	; (80022e0 <__aeabi_dsub+0x624>)
 80020ae:	4283      	cmp	r3, r0
 80020b0:	d00b      	beq.n	80020ca <__aeabi_dsub+0x40e>
 80020b2:	4663      	mov	r3, ip
 80020b4:	e6d9      	b.n	8001e6a <__aeabi_dsub+0x1ae>
 80020b6:	2d00      	cmp	r5, #0
 80020b8:	d000      	beq.n	80020bc <__aeabi_dsub+0x400>
 80020ba:	e096      	b.n	80021ea <__aeabi_dsub+0x52e>
 80020bc:	0008      	movs	r0, r1
 80020be:	4310      	orrs	r0, r2
 80020c0:	d100      	bne.n	80020c4 <__aeabi_dsub+0x408>
 80020c2:	e0e2      	b.n	800228a <__aeabi_dsub+0x5ce>
 80020c4:	000c      	movs	r4, r1
 80020c6:	0017      	movs	r7, r2
 80020c8:	4698      	mov	r8, r3
 80020ca:	4e85      	ldr	r6, [pc, #532]	; (80022e0 <__aeabi_dsub+0x624>)
 80020cc:	e67c      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80020ce:	2500      	movs	r5, #0
 80020d0:	e780      	b.n	8001fd4 <__aeabi_dsub+0x318>
 80020d2:	2100      	movs	r1, #0
 80020d4:	e78e      	b.n	8001ff4 <__aeabi_dsub+0x338>
 80020d6:	0023      	movs	r3, r4
 80020d8:	4650      	mov	r0, sl
 80020da:	4303      	orrs	r3, r0
 80020dc:	2e00      	cmp	r6, #0
 80020de:	d000      	beq.n	80020e2 <__aeabi_dsub+0x426>
 80020e0:	e0a8      	b.n	8002234 <__aeabi_dsub+0x578>
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d100      	bne.n	80020e8 <__aeabi_dsub+0x42c>
 80020e6:	e0de      	b.n	80022a6 <__aeabi_dsub+0x5ea>
 80020e8:	000b      	movs	r3, r1
 80020ea:	4313      	orrs	r3, r2
 80020ec:	d100      	bne.n	80020f0 <__aeabi_dsub+0x434>
 80020ee:	e66b      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80020f0:	4452      	add	r2, sl
 80020f2:	4552      	cmp	r2, sl
 80020f4:	4180      	sbcs	r0, r0
 80020f6:	1864      	adds	r4, r4, r1
 80020f8:	4240      	negs	r0, r0
 80020fa:	1824      	adds	r4, r4, r0
 80020fc:	0017      	movs	r7, r2
 80020fe:	0223      	lsls	r3, r4, #8
 8002100:	d400      	bmi.n	8002104 <__aeabi_dsub+0x448>
 8002102:	e6fd      	b.n	8001f00 <__aeabi_dsub+0x244>
 8002104:	4b77      	ldr	r3, [pc, #476]	; (80022e4 <__aeabi_dsub+0x628>)
 8002106:	4666      	mov	r6, ip
 8002108:	401c      	ands	r4, r3
 800210a:	e65d      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 800210c:	0025      	movs	r5, r4
 800210e:	4650      	mov	r0, sl
 8002110:	4305      	orrs	r5, r0
 8002112:	2e00      	cmp	r6, #0
 8002114:	d1cf      	bne.n	80020b6 <__aeabi_dsub+0x3fa>
 8002116:	2d00      	cmp	r5, #0
 8002118:	d14f      	bne.n	80021ba <__aeabi_dsub+0x4fe>
 800211a:	000c      	movs	r4, r1
 800211c:	4314      	orrs	r4, r2
 800211e:	d100      	bne.n	8002122 <__aeabi_dsub+0x466>
 8002120:	e0a0      	b.n	8002264 <__aeabi_dsub+0x5a8>
 8002122:	000c      	movs	r4, r1
 8002124:	0017      	movs	r7, r2
 8002126:	4698      	mov	r8, r3
 8002128:	e64e      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 800212a:	4666      	mov	r6, ip
 800212c:	2400      	movs	r4, #0
 800212e:	2700      	movs	r7, #0
 8002130:	e685      	b.n	8001e3e <__aeabi_dsub+0x182>
 8002132:	001f      	movs	r7, r3
 8002134:	0008      	movs	r0, r1
 8002136:	3f20      	subs	r7, #32
 8002138:	40f8      	lsrs	r0, r7
 800213a:	0007      	movs	r7, r0
 800213c:	2b20      	cmp	r3, #32
 800213e:	d100      	bne.n	8002142 <__aeabi_dsub+0x486>
 8002140:	e08e      	b.n	8002260 <__aeabi_dsub+0x5a4>
 8002142:	2040      	movs	r0, #64	; 0x40
 8002144:	1ac3      	subs	r3, r0, r3
 8002146:	4099      	lsls	r1, r3
 8002148:	430a      	orrs	r2, r1
 800214a:	1e51      	subs	r1, r2, #1
 800214c:	418a      	sbcs	r2, r1
 800214e:	2100      	movs	r1, #0
 8002150:	4317      	orrs	r7, r2
 8002152:	e692      	b.n	8001e7a <__aeabi_dsub+0x1be>
 8002154:	2e00      	cmp	r6, #0
 8002156:	d114      	bne.n	8002182 <__aeabi_dsub+0x4c6>
 8002158:	0026      	movs	r6, r4
 800215a:	4650      	mov	r0, sl
 800215c:	4306      	orrs	r6, r0
 800215e:	d062      	beq.n	8002226 <__aeabi_dsub+0x56a>
 8002160:	43db      	mvns	r3, r3
 8002162:	2b00      	cmp	r3, #0
 8002164:	d15c      	bne.n	8002220 <__aeabi_dsub+0x564>
 8002166:	1887      	adds	r7, r0, r2
 8002168:	4297      	cmp	r7, r2
 800216a:	4192      	sbcs	r2, r2
 800216c:	1864      	adds	r4, r4, r1
 800216e:	4252      	negs	r2, r2
 8002170:	18a4      	adds	r4, r4, r2
 8002172:	4666      	mov	r6, ip
 8002174:	e687      	b.n	8001e86 <__aeabi_dsub+0x1ca>
 8002176:	4650      	mov	r0, sl
 8002178:	4320      	orrs	r0, r4
 800217a:	1e44      	subs	r4, r0, #1
 800217c:	41a0      	sbcs	r0, r4
 800217e:	2400      	movs	r4, #0
 8002180:	e760      	b.n	8002044 <__aeabi_dsub+0x388>
 8002182:	4e57      	ldr	r6, [pc, #348]	; (80022e0 <__aeabi_dsub+0x624>)
 8002184:	45b4      	cmp	ip, r6
 8002186:	d04e      	beq.n	8002226 <__aeabi_dsub+0x56a>
 8002188:	2680      	movs	r6, #128	; 0x80
 800218a:	0436      	lsls	r6, r6, #16
 800218c:	425b      	negs	r3, r3
 800218e:	4334      	orrs	r4, r6
 8002190:	2b38      	cmp	r3, #56	; 0x38
 8002192:	dd00      	ble.n	8002196 <__aeabi_dsub+0x4da>
 8002194:	e07f      	b.n	8002296 <__aeabi_dsub+0x5da>
 8002196:	2b1f      	cmp	r3, #31
 8002198:	dd00      	ble.n	800219c <__aeabi_dsub+0x4e0>
 800219a:	e08b      	b.n	80022b4 <__aeabi_dsub+0x5f8>
 800219c:	2620      	movs	r6, #32
 800219e:	0027      	movs	r7, r4
 80021a0:	4650      	mov	r0, sl
 80021a2:	1af6      	subs	r6, r6, r3
 80021a4:	40b7      	lsls	r7, r6
 80021a6:	40d8      	lsrs	r0, r3
 80021a8:	4307      	orrs	r7, r0
 80021aa:	4650      	mov	r0, sl
 80021ac:	40b0      	lsls	r0, r6
 80021ae:	1e46      	subs	r6, r0, #1
 80021b0:	41b0      	sbcs	r0, r6
 80021b2:	4307      	orrs	r7, r0
 80021b4:	40dc      	lsrs	r4, r3
 80021b6:	18bf      	adds	r7, r7, r2
 80021b8:	e7d6      	b.n	8002168 <__aeabi_dsub+0x4ac>
 80021ba:	000d      	movs	r5, r1
 80021bc:	4315      	orrs	r5, r2
 80021be:	d100      	bne.n	80021c2 <__aeabi_dsub+0x506>
 80021c0:	e602      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80021c2:	4650      	mov	r0, sl
 80021c4:	1a80      	subs	r0, r0, r2
 80021c6:	4582      	cmp	sl, r0
 80021c8:	41bf      	sbcs	r7, r7
 80021ca:	1a65      	subs	r5, r4, r1
 80021cc:	427f      	negs	r7, r7
 80021ce:	1bed      	subs	r5, r5, r7
 80021d0:	4684      	mov	ip, r0
 80021d2:	0228      	lsls	r0, r5, #8
 80021d4:	d400      	bmi.n	80021d8 <__aeabi_dsub+0x51c>
 80021d6:	e68d      	b.n	8001ef4 <__aeabi_dsub+0x238>
 80021d8:	4650      	mov	r0, sl
 80021da:	1a17      	subs	r7, r2, r0
 80021dc:	42ba      	cmp	r2, r7
 80021de:	4192      	sbcs	r2, r2
 80021e0:	1b0c      	subs	r4, r1, r4
 80021e2:	4252      	negs	r2, r2
 80021e4:	1aa4      	subs	r4, r4, r2
 80021e6:	4698      	mov	r8, r3
 80021e8:	e5ee      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80021ea:	000d      	movs	r5, r1
 80021ec:	4315      	orrs	r5, r2
 80021ee:	d100      	bne.n	80021f2 <__aeabi_dsub+0x536>
 80021f0:	e76b      	b.n	80020ca <__aeabi_dsub+0x40e>
 80021f2:	4650      	mov	r0, sl
 80021f4:	0767      	lsls	r7, r4, #29
 80021f6:	08c0      	lsrs	r0, r0, #3
 80021f8:	4307      	orrs	r7, r0
 80021fa:	2080      	movs	r0, #128	; 0x80
 80021fc:	08e4      	lsrs	r4, r4, #3
 80021fe:	0300      	lsls	r0, r0, #12
 8002200:	4204      	tst	r4, r0
 8002202:	d007      	beq.n	8002214 <__aeabi_dsub+0x558>
 8002204:	08cd      	lsrs	r5, r1, #3
 8002206:	4205      	tst	r5, r0
 8002208:	d104      	bne.n	8002214 <__aeabi_dsub+0x558>
 800220a:	002c      	movs	r4, r5
 800220c:	4698      	mov	r8, r3
 800220e:	08d7      	lsrs	r7, r2, #3
 8002210:	0749      	lsls	r1, r1, #29
 8002212:	430f      	orrs	r7, r1
 8002214:	0f7b      	lsrs	r3, r7, #29
 8002216:	00e4      	lsls	r4, r4, #3
 8002218:	431c      	orrs	r4, r3
 800221a:	00ff      	lsls	r7, r7, #3
 800221c:	4e30      	ldr	r6, [pc, #192]	; (80022e0 <__aeabi_dsub+0x624>)
 800221e:	e5d3      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 8002220:	4e2f      	ldr	r6, [pc, #188]	; (80022e0 <__aeabi_dsub+0x624>)
 8002222:	45b4      	cmp	ip, r6
 8002224:	d1b4      	bne.n	8002190 <__aeabi_dsub+0x4d4>
 8002226:	000c      	movs	r4, r1
 8002228:	0017      	movs	r7, r2
 800222a:	4666      	mov	r6, ip
 800222c:	e5cc      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 800222e:	2700      	movs	r7, #0
 8002230:	2400      	movs	r4, #0
 8002232:	e5e8      	b.n	8001e06 <__aeabi_dsub+0x14a>
 8002234:	2b00      	cmp	r3, #0
 8002236:	d039      	beq.n	80022ac <__aeabi_dsub+0x5f0>
 8002238:	000b      	movs	r3, r1
 800223a:	4313      	orrs	r3, r2
 800223c:	d100      	bne.n	8002240 <__aeabi_dsub+0x584>
 800223e:	e744      	b.n	80020ca <__aeabi_dsub+0x40e>
 8002240:	08c0      	lsrs	r0, r0, #3
 8002242:	0767      	lsls	r7, r4, #29
 8002244:	4307      	orrs	r7, r0
 8002246:	2080      	movs	r0, #128	; 0x80
 8002248:	08e4      	lsrs	r4, r4, #3
 800224a:	0300      	lsls	r0, r0, #12
 800224c:	4204      	tst	r4, r0
 800224e:	d0e1      	beq.n	8002214 <__aeabi_dsub+0x558>
 8002250:	08cb      	lsrs	r3, r1, #3
 8002252:	4203      	tst	r3, r0
 8002254:	d1de      	bne.n	8002214 <__aeabi_dsub+0x558>
 8002256:	08d7      	lsrs	r7, r2, #3
 8002258:	0749      	lsls	r1, r1, #29
 800225a:	430f      	orrs	r7, r1
 800225c:	001c      	movs	r4, r3
 800225e:	e7d9      	b.n	8002214 <__aeabi_dsub+0x558>
 8002260:	2100      	movs	r1, #0
 8002262:	e771      	b.n	8002148 <__aeabi_dsub+0x48c>
 8002264:	2500      	movs	r5, #0
 8002266:	2700      	movs	r7, #0
 8002268:	e5e9      	b.n	8001e3e <__aeabi_dsub+0x182>
 800226a:	002e      	movs	r6, r5
 800226c:	0027      	movs	r7, r4
 800226e:	3e20      	subs	r6, #32
 8002270:	40f7      	lsrs	r7, r6
 8002272:	2d20      	cmp	r5, #32
 8002274:	d02f      	beq.n	80022d6 <__aeabi_dsub+0x61a>
 8002276:	2640      	movs	r6, #64	; 0x40
 8002278:	1b75      	subs	r5, r6, r5
 800227a:	40ac      	lsls	r4, r5
 800227c:	4650      	mov	r0, sl
 800227e:	4320      	orrs	r0, r4
 8002280:	1e44      	subs	r4, r0, #1
 8002282:	41a0      	sbcs	r0, r4
 8002284:	2400      	movs	r4, #0
 8002286:	4338      	orrs	r0, r7
 8002288:	e6dc      	b.n	8002044 <__aeabi_dsub+0x388>
 800228a:	2480      	movs	r4, #128	; 0x80
 800228c:	2500      	movs	r5, #0
 800228e:	0324      	lsls	r4, r4, #12
 8002290:	4e13      	ldr	r6, [pc, #76]	; (80022e0 <__aeabi_dsub+0x624>)
 8002292:	2700      	movs	r7, #0
 8002294:	e5d3      	b.n	8001e3e <__aeabi_dsub+0x182>
 8002296:	4650      	mov	r0, sl
 8002298:	4320      	orrs	r0, r4
 800229a:	0007      	movs	r7, r0
 800229c:	1e78      	subs	r0, r7, #1
 800229e:	4187      	sbcs	r7, r0
 80022a0:	2400      	movs	r4, #0
 80022a2:	18bf      	adds	r7, r7, r2
 80022a4:	e760      	b.n	8002168 <__aeabi_dsub+0x4ac>
 80022a6:	000c      	movs	r4, r1
 80022a8:	0017      	movs	r7, r2
 80022aa:	e58d      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80022ac:	000c      	movs	r4, r1
 80022ae:	0017      	movs	r7, r2
 80022b0:	4e0b      	ldr	r6, [pc, #44]	; (80022e0 <__aeabi_dsub+0x624>)
 80022b2:	e589      	b.n	8001dc8 <__aeabi_dsub+0x10c>
 80022b4:	001e      	movs	r6, r3
 80022b6:	0027      	movs	r7, r4
 80022b8:	3e20      	subs	r6, #32
 80022ba:	40f7      	lsrs	r7, r6
 80022bc:	2b20      	cmp	r3, #32
 80022be:	d00c      	beq.n	80022da <__aeabi_dsub+0x61e>
 80022c0:	2640      	movs	r6, #64	; 0x40
 80022c2:	1af3      	subs	r3, r6, r3
 80022c4:	409c      	lsls	r4, r3
 80022c6:	4650      	mov	r0, sl
 80022c8:	4320      	orrs	r0, r4
 80022ca:	1e44      	subs	r4, r0, #1
 80022cc:	41a0      	sbcs	r0, r4
 80022ce:	4307      	orrs	r7, r0
 80022d0:	2400      	movs	r4, #0
 80022d2:	18bf      	adds	r7, r7, r2
 80022d4:	e748      	b.n	8002168 <__aeabi_dsub+0x4ac>
 80022d6:	2400      	movs	r4, #0
 80022d8:	e7d0      	b.n	800227c <__aeabi_dsub+0x5c0>
 80022da:	2400      	movs	r4, #0
 80022dc:	e7f3      	b.n	80022c6 <__aeabi_dsub+0x60a>
 80022de:	46c0      	nop			; (mov r8, r8)
 80022e0:	000007ff 	.word	0x000007ff
 80022e4:	ff7fffff 	.word	0xff7fffff

080022e8 <__aeabi_dcmpun>:
 80022e8:	b570      	push	{r4, r5, r6, lr}
 80022ea:	4e0e      	ldr	r6, [pc, #56]	; (8002324 <__aeabi_dcmpun+0x3c>)
 80022ec:	030d      	lsls	r5, r1, #12
 80022ee:	031c      	lsls	r4, r3, #12
 80022f0:	0049      	lsls	r1, r1, #1
 80022f2:	005b      	lsls	r3, r3, #1
 80022f4:	0b2d      	lsrs	r5, r5, #12
 80022f6:	0d49      	lsrs	r1, r1, #21
 80022f8:	0b24      	lsrs	r4, r4, #12
 80022fa:	0d5b      	lsrs	r3, r3, #21
 80022fc:	42b1      	cmp	r1, r6
 80022fe:	d004      	beq.n	800230a <__aeabi_dcmpun+0x22>
 8002300:	4908      	ldr	r1, [pc, #32]	; (8002324 <__aeabi_dcmpun+0x3c>)
 8002302:	2000      	movs	r0, #0
 8002304:	428b      	cmp	r3, r1
 8002306:	d008      	beq.n	800231a <__aeabi_dcmpun+0x32>
 8002308:	bd70      	pop	{r4, r5, r6, pc}
 800230a:	4305      	orrs	r5, r0
 800230c:	2001      	movs	r0, #1
 800230e:	2d00      	cmp	r5, #0
 8002310:	d1fa      	bne.n	8002308 <__aeabi_dcmpun+0x20>
 8002312:	4904      	ldr	r1, [pc, #16]	; (8002324 <__aeabi_dcmpun+0x3c>)
 8002314:	2000      	movs	r0, #0
 8002316:	428b      	cmp	r3, r1
 8002318:	d1f6      	bne.n	8002308 <__aeabi_dcmpun+0x20>
 800231a:	4314      	orrs	r4, r2
 800231c:	0020      	movs	r0, r4
 800231e:	1e44      	subs	r4, r0, #1
 8002320:	41a0      	sbcs	r0, r4
 8002322:	e7f1      	b.n	8002308 <__aeabi_dcmpun+0x20>
 8002324:	000007ff 	.word	0x000007ff

08002328 <__aeabi_d2iz>:
 8002328:	b530      	push	{r4, r5, lr}
 800232a:	4d13      	ldr	r5, [pc, #76]	; (8002378 <__aeabi_d2iz+0x50>)
 800232c:	030a      	lsls	r2, r1, #12
 800232e:	004b      	lsls	r3, r1, #1
 8002330:	0b12      	lsrs	r2, r2, #12
 8002332:	0d5b      	lsrs	r3, r3, #21
 8002334:	0fc9      	lsrs	r1, r1, #31
 8002336:	2400      	movs	r4, #0
 8002338:	42ab      	cmp	r3, r5
 800233a:	dd10      	ble.n	800235e <__aeabi_d2iz+0x36>
 800233c:	4c0f      	ldr	r4, [pc, #60]	; (800237c <__aeabi_d2iz+0x54>)
 800233e:	42a3      	cmp	r3, r4
 8002340:	dc0f      	bgt.n	8002362 <__aeabi_d2iz+0x3a>
 8002342:	2480      	movs	r4, #128	; 0x80
 8002344:	4d0e      	ldr	r5, [pc, #56]	; (8002380 <__aeabi_d2iz+0x58>)
 8002346:	0364      	lsls	r4, r4, #13
 8002348:	4322      	orrs	r2, r4
 800234a:	1aed      	subs	r5, r5, r3
 800234c:	2d1f      	cmp	r5, #31
 800234e:	dd0b      	ble.n	8002368 <__aeabi_d2iz+0x40>
 8002350:	480c      	ldr	r0, [pc, #48]	; (8002384 <__aeabi_d2iz+0x5c>)
 8002352:	1ac3      	subs	r3, r0, r3
 8002354:	40da      	lsrs	r2, r3
 8002356:	4254      	negs	r4, r2
 8002358:	2900      	cmp	r1, #0
 800235a:	d100      	bne.n	800235e <__aeabi_d2iz+0x36>
 800235c:	0014      	movs	r4, r2
 800235e:	0020      	movs	r0, r4
 8002360:	bd30      	pop	{r4, r5, pc}
 8002362:	4b09      	ldr	r3, [pc, #36]	; (8002388 <__aeabi_d2iz+0x60>)
 8002364:	18cc      	adds	r4, r1, r3
 8002366:	e7fa      	b.n	800235e <__aeabi_d2iz+0x36>
 8002368:	4c08      	ldr	r4, [pc, #32]	; (800238c <__aeabi_d2iz+0x64>)
 800236a:	40e8      	lsrs	r0, r5
 800236c:	46a4      	mov	ip, r4
 800236e:	4463      	add	r3, ip
 8002370:	409a      	lsls	r2, r3
 8002372:	4302      	orrs	r2, r0
 8002374:	e7ef      	b.n	8002356 <__aeabi_d2iz+0x2e>
 8002376:	46c0      	nop			; (mov r8, r8)
 8002378:	000003fe 	.word	0x000003fe
 800237c:	0000041d 	.word	0x0000041d
 8002380:	00000433 	.word	0x00000433
 8002384:	00000413 	.word	0x00000413
 8002388:	7fffffff 	.word	0x7fffffff
 800238c:	fffffbed 	.word	0xfffffbed

08002390 <__aeabi_i2d>:
 8002390:	b570      	push	{r4, r5, r6, lr}
 8002392:	2800      	cmp	r0, #0
 8002394:	d030      	beq.n	80023f8 <__aeabi_i2d+0x68>
 8002396:	17c3      	asrs	r3, r0, #31
 8002398:	18c4      	adds	r4, r0, r3
 800239a:	405c      	eors	r4, r3
 800239c:	0fc5      	lsrs	r5, r0, #31
 800239e:	0020      	movs	r0, r4
 80023a0:	f000 f8c2 	bl	8002528 <__clzsi2>
 80023a4:	4b17      	ldr	r3, [pc, #92]	; (8002404 <__aeabi_i2d+0x74>)
 80023a6:	4a18      	ldr	r2, [pc, #96]	; (8002408 <__aeabi_i2d+0x78>)
 80023a8:	1a1b      	subs	r3, r3, r0
 80023aa:	1ad2      	subs	r2, r2, r3
 80023ac:	2a1f      	cmp	r2, #31
 80023ae:	dd18      	ble.n	80023e2 <__aeabi_i2d+0x52>
 80023b0:	4a16      	ldr	r2, [pc, #88]	; (800240c <__aeabi_i2d+0x7c>)
 80023b2:	1ad2      	subs	r2, r2, r3
 80023b4:	4094      	lsls	r4, r2
 80023b6:	2200      	movs	r2, #0
 80023b8:	0324      	lsls	r4, r4, #12
 80023ba:	055b      	lsls	r3, r3, #21
 80023bc:	0b24      	lsrs	r4, r4, #12
 80023be:	0d5b      	lsrs	r3, r3, #21
 80023c0:	2100      	movs	r1, #0
 80023c2:	0010      	movs	r0, r2
 80023c4:	0324      	lsls	r4, r4, #12
 80023c6:	0d0a      	lsrs	r2, r1, #20
 80023c8:	0b24      	lsrs	r4, r4, #12
 80023ca:	0512      	lsls	r2, r2, #20
 80023cc:	4322      	orrs	r2, r4
 80023ce:	4c10      	ldr	r4, [pc, #64]	; (8002410 <__aeabi_i2d+0x80>)
 80023d0:	051b      	lsls	r3, r3, #20
 80023d2:	4022      	ands	r2, r4
 80023d4:	4313      	orrs	r3, r2
 80023d6:	005b      	lsls	r3, r3, #1
 80023d8:	07ed      	lsls	r5, r5, #31
 80023da:	085b      	lsrs	r3, r3, #1
 80023dc:	432b      	orrs	r3, r5
 80023de:	0019      	movs	r1, r3
 80023e0:	bd70      	pop	{r4, r5, r6, pc}
 80023e2:	0021      	movs	r1, r4
 80023e4:	4091      	lsls	r1, r2
 80023e6:	000a      	movs	r2, r1
 80023e8:	210b      	movs	r1, #11
 80023ea:	1a08      	subs	r0, r1, r0
 80023ec:	40c4      	lsrs	r4, r0
 80023ee:	055b      	lsls	r3, r3, #21
 80023f0:	0324      	lsls	r4, r4, #12
 80023f2:	0b24      	lsrs	r4, r4, #12
 80023f4:	0d5b      	lsrs	r3, r3, #21
 80023f6:	e7e3      	b.n	80023c0 <__aeabi_i2d+0x30>
 80023f8:	2500      	movs	r5, #0
 80023fa:	2300      	movs	r3, #0
 80023fc:	2400      	movs	r4, #0
 80023fe:	2200      	movs	r2, #0
 8002400:	e7de      	b.n	80023c0 <__aeabi_i2d+0x30>
 8002402:	46c0      	nop			; (mov r8, r8)
 8002404:	0000041e 	.word	0x0000041e
 8002408:	00000433 	.word	0x00000433
 800240c:	00000413 	.word	0x00000413
 8002410:	800fffff 	.word	0x800fffff

08002414 <__aeabi_ui2d>:
 8002414:	b510      	push	{r4, lr}
 8002416:	1e04      	subs	r4, r0, #0
 8002418:	d028      	beq.n	800246c <__aeabi_ui2d+0x58>
 800241a:	f000 f885 	bl	8002528 <__clzsi2>
 800241e:	4b15      	ldr	r3, [pc, #84]	; (8002474 <__aeabi_ui2d+0x60>)
 8002420:	4a15      	ldr	r2, [pc, #84]	; (8002478 <__aeabi_ui2d+0x64>)
 8002422:	1a1b      	subs	r3, r3, r0
 8002424:	1ad2      	subs	r2, r2, r3
 8002426:	2a1f      	cmp	r2, #31
 8002428:	dd15      	ble.n	8002456 <__aeabi_ui2d+0x42>
 800242a:	4a14      	ldr	r2, [pc, #80]	; (800247c <__aeabi_ui2d+0x68>)
 800242c:	1ad2      	subs	r2, r2, r3
 800242e:	4094      	lsls	r4, r2
 8002430:	2200      	movs	r2, #0
 8002432:	0324      	lsls	r4, r4, #12
 8002434:	055b      	lsls	r3, r3, #21
 8002436:	0b24      	lsrs	r4, r4, #12
 8002438:	0d5b      	lsrs	r3, r3, #21
 800243a:	2100      	movs	r1, #0
 800243c:	0010      	movs	r0, r2
 800243e:	0324      	lsls	r4, r4, #12
 8002440:	0d0a      	lsrs	r2, r1, #20
 8002442:	0b24      	lsrs	r4, r4, #12
 8002444:	0512      	lsls	r2, r2, #20
 8002446:	4322      	orrs	r2, r4
 8002448:	4c0d      	ldr	r4, [pc, #52]	; (8002480 <__aeabi_ui2d+0x6c>)
 800244a:	051b      	lsls	r3, r3, #20
 800244c:	4022      	ands	r2, r4
 800244e:	4313      	orrs	r3, r2
 8002450:	005b      	lsls	r3, r3, #1
 8002452:	0859      	lsrs	r1, r3, #1
 8002454:	bd10      	pop	{r4, pc}
 8002456:	0021      	movs	r1, r4
 8002458:	4091      	lsls	r1, r2
 800245a:	000a      	movs	r2, r1
 800245c:	210b      	movs	r1, #11
 800245e:	1a08      	subs	r0, r1, r0
 8002460:	40c4      	lsrs	r4, r0
 8002462:	055b      	lsls	r3, r3, #21
 8002464:	0324      	lsls	r4, r4, #12
 8002466:	0b24      	lsrs	r4, r4, #12
 8002468:	0d5b      	lsrs	r3, r3, #21
 800246a:	e7e6      	b.n	800243a <__aeabi_ui2d+0x26>
 800246c:	2300      	movs	r3, #0
 800246e:	2400      	movs	r4, #0
 8002470:	2200      	movs	r2, #0
 8002472:	e7e2      	b.n	800243a <__aeabi_ui2d+0x26>
 8002474:	0000041e 	.word	0x0000041e
 8002478:	00000433 	.word	0x00000433
 800247c:	00000413 	.word	0x00000413
 8002480:	800fffff 	.word	0x800fffff

08002484 <__aeabi_f2d>:
 8002484:	0041      	lsls	r1, r0, #1
 8002486:	0e09      	lsrs	r1, r1, #24
 8002488:	1c4b      	adds	r3, r1, #1
 800248a:	b570      	push	{r4, r5, r6, lr}
 800248c:	b2db      	uxtb	r3, r3
 800248e:	0246      	lsls	r6, r0, #9
 8002490:	0a75      	lsrs	r5, r6, #9
 8002492:	0fc4      	lsrs	r4, r0, #31
 8002494:	2b01      	cmp	r3, #1
 8002496:	dd14      	ble.n	80024c2 <__aeabi_f2d+0x3e>
 8002498:	23e0      	movs	r3, #224	; 0xe0
 800249a:	009b      	lsls	r3, r3, #2
 800249c:	076d      	lsls	r5, r5, #29
 800249e:	0b36      	lsrs	r6, r6, #12
 80024a0:	18cb      	adds	r3, r1, r3
 80024a2:	2100      	movs	r1, #0
 80024a4:	0d0a      	lsrs	r2, r1, #20
 80024a6:	0028      	movs	r0, r5
 80024a8:	0512      	lsls	r2, r2, #20
 80024aa:	4d1c      	ldr	r5, [pc, #112]	; (800251c <__aeabi_f2d+0x98>)
 80024ac:	4332      	orrs	r2, r6
 80024ae:	055b      	lsls	r3, r3, #21
 80024b0:	402a      	ands	r2, r5
 80024b2:	085b      	lsrs	r3, r3, #1
 80024b4:	4313      	orrs	r3, r2
 80024b6:	005b      	lsls	r3, r3, #1
 80024b8:	07e4      	lsls	r4, r4, #31
 80024ba:	085b      	lsrs	r3, r3, #1
 80024bc:	4323      	orrs	r3, r4
 80024be:	0019      	movs	r1, r3
 80024c0:	bd70      	pop	{r4, r5, r6, pc}
 80024c2:	2900      	cmp	r1, #0
 80024c4:	d114      	bne.n	80024f0 <__aeabi_f2d+0x6c>
 80024c6:	2d00      	cmp	r5, #0
 80024c8:	d01e      	beq.n	8002508 <__aeabi_f2d+0x84>
 80024ca:	0028      	movs	r0, r5
 80024cc:	f000 f82c 	bl	8002528 <__clzsi2>
 80024d0:	280a      	cmp	r0, #10
 80024d2:	dc1c      	bgt.n	800250e <__aeabi_f2d+0x8a>
 80024d4:	230b      	movs	r3, #11
 80024d6:	002a      	movs	r2, r5
 80024d8:	1a1b      	subs	r3, r3, r0
 80024da:	40da      	lsrs	r2, r3
 80024dc:	0003      	movs	r3, r0
 80024de:	3315      	adds	r3, #21
 80024e0:	409d      	lsls	r5, r3
 80024e2:	4b0f      	ldr	r3, [pc, #60]	; (8002520 <__aeabi_f2d+0x9c>)
 80024e4:	0312      	lsls	r2, r2, #12
 80024e6:	1a1b      	subs	r3, r3, r0
 80024e8:	055b      	lsls	r3, r3, #21
 80024ea:	0b16      	lsrs	r6, r2, #12
 80024ec:	0d5b      	lsrs	r3, r3, #21
 80024ee:	e7d8      	b.n	80024a2 <__aeabi_f2d+0x1e>
 80024f0:	2d00      	cmp	r5, #0
 80024f2:	d006      	beq.n	8002502 <__aeabi_f2d+0x7e>
 80024f4:	0b32      	lsrs	r2, r6, #12
 80024f6:	2680      	movs	r6, #128	; 0x80
 80024f8:	0336      	lsls	r6, r6, #12
 80024fa:	076d      	lsls	r5, r5, #29
 80024fc:	4316      	orrs	r6, r2
 80024fe:	4b09      	ldr	r3, [pc, #36]	; (8002524 <__aeabi_f2d+0xa0>)
 8002500:	e7cf      	b.n	80024a2 <__aeabi_f2d+0x1e>
 8002502:	4b08      	ldr	r3, [pc, #32]	; (8002524 <__aeabi_f2d+0xa0>)
 8002504:	2600      	movs	r6, #0
 8002506:	e7cc      	b.n	80024a2 <__aeabi_f2d+0x1e>
 8002508:	2300      	movs	r3, #0
 800250a:	2600      	movs	r6, #0
 800250c:	e7c9      	b.n	80024a2 <__aeabi_f2d+0x1e>
 800250e:	0003      	movs	r3, r0
 8002510:	002a      	movs	r2, r5
 8002512:	3b0b      	subs	r3, #11
 8002514:	409a      	lsls	r2, r3
 8002516:	2500      	movs	r5, #0
 8002518:	e7e3      	b.n	80024e2 <__aeabi_f2d+0x5e>
 800251a:	46c0      	nop			; (mov r8, r8)
 800251c:	800fffff 	.word	0x800fffff
 8002520:	00000389 	.word	0x00000389
 8002524:	000007ff 	.word	0x000007ff

08002528 <__clzsi2>:
 8002528:	211c      	movs	r1, #28
 800252a:	2301      	movs	r3, #1
 800252c:	041b      	lsls	r3, r3, #16
 800252e:	4298      	cmp	r0, r3
 8002530:	d301      	bcc.n	8002536 <__clzsi2+0xe>
 8002532:	0c00      	lsrs	r0, r0, #16
 8002534:	3910      	subs	r1, #16
 8002536:	0a1b      	lsrs	r3, r3, #8
 8002538:	4298      	cmp	r0, r3
 800253a:	d301      	bcc.n	8002540 <__clzsi2+0x18>
 800253c:	0a00      	lsrs	r0, r0, #8
 800253e:	3908      	subs	r1, #8
 8002540:	091b      	lsrs	r3, r3, #4
 8002542:	4298      	cmp	r0, r3
 8002544:	d301      	bcc.n	800254a <__clzsi2+0x22>
 8002546:	0900      	lsrs	r0, r0, #4
 8002548:	3904      	subs	r1, #4
 800254a:	a202      	add	r2, pc, #8	; (adr r2, 8002554 <__clzsi2+0x2c>)
 800254c:	5c10      	ldrb	r0, [r2, r0]
 800254e:	1840      	adds	r0, r0, r1
 8002550:	4770      	bx	lr
 8002552:	46c0      	nop			; (mov r8, r8)
 8002554:	02020304 	.word	0x02020304
 8002558:	01010101 	.word	0x01010101
	...

08002564 <__clzdi2>:
 8002564:	b510      	push	{r4, lr}
 8002566:	2900      	cmp	r1, #0
 8002568:	d103      	bne.n	8002572 <__clzdi2+0xe>
 800256a:	f7ff ffdd 	bl	8002528 <__clzsi2>
 800256e:	3020      	adds	r0, #32
 8002570:	e002      	b.n	8002578 <__clzdi2+0x14>
 8002572:	1c08      	adds	r0, r1, #0
 8002574:	f7ff ffd8 	bl	8002528 <__clzsi2>
 8002578:	bd10      	pop	{r4, pc}
 800257a:	46c0      	nop			; (mov r8, r8)

0800257c <HAL_InitTick>:
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
  HAL_StatusTypeDef  status = HAL_OK;

  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 800257c:	21fa      	movs	r1, #250	; 0xfa
 800257e:	4b0a      	ldr	r3, [pc, #40]	; (80025a8 <HAL_InitTick+0x2c>)
{
 8002580:	b570      	push	{r4, r5, r6, lr}
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8002582:	0089      	lsls	r1, r1, #2
{
 8002584:	0005      	movs	r5, r0
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8002586:	6818      	ldr	r0, [r3, #0]
 8002588:	f7fd fdda 	bl	8000140 <__udivsi3>
 800258c:	f000 f870 	bl	8002670 <HAL_SYSTICK_Config>
 8002590:	0004      	movs	r4, r0
  {
    status = HAL_ERROR;
 8002592:	2001      	movs	r0, #1
  if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 8002594:	2c00      	cmp	r4, #0
 8002596:	d105      	bne.n	80025a4 <HAL_InitTick+0x28>
  }
  else
  {
    /*Configure the SysTick IRQ priority */
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 8002598:	3802      	subs	r0, #2
 800259a:	0022      	movs	r2, r4
 800259c:	0029      	movs	r1, r5
 800259e:	f000 f837 	bl	8002610 <HAL_NVIC_SetPriority>
 80025a2:	0020      	movs	r0, r4
  }

  /* Return function status */
  return status;
}
 80025a4:	bd70      	pop	{r4, r5, r6, pc}
 80025a6:	46c0      	nop			; (mov r8, r8)
 80025a8:	20000004 	.word	0x20000004

080025ac <HAL_Init>:
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 80025ac:	2340      	movs	r3, #64	; 0x40
 80025ae:	4a08      	ldr	r2, [pc, #32]	; (80025d0 <HAL_Init+0x24>)
{
 80025b0:	b510      	push	{r4, lr}
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 80025b2:	6811      	ldr	r1, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80025b4:	2000      	movs	r0, #0
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 80025b6:	430b      	orrs	r3, r1
 80025b8:	6013      	str	r3, [r2, #0]
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80025ba:	f7ff ffdf 	bl	800257c <HAL_InitTick>
 80025be:	1e04      	subs	r4, r0, #0
 80025c0:	d103      	bne.n	80025ca <HAL_Init+0x1e>
    HAL_MspInit();
 80025c2:	f001 fb7f 	bl	8003cc4 <HAL_MspInit>
}
 80025c6:	0020      	movs	r0, r4
 80025c8:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 80025ca:	2401      	movs	r4, #1
 80025cc:	e7fb      	b.n	80025c6 <HAL_Init+0x1a>
 80025ce:	46c0      	nop			; (mov r8, r8)
 80025d0:	40022000 	.word	0x40022000

080025d4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick++;
 80025d4:	4a02      	ldr	r2, [pc, #8]	; (80025e0 <HAL_IncTick+0xc>)
 80025d6:	6813      	ldr	r3, [r2, #0]
 80025d8:	3301      	adds	r3, #1
 80025da:	6013      	str	r3, [r2, #0]
}
 80025dc:	4770      	bx	lr
 80025de:	46c0      	nop			; (mov r8, r8)
 80025e0:	20000200 	.word	0x20000200

080025e4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80025e4:	4b01      	ldr	r3, [pc, #4]	; (80025ec <HAL_GetTick+0x8>)
 80025e6:	6818      	ldr	r0, [r3, #0]
}
 80025e8:	4770      	bx	lr
 80025ea:	46c0      	nop			; (mov r8, r8)
 80025ec:	20000200 	.word	0x20000200

080025f0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80025f0:	b570      	push	{r4, r5, r6, lr}
 80025f2:	0004      	movs	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80025f4:	f7ff fff6 	bl	80025e4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a period to guaranty minimum wait */
  if (wait < HAL_MAX_DELAY)
  {
    wait++;
 80025f8:	1c63      	adds	r3, r4, #1
 80025fa:	1e5a      	subs	r2, r3, #1
 80025fc:	4193      	sbcs	r3, r2
  uint32_t tickstart = HAL_GetTick();
 80025fe:	0005      	movs	r5, r0
    wait++;
 8002600:	18e4      	adds	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002602:	f7ff ffef 	bl	80025e4 <HAL_GetTick>
 8002606:	1b40      	subs	r0, r0, r5
 8002608:	4284      	cmp	r4, r0
 800260a:	d8fa      	bhi.n	8002602 <HAL_Delay+0x12>
  {
  }
}
 800260c:	bd70      	pop	{r4, r5, r6, pc}
	...

08002610 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002610:	b570      	push	{r4, r5, r6, lr}
 8002612:	0189      	lsls	r1, r1, #6
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) < 0)
 8002614:	2800      	cmp	r0, #0
 8002616:	da14      	bge.n	8002642 <HAL_NVIC_SetPriority+0x32>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002618:	230f      	movs	r3, #15
 800261a:	b2c0      	uxtb	r0, r0
 800261c:	4003      	ands	r3, r0
 800261e:	3b08      	subs	r3, #8
 8002620:	4a11      	ldr	r2, [pc, #68]	; (8002668 <HAL_NVIC_SetPriority+0x58>)
 8002622:	089b      	lsrs	r3, r3, #2
 8002624:	009b      	lsls	r3, r3, #2
 8002626:	189b      	adds	r3, r3, r2
 8002628:	2203      	movs	r2, #3
 800262a:	4010      	ands	r0, r2
 800262c:	4090      	lsls	r0, r2
 800262e:	32fc      	adds	r2, #252	; 0xfc
 8002630:	0015      	movs	r5, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002632:	4011      	ands	r1, r2
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002634:	4085      	lsls	r5, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002636:	4081      	lsls	r1, r0
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002638:	69dc      	ldr	r4, [r3, #28]
 800263a:	43ac      	bics	r4, r5
 800263c:	4321      	orrs	r1, r4
 800263e:	61d9      	str	r1, [r3, #28]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
}
 8002640:	bd70      	pop	{r4, r5, r6, pc}
  }
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002642:	2503      	movs	r5, #3
 8002644:	0883      	lsrs	r3, r0, #2
 8002646:	4028      	ands	r0, r5
 8002648:	40a8      	lsls	r0, r5
 800264a:	35fc      	adds	r5, #252	; 0xfc
 800264c:	002e      	movs	r6, r5
 800264e:	4a07      	ldr	r2, [pc, #28]	; (800266c <HAL_NVIC_SetPriority+0x5c>)
 8002650:	009b      	lsls	r3, r3, #2
 8002652:	189b      	adds	r3, r3, r2
 8002654:	22c0      	movs	r2, #192	; 0xc0
 8002656:	4086      	lsls	r6, r0
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002658:	4029      	ands	r1, r5
 800265a:	4081      	lsls	r1, r0
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800265c:	0092      	lsls	r2, r2, #2
 800265e:	589c      	ldr	r4, [r3, r2]
 8002660:	43b4      	bics	r4, r6
 8002662:	4321      	orrs	r1, r4
 8002664:	5099      	str	r1, [r3, r2]
 8002666:	e7eb      	b.n	8002640 <HAL_NVIC_SetPriority+0x30>
 8002668:	e000ed00 	.word	0xe000ed00
 800266c:	e000e100 	.word	0xe000e100

08002670 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002670:	4a09      	ldr	r2, [pc, #36]	; (8002698 <HAL_SYSTICK_Config+0x28>)
 8002672:	1e43      	subs	r3, r0, #1
  {
    return (1UL);                                                   /* Reload value impossible */
 8002674:	2001      	movs	r0, #1
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002676:	4293      	cmp	r3, r2
 8002678:	d80d      	bhi.n	8002696 <HAL_SYSTICK_Config+0x26>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800267a:	21c0      	movs	r1, #192	; 0xc0
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800267c:	4a07      	ldr	r2, [pc, #28]	; (800269c <HAL_SYSTICK_Config+0x2c>)
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800267e:	4808      	ldr	r0, [pc, #32]	; (80026a0 <HAL_SYSTICK_Config+0x30>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002680:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002682:	6a03      	ldr	r3, [r0, #32]
 8002684:	0609      	lsls	r1, r1, #24
 8002686:	021b      	lsls	r3, r3, #8
 8002688:	0a1b      	lsrs	r3, r3, #8
 800268a:	430b      	orrs	r3, r1
 800268c:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800268e:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002690:	2307      	movs	r3, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002692:	6090      	str	r0, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002694:	6013      	str	r3, [r2, #0]
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 8002696:	4770      	bx	lr
 8002698:	00ffffff 	.word	0x00ffffff
 800269c:	e000e010 	.word	0xe000e010
 80026a0:	e000ed00 	.word	0xe000ed00

080026a4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80026a4:	b5f0      	push	{r4, r5, r6, r7, lr}
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
        
        temp = SYSCFG->EXTICR[position >> 2U];
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80026a6:	4a55      	ldr	r2, [pc, #340]	; (80027fc <HAL_GPIO_Init+0x158>)
  while (((GPIO_Init->Pin) >> position) != 0)
 80026a8:	680b      	ldr	r3, [r1, #0]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80026aa:	1882      	adds	r2, r0, r2
 80026ac:	1e54      	subs	r4, r2, #1
 80026ae:	41a2      	sbcs	r2, r4
{
 80026b0:	b085      	sub	sp, #20
  while (((GPIO_Init->Pin) >> position) != 0)
 80026b2:	9301      	str	r3, [sp, #4]
  uint32_t position = 0x00U;
 80026b4:	2300      	movs	r3, #0
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80026b6:	3205      	adds	r2, #5
 80026b8:	9203      	str	r2, [sp, #12]
  while (((GPIO_Init->Pin) >> position) != 0)
 80026ba:	9a01      	ldr	r2, [sp, #4]
 80026bc:	40da      	lsrs	r2, r3
 80026be:	d101      	bne.n	80026c4 <HAL_GPIO_Init+0x20>
        EXTI->FTSR = temp;
      }
    }
    position++;
  }
}
 80026c0:	b005      	add	sp, #20
 80026c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 80026c4:	2501      	movs	r5, #1
 80026c6:	409d      	lsls	r5, r3
 80026c8:	9a01      	ldr	r2, [sp, #4]
 80026ca:	402a      	ands	r2, r5
 80026cc:	9200      	str	r2, [sp, #0]
    if(iocurrent)
 80026ce:	d100      	bne.n	80026d2 <HAL_GPIO_Init+0x2e>
 80026d0:	e091      	b.n	80027f6 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD)) 
 80026d2:	684a      	ldr	r2, [r1, #4]
 80026d4:	4694      	mov	ip, r2
 80026d6:	2210      	movs	r2, #16
 80026d8:	4664      	mov	r4, ip
 80026da:	4394      	bics	r4, r2
 80026dc:	0022      	movs	r2, r4
 80026de:	3c01      	subs	r4, #1
 80026e0:	2a02      	cmp	r2, #2
 80026e2:	d11f      	bne.n	8002724 <HAL_GPIO_Init+0x80>
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U)) ;
 80026e4:	2407      	movs	r4, #7
 80026e6:	270f      	movs	r7, #15
 80026e8:	401c      	ands	r4, r3
 80026ea:	00a4      	lsls	r4, r4, #2
 80026ec:	40a7      	lsls	r7, r4
        temp = GPIOx->AFR[position >> 3U];
 80026ee:	08da      	lsrs	r2, r3, #3
 80026f0:	0092      	lsls	r2, r2, #2
 80026f2:	1882      	adds	r2, r0, r2
 80026f4:	6a16      	ldr	r6, [r2, #32]
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U)) ;
 80026f6:	43be      	bics	r6, r7
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U)) ;
 80026f8:	690f      	ldr	r7, [r1, #16]
 80026fa:	40a7      	lsls	r7, r4
 80026fc:	433e      	orrs	r6, r7
        GPIOx->AFR[position >> 3U] = temp;
 80026fe:	6216      	str	r6, [r2, #32]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002700:	2403      	movs	r4, #3
 8002702:	005e      	lsls	r6, r3, #1
 8002704:	40b4      	lsls	r4, r6
        temp = GPIOx->OSPEEDR;
 8002706:	6882      	ldr	r2, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 8002708:	43a2      	bics	r2, r4
        temp |= (GPIO_Init->Speed << (position * 2U));
 800270a:	68cc      	ldr	r4, [r1, #12]
 800270c:	40b4      	lsls	r4, r6
 800270e:	4322      	orrs	r2, r4
        GPIOx->OSPEEDR = temp;
 8002710:	6082      	str	r2, [r0, #8]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8002712:	4662      	mov	r2, ip
 8002714:	06d2      	lsls	r2, r2, #27
 8002716:	0fd2      	lsrs	r2, r2, #31
 8002718:	409a      	lsls	r2, r3
        temp= GPIOx->OTYPER;
 800271a:	6844      	ldr	r4, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800271c:	43ac      	bics	r4, r5
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800271e:	4322      	orrs	r2, r4
        GPIOx->OTYPER = temp;
 8002720:	6042      	str	r2, [r0, #4]
 8002722:	e001      	b.n	8002728 <HAL_GPIO_Init+0x84>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002724:	2c01      	cmp	r4, #1
 8002726:	d9eb      	bls.n	8002700 <HAL_GPIO_Init+0x5c>
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002728:	2603      	movs	r6, #3
 800272a:	0034      	movs	r4, r6
 800272c:	005d      	lsls	r5, r3, #1
 800272e:	40ac      	lsls	r4, r5
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002730:	4662      	mov	r2, ip
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8002732:	43e4      	mvns	r4, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002734:	4032      	ands	r2, r6
 8002736:	40aa      	lsls	r2, r5
      temp = GPIOx->MODER;
 8002738:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 800273a:	4027      	ands	r7, r4
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800273c:	433a      	orrs	r2, r7
      GPIOx->MODER = temp;
 800273e:	6002      	str	r2, [r0, #0]
      temp = GPIOx->PUPDR;
 8002740:	68c2      	ldr	r2, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8002742:	4014      	ands	r4, r2
      temp |= ((GPIO_Init->Pull) << (position * 2U)); 
 8002744:	688a      	ldr	r2, [r1, #8]
 8002746:	40aa      	lsls	r2, r5
 8002748:	4314      	orrs	r4, r2
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 800274a:	4662      	mov	r2, ip
      GPIOx->PUPDR = temp;
 800274c:	60c4      	str	r4, [r0, #12]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE) 
 800274e:	00d2      	lsls	r2, r2, #3
 8002750:	d551      	bpl.n	80027f6 <HAL_GPIO_Init+0x152>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002752:	2501      	movs	r5, #1
 8002754:	4c2a      	ldr	r4, [pc, #168]	; (8002800 <HAL_GPIO_Init+0x15c>)
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 8002756:	270f      	movs	r7, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002758:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800275a:	432a      	orrs	r2, r5
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 800275c:	001d      	movs	r5, r3
 800275e:	4035      	ands	r5, r6
 8002760:	00ad      	lsls	r5, r5, #2
 8002762:	40af      	lsls	r7, r5
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002764:	6362      	str	r2, [r4, #52]	; 0x34
 8002766:	4a27      	ldr	r2, [pc, #156]	; (8002804 <HAL_GPIO_Init+0x160>)
        temp = SYSCFG->EXTICR[position >> 2U];
 8002768:	089c      	lsrs	r4, r3, #2
 800276a:	00a4      	lsls	r4, r4, #2
 800276c:	18a4      	adds	r4, r4, r2
 800276e:	68a2      	ldr	r2, [r4, #8]
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 8002770:	43ba      	bics	r2, r7
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002772:	27a0      	movs	r7, #160	; 0xa0
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 8002774:	9202      	str	r2, [sp, #8]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002776:	05ff      	lsls	r7, r7, #23
 8002778:	2200      	movs	r2, #0
 800277a:	42b8      	cmp	r0, r7
 800277c:	d010      	beq.n	80027a0 <HAL_GPIO_Init+0xfc>
 800277e:	4f22      	ldr	r7, [pc, #136]	; (8002808 <HAL_GPIO_Init+0x164>)
 8002780:	3201      	adds	r2, #1
 8002782:	42b8      	cmp	r0, r7
 8002784:	d00c      	beq.n	80027a0 <HAL_GPIO_Init+0xfc>
 8002786:	4f21      	ldr	r7, [pc, #132]	; (800280c <HAL_GPIO_Init+0x168>)
 8002788:	3201      	adds	r2, #1
 800278a:	42b8      	cmp	r0, r7
 800278c:	d008      	beq.n	80027a0 <HAL_GPIO_Init+0xfc>
 800278e:	4f20      	ldr	r7, [pc, #128]	; (8002810 <HAL_GPIO_Init+0x16c>)
 8002790:	0032      	movs	r2, r6
 8002792:	42b8      	cmp	r0, r7
 8002794:	d004      	beq.n	80027a0 <HAL_GPIO_Init+0xfc>
 8002796:	4e1f      	ldr	r6, [pc, #124]	; (8002814 <HAL_GPIO_Init+0x170>)
 8002798:	3201      	adds	r2, #1
 800279a:	42b0      	cmp	r0, r6
 800279c:	d000      	beq.n	80027a0 <HAL_GPIO_Init+0xfc>
 800279e:	9a03      	ldr	r2, [sp, #12]
 80027a0:	40aa      	lsls	r2, r5
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80027a2:	4667      	mov	r7, ip
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80027a4:	9d02      	ldr	r5, [sp, #8]
 80027a6:	432a      	orrs	r2, r5
        SYSCFG->EXTICR[position >> 2U] = temp;
 80027a8:	60a2      	str	r2, [r4, #8]
        temp = EXTI->IMR;
 80027aa:	4a1b      	ldr	r2, [pc, #108]	; (8002818 <HAL_GPIO_Init+0x174>)
        temp &= ~((uint32_t)iocurrent);
 80027ac:	9c00      	ldr	r4, [sp, #0]
        temp = EXTI->IMR;
 80027ae:	6816      	ldr	r6, [r2, #0]
          temp |= iocurrent;
 80027b0:	9d00      	ldr	r5, [sp, #0]
        temp &= ~((uint32_t)iocurrent);
 80027b2:	43e4      	mvns	r4, r4
          temp |= iocurrent;
 80027b4:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80027b6:	03ff      	lsls	r7, r7, #15
 80027b8:	d401      	bmi.n	80027be <HAL_GPIO_Init+0x11a>
        temp &= ~((uint32_t)iocurrent);
 80027ba:	0035      	movs	r5, r6
 80027bc:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80027be:	4667      	mov	r7, ip
        EXTI->IMR = temp;
 80027c0:	6015      	str	r5, [r2, #0]
        temp = EXTI->EMR;
 80027c2:	6856      	ldr	r6, [r2, #4]
          temp |= iocurrent;
 80027c4:	9d00      	ldr	r5, [sp, #0]
 80027c6:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80027c8:	03bf      	lsls	r7, r7, #14
 80027ca:	d401      	bmi.n	80027d0 <HAL_GPIO_Init+0x12c>
        temp &= ~((uint32_t)iocurrent);
 80027cc:	0035      	movs	r5, r6
 80027ce:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80027d0:	4667      	mov	r7, ip
        EXTI->EMR = temp;
 80027d2:	6055      	str	r5, [r2, #4]
        temp = EXTI->RTSR;
 80027d4:	6896      	ldr	r6, [r2, #8]
          temp |= iocurrent;
 80027d6:	9d00      	ldr	r5, [sp, #0]
 80027d8:	4335      	orrs	r5, r6
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80027da:	02ff      	lsls	r7, r7, #11
 80027dc:	d401      	bmi.n	80027e2 <HAL_GPIO_Init+0x13e>
        temp &= ~((uint32_t)iocurrent);
 80027de:	0035      	movs	r5, r6
 80027e0:	4025      	ands	r5, r4
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80027e2:	4667      	mov	r7, ip
        EXTI->RTSR = temp;
 80027e4:	6095      	str	r5, [r2, #8]
        temp = EXTI->FTSR;
 80027e6:	68d5      	ldr	r5, [r2, #12]
          temp |= iocurrent;
 80027e8:	9e00      	ldr	r6, [sp, #0]
 80027ea:	432e      	orrs	r6, r5
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80027ec:	02bf      	lsls	r7, r7, #10
 80027ee:	d401      	bmi.n	80027f4 <HAL_GPIO_Init+0x150>
        temp &= ~((uint32_t)iocurrent);
 80027f0:	4025      	ands	r5, r4
 80027f2:	002e      	movs	r6, r5
        EXTI->FTSR = temp;
 80027f4:	60d6      	str	r6, [r2, #12]
    position++;
 80027f6:	3301      	adds	r3, #1
 80027f8:	e75f      	b.n	80026ba <HAL_GPIO_Init+0x16>
 80027fa:	46c0      	nop			; (mov r8, r8)
 80027fc:	afffe400 	.word	0xafffe400
 8002800:	40021000 	.word	0x40021000
 8002804:	40010000 	.word	0x40010000
 8002808:	50000400 	.word	0x50000400
 800280c:	50000800 	.word	0x50000800
 8002810:	50000c00 	.word	0x50000c00
 8002814:	50001000 	.word	0x50001000
 8002818:	40010400 	.word	0x40010400

0800281c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;
  
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,GPIO_Pin));
  
  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800281c:	6900      	ldr	r0, [r0, #16]
 800281e:	4008      	ands	r0, r1
 8002820:	1e41      	subs	r1, r0, #1
 8002822:	4188      	sbcs	r0, r1
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
 8002824:	b2c0      	uxtb	r0, r0
}
 8002826:	4770      	bx	lr

08002828 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx,GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));
  
  if(PinState != GPIO_PIN_RESET)
 8002828:	2a00      	cmp	r2, #0
 800282a:	d001      	beq.n	8002830 <HAL_GPIO_WritePin+0x8>
  {
    GPIOx->BSRR = GPIO_Pin;
 800282c:	6181      	str	r1, [r0, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 800282e:	4770      	bx	lr
    GPIOx->BRR = GPIO_Pin ;
 8002830:	6281      	str	r1, [r0, #40]	; 0x28
}
 8002832:	e7fc      	b.n	800282e <HAL_GPIO_WritePin+0x6>

08002834 <HAL_PWR_EnableBkUpAccess>:
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR, PWR_CR_DBP);
 8002834:	2380      	movs	r3, #128	; 0x80
 8002836:	4a03      	ldr	r2, [pc, #12]	; (8002844 <HAL_PWR_EnableBkUpAccess+0x10>)
 8002838:	005b      	lsls	r3, r3, #1
 800283a:	6811      	ldr	r1, [r2, #0]
 800283c:	430b      	orrs	r3, r1
 800283e:	6013      	str	r3, [r2, #0]
}
 8002840:	4770      	bx	lr
 8002842:	46c0      	nop			; (mov r8, r8)
 8002844:	40007000 	.word	0x40007000

08002848 <HAL_RCC_GetSysClockFreq>:
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8002848:	220c      	movs	r2, #12
  tmpreg = RCC->CFGR;
 800284a:	4b18      	ldr	r3, [pc, #96]	; (80028ac <HAL_RCC_GetSysClockFreq+0x64>)
{
 800284c:	b510      	push	{r4, lr}
  tmpreg = RCC->CFGR;
 800284e:	68d9      	ldr	r1, [r3, #12]
  switch (tmpreg & RCC_CFGR_SWS)
 8002850:	400a      	ands	r2, r1
 8002852:	2a08      	cmp	r2, #8
 8002854:	d026      	beq.n	80028a4 <HAL_RCC_GetSysClockFreq+0x5c>
 8002856:	2a0c      	cmp	r2, #12
 8002858:	d006      	beq.n	8002868 <HAL_RCC_GetSysClockFreq+0x20>
 800285a:	2a04      	cmp	r2, #4
 800285c:	d11a      	bne.n	8002894 <HAL_RCC_GetSysClockFreq+0x4c>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	06db      	lsls	r3, r3, #27
 8002862:	d421      	bmi.n	80028a8 <HAL_RCC_GetSysClockFreq+0x60>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
 8002864:	4812      	ldr	r0, [pc, #72]	; (80028b0 <HAL_RCC_GetSysClockFreq+0x68>)
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
      break;
    }
  }
  return sysclockfreq;
}
 8002866:	bd10      	pop	{r4, pc}
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8002868:	028a      	lsls	r2, r1, #10
 800286a:	4812      	ldr	r0, [pc, #72]	; (80028b4 <HAL_RCC_GetSysClockFreq+0x6c>)
 800286c:	0f12      	lsrs	r2, r2, #28
 800286e:	5c82      	ldrb	r2, [r0, r2]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8002870:	0209      	lsls	r1, r1, #8
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002872:	68d8      	ldr	r0, [r3, #12]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8002874:	0f89      	lsrs	r1, r1, #30
 8002876:	3101      	adds	r1, #1
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8002878:	03c0      	lsls	r0, r0, #15
 800287a:	d504      	bpl.n	8002886 <HAL_RCC_GetSysClockFreq+0x3e>
        pllvco = (HSE_VALUE * pllm) / plld;
 800287c:	480e      	ldr	r0, [pc, #56]	; (80028b8 <HAL_RCC_GetSysClockFreq+0x70>)
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 800287e:	4350      	muls	r0, r2
 8002880:	f7fd fc5e 	bl	8000140 <__udivsi3>
 8002884:	e7ef      	b.n	8002866 <HAL_RCC_GetSysClockFreq+0x1e>
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	06db      	lsls	r3, r3, #27
 800288a:	d501      	bpl.n	8002890 <HAL_RCC_GetSysClockFreq+0x48>
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 800288c:	480b      	ldr	r0, [pc, #44]	; (80028bc <HAL_RCC_GetSysClockFreq+0x74>)
 800288e:	e7f6      	b.n	800287e <HAL_RCC_GetSysClockFreq+0x36>
         pllvco = (HSI_VALUE * pllm) / plld;
 8002890:	4807      	ldr	r0, [pc, #28]	; (80028b0 <HAL_RCC_GetSysClockFreq+0x68>)
 8002892:	e7f4      	b.n	800287e <HAL_RCC_GetSysClockFreq+0x36>
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8002894:	2080      	movs	r0, #128	; 0x80
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8002896:	685b      	ldr	r3, [r3, #4]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8002898:	0200      	lsls	r0, r0, #8
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 800289a:	041b      	lsls	r3, r3, #16
 800289c:	0f5b      	lsrs	r3, r3, #29
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 800289e:	3301      	adds	r3, #1
 80028a0:	4098      	lsls	r0, r3
 80028a2:	e7e0      	b.n	8002866 <HAL_RCC_GetSysClockFreq+0x1e>
      sysclockfreq = HSE_VALUE;
 80028a4:	4804      	ldr	r0, [pc, #16]	; (80028b8 <HAL_RCC_GetSysClockFreq+0x70>)
 80028a6:	e7de      	b.n	8002866 <HAL_RCC_GetSysClockFreq+0x1e>
        sysclockfreq =  (HSI_VALUE >> 2);
 80028a8:	4804      	ldr	r0, [pc, #16]	; (80028bc <HAL_RCC_GetSysClockFreq+0x74>)
  return sysclockfreq;
 80028aa:	e7dc      	b.n	8002866 <HAL_RCC_GetSysClockFreq+0x1e>
 80028ac:	40021000 	.word	0x40021000
 80028b0:	00f42400 	.word	0x00f42400
 80028b4:	080060ee 	.word	0x080060ee
 80028b8:	007a1200 	.word	0x007a1200
 80028bc:	003d0900 	.word	0x003d0900

080028c0 <HAL_RCC_OscConfig>:
{
 80028c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80028c2:	0005      	movs	r5, r0
 80028c4:	b087      	sub	sp, #28
  if(RCC_OscInitStruct == NULL)
 80028c6:	2800      	cmp	r0, #0
 80028c8:	d102      	bne.n	80028d0 <HAL_RCC_OscConfig+0x10>
    return HAL_ERROR;
 80028ca:	2001      	movs	r0, #1
}
 80028cc:	b007      	add	sp, #28
 80028ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80028d0:	230c      	movs	r3, #12
 80028d2:	4cc2      	ldr	r4, [pc, #776]	; (8002bdc <HAL_RCC_OscConfig+0x31c>)
 80028d4:	68e6      	ldr	r6, [r4, #12]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 80028d6:	68e2      	ldr	r2, [r4, #12]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80028d8:	401e      	ands	r6, r3
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 80028da:	2380      	movs	r3, #128	; 0x80
 80028dc:	025b      	lsls	r3, r3, #9
 80028de:	401a      	ands	r2, r3
 80028e0:	9201      	str	r2, [sp, #4]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80028e2:	6802      	ldr	r2, [r0, #0]
 80028e4:	07d2      	lsls	r2, r2, #31
 80028e6:	d441      	bmi.n	800296c <HAL_RCC_OscConfig+0xac>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80028e8:	682b      	ldr	r3, [r5, #0]
 80028ea:	079b      	lsls	r3, r3, #30
 80028ec:	d500      	bpl.n	80028f0 <HAL_RCC_OscConfig+0x30>
 80028ee:	e087      	b.n	8002a00 <HAL_RCC_OscConfig+0x140>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 80028f0:	682b      	ldr	r3, [r5, #0]
 80028f2:	06db      	lsls	r3, r3, #27
 80028f4:	d528      	bpl.n	8002948 <HAL_RCC_OscConfig+0x88>
    if((sysclk_source == RCC_CFGR_SWS_MSI) )
 80028f6:	2e00      	cmp	r6, #0
 80028f8:	d000      	beq.n	80028fc <HAL_RCC_OscConfig+0x3c>
 80028fa:	e0e1      	b.n	8002ac0 <HAL_RCC_OscConfig+0x200>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 80028fc:	6823      	ldr	r3, [r4, #0]
 80028fe:	059b      	lsls	r3, r3, #22
 8002900:	d502      	bpl.n	8002908 <HAL_RCC_OscConfig+0x48>
 8002902:	69eb      	ldr	r3, [r5, #28]
 8002904:	2b00      	cmp	r3, #0
 8002906:	d0e0      	beq.n	80028ca <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002908:	6862      	ldr	r2, [r4, #4]
 800290a:	49b5      	ldr	r1, [pc, #724]	; (8002be0 <HAL_RCC_OscConfig+0x320>)
 800290c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800290e:	400a      	ands	r2, r1
 8002910:	431a      	orrs	r2, r3
 8002912:	6062      	str	r2, [r4, #4]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002914:	6861      	ldr	r1, [r4, #4]
 8002916:	6a2a      	ldr	r2, [r5, #32]
 8002918:	0209      	lsls	r1, r1, #8
 800291a:	0a09      	lsrs	r1, r1, #8
 800291c:	0612      	lsls	r2, r2, #24
 800291e:	430a      	orrs	r2, r1
 8002920:	6062      	str	r2, [r4, #4]
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002922:	2280      	movs	r2, #128	; 0x80
 8002924:	0b5b      	lsrs	r3, r3, #13
 8002926:	3301      	adds	r3, #1
 8002928:	0212      	lsls	r2, r2, #8
 800292a:	409a      	lsls	r2, r3
 800292c:	0013      	movs	r3, r2
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 800292e:	68e1      	ldr	r1, [r4, #12]
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8002930:	2000      	movs	r0, #0
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002932:	060a      	lsls	r2, r1, #24
 8002934:	49ab      	ldr	r1, [pc, #684]	; (8002be4 <HAL_RCC_OscConfig+0x324>)
 8002936:	0f12      	lsrs	r2, r2, #28
 8002938:	5c8a      	ldrb	r2, [r1, r2]
 800293a:	40d3      	lsrs	r3, r2
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 800293c:	4aaa      	ldr	r2, [pc, #680]	; (8002be8 <HAL_RCC_OscConfig+0x328>)
 800293e:	6013      	str	r3, [r2, #0]
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8002940:	f7ff fe1c 	bl	800257c <HAL_InitTick>
        if(status != HAL_OK)
 8002944:	2800      	cmp	r0, #0
 8002946:	d1c1      	bne.n	80028cc <HAL_RCC_OscConfig+0xc>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002948:	682b      	ldr	r3, [r5, #0]
 800294a:	071b      	lsls	r3, r3, #28
 800294c:	d500      	bpl.n	8002950 <HAL_RCC_OscConfig+0x90>
 800294e:	e0ee      	b.n	8002b2e <HAL_RCC_OscConfig+0x26e>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002950:	682b      	ldr	r3, [r5, #0]
 8002952:	075b      	lsls	r3, r3, #29
 8002954:	d500      	bpl.n	8002958 <HAL_RCC_OscConfig+0x98>
 8002956:	e110      	b.n	8002b7a <HAL_RCC_OscConfig+0x2ba>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8002958:	682b      	ldr	r3, [r5, #0]
 800295a:	069b      	lsls	r3, r3, #26
 800295c:	d500      	bpl.n	8002960 <HAL_RCC_OscConfig+0xa0>
 800295e:	e195      	b.n	8002c8c <HAL_RCC_OscConfig+0x3cc>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002960:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002962:	2b00      	cmp	r3, #0
 8002964:	d000      	beq.n	8002968 <HAL_RCC_OscConfig+0xa8>
 8002966:	e1c4      	b.n	8002cf2 <HAL_RCC_OscConfig+0x432>
  return HAL_OK;
 8002968:	2000      	movs	r0, #0
 800296a:	e7af      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 800296c:	2e08      	cmp	r6, #8
 800296e:	d004      	beq.n	800297a <HAL_RCC_OscConfig+0xba>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8002970:	2e0c      	cmp	r6, #12
 8002972:	d109      	bne.n	8002988 <HAL_RCC_OscConfig+0xc8>
 8002974:	9a01      	ldr	r2, [sp, #4]
 8002976:	2a00      	cmp	r2, #0
 8002978:	d006      	beq.n	8002988 <HAL_RCC_OscConfig+0xc8>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800297a:	6823      	ldr	r3, [r4, #0]
 800297c:	039b      	lsls	r3, r3, #14
 800297e:	d5b3      	bpl.n	80028e8 <HAL_RCC_OscConfig+0x28>
 8002980:	686b      	ldr	r3, [r5, #4]
 8002982:	2b00      	cmp	r3, #0
 8002984:	d1b0      	bne.n	80028e8 <HAL_RCC_OscConfig+0x28>
 8002986:	e7a0      	b.n	80028ca <HAL_RCC_OscConfig+0xa>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002988:	686a      	ldr	r2, [r5, #4]
 800298a:	429a      	cmp	r2, r3
 800298c:	d111      	bne.n	80029b2 <HAL_RCC_OscConfig+0xf2>
 800298e:	6822      	ldr	r2, [r4, #0]
 8002990:	4313      	orrs	r3, r2
 8002992:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002994:	f7ff fe26 	bl	80025e4 <HAL_GetTick>
 8002998:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800299a:	2280      	movs	r2, #128	; 0x80
 800299c:	6823      	ldr	r3, [r4, #0]
 800299e:	0292      	lsls	r2, r2, #10
 80029a0:	4213      	tst	r3, r2
 80029a2:	d1a1      	bne.n	80028e8 <HAL_RCC_OscConfig+0x28>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80029a4:	f7ff fe1e 	bl	80025e4 <HAL_GetTick>
 80029a8:	1bc0      	subs	r0, r0, r7
 80029aa:	2864      	cmp	r0, #100	; 0x64
 80029ac:	d9f5      	bls.n	800299a <HAL_RCC_OscConfig+0xda>
            return HAL_TIMEOUT;
 80029ae:	2003      	movs	r0, #3
 80029b0:	e78c      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80029b2:	21a0      	movs	r1, #160	; 0xa0
 80029b4:	02c9      	lsls	r1, r1, #11
 80029b6:	428a      	cmp	r2, r1
 80029b8:	d105      	bne.n	80029c6 <HAL_RCC_OscConfig+0x106>
 80029ba:	2280      	movs	r2, #128	; 0x80
 80029bc:	6821      	ldr	r1, [r4, #0]
 80029be:	02d2      	lsls	r2, r2, #11
 80029c0:	430a      	orrs	r2, r1
 80029c2:	6022      	str	r2, [r4, #0]
 80029c4:	e7e3      	b.n	800298e <HAL_RCC_OscConfig+0xce>
 80029c6:	6821      	ldr	r1, [r4, #0]
 80029c8:	4888      	ldr	r0, [pc, #544]	; (8002bec <HAL_RCC_OscConfig+0x32c>)
 80029ca:	4001      	ands	r1, r0
 80029cc:	6021      	str	r1, [r4, #0]
 80029ce:	6821      	ldr	r1, [r4, #0]
 80029d0:	400b      	ands	r3, r1
 80029d2:	9305      	str	r3, [sp, #20]
 80029d4:	9b05      	ldr	r3, [sp, #20]
 80029d6:	4986      	ldr	r1, [pc, #536]	; (8002bf0 <HAL_RCC_OscConfig+0x330>)
 80029d8:	6823      	ldr	r3, [r4, #0]
 80029da:	400b      	ands	r3, r1
 80029dc:	6023      	str	r3, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80029de:	2a00      	cmp	r2, #0
 80029e0:	d1d8      	bne.n	8002994 <HAL_RCC_OscConfig+0xd4>
        tickstart = HAL_GetTick();
 80029e2:	f7ff fdff 	bl	80025e4 <HAL_GetTick>
 80029e6:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80029e8:	2280      	movs	r2, #128	; 0x80
 80029ea:	6823      	ldr	r3, [r4, #0]
 80029ec:	0292      	lsls	r2, r2, #10
 80029ee:	4213      	tst	r3, r2
 80029f0:	d100      	bne.n	80029f4 <HAL_RCC_OscConfig+0x134>
 80029f2:	e779      	b.n	80028e8 <HAL_RCC_OscConfig+0x28>
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80029f4:	f7ff fdf6 	bl	80025e4 <HAL_GetTick>
 80029f8:	1bc0      	subs	r0, r0, r7
 80029fa:	2864      	cmp	r0, #100	; 0x64
 80029fc:	d9f4      	bls.n	80029e8 <HAL_RCC_OscConfig+0x128>
 80029fe:	e7d6      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002a00:	2220      	movs	r2, #32
    hsi_state = RCC_OscInitStruct->HSIState;
 8002a02:	68eb      	ldr	r3, [r5, #12]
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8002a04:	4213      	tst	r3, r2
 8002a06:	d003      	beq.n	8002a10 <HAL_RCC_OscConfig+0x150>
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002a08:	6821      	ldr	r1, [r4, #0]
      hsi_state &= ~RCC_CR_HSIOUTEN;
 8002a0a:	4393      	bics	r3, r2
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002a0c:	4311      	orrs	r1, r2
 8002a0e:	6021      	str	r1, [r4, #0]
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8002a10:	2e04      	cmp	r6, #4
 8002a12:	d004      	beq.n	8002a1e <HAL_RCC_OscConfig+0x15e>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8002a14:	2e0c      	cmp	r6, #12
 8002a16:	d125      	bne.n	8002a64 <HAL_RCC_OscConfig+0x1a4>
 8002a18:	9a01      	ldr	r2, [sp, #4]
 8002a1a:	2a00      	cmp	r2, #0
 8002a1c:	d122      	bne.n	8002a64 <HAL_RCC_OscConfig+0x1a4>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8002a1e:	6822      	ldr	r2, [r4, #0]
 8002a20:	0752      	lsls	r2, r2, #29
 8002a22:	d502      	bpl.n	8002a2a <HAL_RCC_OscConfig+0x16a>
 8002a24:	2b00      	cmp	r3, #0
 8002a26:	d100      	bne.n	8002a2a <HAL_RCC_OscConfig+0x16a>
 8002a28:	e74f      	b.n	80028ca <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002a2a:	6861      	ldr	r1, [r4, #4]
 8002a2c:	692a      	ldr	r2, [r5, #16]
 8002a2e:	4871      	ldr	r0, [pc, #452]	; (8002bf4 <HAL_RCC_OscConfig+0x334>)
 8002a30:	0212      	lsls	r2, r2, #8
 8002a32:	4001      	ands	r1, r0
 8002a34:	430a      	orrs	r2, r1
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002a36:	2109      	movs	r1, #9
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002a38:	6062      	str	r2, [r4, #4]
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002a3a:	6822      	ldr	r2, [r4, #0]
 8002a3c:	438a      	bics	r2, r1
 8002a3e:	4313      	orrs	r3, r2
 8002a40:	6023      	str	r3, [r4, #0]
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002a42:	f7ff ff01 	bl	8002848 <HAL_RCC_GetSysClockFreq>
 8002a46:	68e3      	ldr	r3, [r4, #12]
 8002a48:	4a66      	ldr	r2, [pc, #408]	; (8002be4 <HAL_RCC_OscConfig+0x324>)
 8002a4a:	061b      	lsls	r3, r3, #24
 8002a4c:	0f1b      	lsrs	r3, r3, #28
 8002a4e:	5cd3      	ldrb	r3, [r2, r3]
 8002a50:	40d8      	lsrs	r0, r3
 8002a52:	4b65      	ldr	r3, [pc, #404]	; (8002be8 <HAL_RCC_OscConfig+0x328>)
 8002a54:	6018      	str	r0, [r3, #0]
      status = HAL_InitTick (TICK_INT_PRIORITY);
 8002a56:	2000      	movs	r0, #0
 8002a58:	f7ff fd90 	bl	800257c <HAL_InitTick>
      if(status != HAL_OK)
 8002a5c:	2800      	cmp	r0, #0
 8002a5e:	d100      	bne.n	8002a62 <HAL_RCC_OscConfig+0x1a2>
 8002a60:	e746      	b.n	80028f0 <HAL_RCC_OscConfig+0x30>
 8002a62:	e733      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
      if(hsi_state != RCC_HSI_OFF)
 8002a64:	2b00      	cmp	r3, #0
 8002a66:	d019      	beq.n	8002a9c <HAL_RCC_OscConfig+0x1dc>
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002a68:	2109      	movs	r1, #9
 8002a6a:	6822      	ldr	r2, [r4, #0]
 8002a6c:	438a      	bics	r2, r1
 8002a6e:	4313      	orrs	r3, r2
 8002a70:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002a72:	f7ff fdb7 	bl	80025e4 <HAL_GetTick>
 8002a76:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002a78:	2204      	movs	r2, #4
 8002a7a:	6823      	ldr	r3, [r4, #0]
 8002a7c:	4213      	tst	r3, r2
 8002a7e:	d007      	beq.n	8002a90 <HAL_RCC_OscConfig+0x1d0>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002a80:	6862      	ldr	r2, [r4, #4]
 8002a82:	692b      	ldr	r3, [r5, #16]
 8002a84:	495b      	ldr	r1, [pc, #364]	; (8002bf4 <HAL_RCC_OscConfig+0x334>)
 8002a86:	021b      	lsls	r3, r3, #8
 8002a88:	400a      	ands	r2, r1
 8002a8a:	4313      	orrs	r3, r2
 8002a8c:	6063      	str	r3, [r4, #4]
 8002a8e:	e72f      	b.n	80028f0 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002a90:	f7ff fda8 	bl	80025e4 <HAL_GetTick>
 8002a94:	1bc0      	subs	r0, r0, r7
 8002a96:	2802      	cmp	r0, #2
 8002a98:	d9ee      	bls.n	8002a78 <HAL_RCC_OscConfig+0x1b8>
 8002a9a:	e788      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
        __HAL_RCC_HSI_DISABLE();
 8002a9c:	2201      	movs	r2, #1
 8002a9e:	6823      	ldr	r3, [r4, #0]
 8002aa0:	4393      	bics	r3, r2
 8002aa2:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002aa4:	f7ff fd9e 	bl	80025e4 <HAL_GetTick>
 8002aa8:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002aaa:	2204      	movs	r2, #4
 8002aac:	6823      	ldr	r3, [r4, #0]
 8002aae:	4213      	tst	r3, r2
 8002ab0:	d100      	bne.n	8002ab4 <HAL_RCC_OscConfig+0x1f4>
 8002ab2:	e71d      	b.n	80028f0 <HAL_RCC_OscConfig+0x30>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002ab4:	f7ff fd96 	bl	80025e4 <HAL_GetTick>
 8002ab8:	1bc0      	subs	r0, r0, r7
 8002aba:	2802      	cmp	r0, #2
 8002abc:	d9f5      	bls.n	8002aaa <HAL_RCC_OscConfig+0x1ea>
 8002abe:	e776      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8002ac0:	69eb      	ldr	r3, [r5, #28]
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d020      	beq.n	8002b08 <HAL_RCC_OscConfig+0x248>
        __HAL_RCC_MSI_ENABLE();
 8002ac6:	2380      	movs	r3, #128	; 0x80
 8002ac8:	6822      	ldr	r2, [r4, #0]
 8002aca:	005b      	lsls	r3, r3, #1
 8002acc:	4313      	orrs	r3, r2
 8002ace:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002ad0:	f7ff fd88 	bl	80025e4 <HAL_GetTick>
 8002ad4:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002ad6:	2280      	movs	r2, #128	; 0x80
 8002ad8:	6823      	ldr	r3, [r4, #0]
 8002ada:	0092      	lsls	r2, r2, #2
 8002adc:	4213      	tst	r3, r2
 8002ade:	d00d      	beq.n	8002afc <HAL_RCC_OscConfig+0x23c>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002ae0:	6863      	ldr	r3, [r4, #4]
 8002ae2:	4a3f      	ldr	r2, [pc, #252]	; (8002be0 <HAL_RCC_OscConfig+0x320>)
 8002ae4:	4013      	ands	r3, r2
 8002ae6:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 8002ae8:	4313      	orrs	r3, r2
 8002aea:	6063      	str	r3, [r4, #4]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002aec:	6862      	ldr	r2, [r4, #4]
 8002aee:	6a2b      	ldr	r3, [r5, #32]
 8002af0:	0212      	lsls	r2, r2, #8
 8002af2:	061b      	lsls	r3, r3, #24
 8002af4:	0a12      	lsrs	r2, r2, #8
 8002af6:	4313      	orrs	r3, r2
 8002af8:	6063      	str	r3, [r4, #4]
 8002afa:	e725      	b.n	8002948 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002afc:	f7ff fd72 	bl	80025e4 <HAL_GetTick>
 8002b00:	1bc0      	subs	r0, r0, r7
 8002b02:	2802      	cmp	r0, #2
 8002b04:	d9e7      	bls.n	8002ad6 <HAL_RCC_OscConfig+0x216>
 8002b06:	e752      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
        __HAL_RCC_MSI_DISABLE();
 8002b08:	6823      	ldr	r3, [r4, #0]
 8002b0a:	4a3b      	ldr	r2, [pc, #236]	; (8002bf8 <HAL_RCC_OscConfig+0x338>)
 8002b0c:	4013      	ands	r3, r2
 8002b0e:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002b10:	f7ff fd68 	bl	80025e4 <HAL_GetTick>
 8002b14:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002b16:	2280      	movs	r2, #128	; 0x80
 8002b18:	6823      	ldr	r3, [r4, #0]
 8002b1a:	0092      	lsls	r2, r2, #2
 8002b1c:	4213      	tst	r3, r2
 8002b1e:	d100      	bne.n	8002b22 <HAL_RCC_OscConfig+0x262>
 8002b20:	e712      	b.n	8002948 <HAL_RCC_OscConfig+0x88>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002b22:	f7ff fd5f 	bl	80025e4 <HAL_GetTick>
 8002b26:	1bc0      	subs	r0, r0, r7
 8002b28:	2802      	cmp	r0, #2
 8002b2a:	d9f4      	bls.n	8002b16 <HAL_RCC_OscConfig+0x256>
 8002b2c:	e73f      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002b2e:	696a      	ldr	r2, [r5, #20]
 8002b30:	2301      	movs	r3, #1
 8002b32:	2a00      	cmp	r2, #0
 8002b34:	d010      	beq.n	8002b58 <HAL_RCC_OscConfig+0x298>
      __HAL_RCC_LSI_ENABLE();
 8002b36:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002b38:	4313      	orrs	r3, r2
 8002b3a:	6523      	str	r3, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002b3c:	f7ff fd52 	bl	80025e4 <HAL_GetTick>
 8002b40:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002b42:	2202      	movs	r2, #2
 8002b44:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002b46:	4213      	tst	r3, r2
 8002b48:	d000      	beq.n	8002b4c <HAL_RCC_OscConfig+0x28c>
 8002b4a:	e701      	b.n	8002950 <HAL_RCC_OscConfig+0x90>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002b4c:	f7ff fd4a 	bl	80025e4 <HAL_GetTick>
 8002b50:	1bc0      	subs	r0, r0, r7
 8002b52:	2802      	cmp	r0, #2
 8002b54:	d9f5      	bls.n	8002b42 <HAL_RCC_OscConfig+0x282>
 8002b56:	e72a      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
      __HAL_RCC_LSI_DISABLE();
 8002b58:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002b5a:	439a      	bics	r2, r3
 8002b5c:	6522      	str	r2, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002b5e:	f7ff fd41 	bl	80025e4 <HAL_GetTick>
 8002b62:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002b64:	2202      	movs	r2, #2
 8002b66:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002b68:	4213      	tst	r3, r2
 8002b6a:	d100      	bne.n	8002b6e <HAL_RCC_OscConfig+0x2ae>
 8002b6c:	e6f0      	b.n	8002950 <HAL_RCC_OscConfig+0x90>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002b6e:	f7ff fd39 	bl	80025e4 <HAL_GetTick>
 8002b72:	1bc0      	subs	r0, r0, r7
 8002b74:	2802      	cmp	r0, #2
 8002b76:	d9f5      	bls.n	8002b64 <HAL_RCC_OscConfig+0x2a4>
 8002b78:	e719      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002b7a:	2380      	movs	r3, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002b7c:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002b7e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002b80:	055b      	lsls	r3, r3, #21
    FlagStatus       pwrclkchanged = RESET;
 8002b82:	9101      	str	r1, [sp, #4]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002b84:	421a      	tst	r2, r3
 8002b86:	d104      	bne.n	8002b92 <HAL_RCC_OscConfig+0x2d2>
      __HAL_RCC_PWR_CLK_ENABLE();
 8002b88:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002b8a:	4313      	orrs	r3, r2
 8002b8c:	63a3      	str	r3, [r4, #56]	; 0x38
      pwrclkchanged = SET;
 8002b8e:	2301      	movs	r3, #1
 8002b90:	9301      	str	r3, [sp, #4]
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002b92:	2280      	movs	r2, #128	; 0x80
 8002b94:	4f19      	ldr	r7, [pc, #100]	; (8002bfc <HAL_RCC_OscConfig+0x33c>)
 8002b96:	0052      	lsls	r2, r2, #1
 8002b98:	683b      	ldr	r3, [r7, #0]
 8002b9a:	4213      	tst	r3, r2
 8002b9c:	d008      	beq.n	8002bb0 <HAL_RCC_OscConfig+0x2f0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002b9e:	2280      	movs	r2, #128	; 0x80
 8002ba0:	68ab      	ldr	r3, [r5, #8]
 8002ba2:	0052      	lsls	r2, r2, #1
 8002ba4:	4293      	cmp	r3, r2
 8002ba6:	d12b      	bne.n	8002c00 <HAL_RCC_OscConfig+0x340>
 8002ba8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8002baa:	4313      	orrs	r3, r2
 8002bac:	6523      	str	r3, [r4, #80]	; 0x50
 8002bae:	e04c      	b.n	8002c4a <HAL_RCC_OscConfig+0x38a>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002bb0:	2280      	movs	r2, #128	; 0x80
 8002bb2:	683b      	ldr	r3, [r7, #0]
 8002bb4:	0052      	lsls	r2, r2, #1
 8002bb6:	4313      	orrs	r3, r2
 8002bb8:	603b      	str	r3, [r7, #0]
      tickstart = HAL_GetTick();
 8002bba:	f7ff fd13 	bl	80025e4 <HAL_GetTick>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002bbe:	2380      	movs	r3, #128	; 0x80
 8002bc0:	005b      	lsls	r3, r3, #1
      tickstart = HAL_GetTick();
 8002bc2:	9002      	str	r0, [sp, #8]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002bc4:	9303      	str	r3, [sp, #12]
 8002bc6:	683b      	ldr	r3, [r7, #0]
 8002bc8:	9a03      	ldr	r2, [sp, #12]
 8002bca:	4213      	tst	r3, r2
 8002bcc:	d1e7      	bne.n	8002b9e <HAL_RCC_OscConfig+0x2de>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002bce:	f7ff fd09 	bl	80025e4 <HAL_GetTick>
 8002bd2:	9b02      	ldr	r3, [sp, #8]
 8002bd4:	1ac0      	subs	r0, r0, r3
 8002bd6:	2864      	cmp	r0, #100	; 0x64
 8002bd8:	d9f5      	bls.n	8002bc6 <HAL_RCC_OscConfig+0x306>
 8002bda:	e6e8      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
 8002bdc:	40021000 	.word	0x40021000
 8002be0:	ffff1fff 	.word	0xffff1fff
 8002be4:	080060d6 	.word	0x080060d6
 8002be8:	20000004 	.word	0x20000004
 8002bec:	fffeffff 	.word	0xfffeffff
 8002bf0:	fffbffff 	.word	0xfffbffff
 8002bf4:	ffffe0ff 	.word	0xffffe0ff
 8002bf8:	fffffeff 	.word	0xfffffeff
 8002bfc:	40007000 	.word	0x40007000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002c00:	2b00      	cmp	r3, #0
 8002c02:	d116      	bne.n	8002c32 <HAL_RCC_OscConfig+0x372>
 8002c04:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c06:	4a6c      	ldr	r2, [pc, #432]	; (8002db8 <HAL_RCC_OscConfig+0x4f8>)
 8002c08:	4013      	ands	r3, r2
 8002c0a:	6523      	str	r3, [r4, #80]	; 0x50
 8002c0c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c0e:	4a6b      	ldr	r2, [pc, #428]	; (8002dbc <HAL_RCC_OscConfig+0x4fc>)
 8002c10:	4013      	ands	r3, r2
 8002c12:	6523      	str	r3, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002c14:	f7ff fce6 	bl	80025e4 <HAL_GetTick>
 8002c18:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8002c1a:	2280      	movs	r2, #128	; 0x80
 8002c1c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c1e:	0092      	lsls	r2, r2, #2
 8002c20:	4213      	tst	r3, r2
 8002c22:	d02a      	beq.n	8002c7a <HAL_RCC_OscConfig+0x3ba>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002c24:	f7ff fcde 	bl	80025e4 <HAL_GetTick>
 8002c28:	4b65      	ldr	r3, [pc, #404]	; (8002dc0 <HAL_RCC_OscConfig+0x500>)
 8002c2a:	1bc0      	subs	r0, r0, r7
 8002c2c:	4298      	cmp	r0, r3
 8002c2e:	d9f4      	bls.n	8002c1a <HAL_RCC_OscConfig+0x35a>
 8002c30:	e6bd      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002c32:	21a0      	movs	r1, #160	; 0xa0
 8002c34:	00c9      	lsls	r1, r1, #3
 8002c36:	428b      	cmp	r3, r1
 8002c38:	d10b      	bne.n	8002c52 <HAL_RCC_OscConfig+0x392>
 8002c3a:	2380      	movs	r3, #128	; 0x80
 8002c3c:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8002c3e:	00db      	lsls	r3, r3, #3
 8002c40:	430b      	orrs	r3, r1
 8002c42:	6523      	str	r3, [r4, #80]	; 0x50
 8002c44:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c46:	431a      	orrs	r2, r3
 8002c48:	6522      	str	r2, [r4, #80]	; 0x50
      tickstart = HAL_GetTick();
 8002c4a:	f7ff fccb 	bl	80025e4 <HAL_GetTick>
 8002c4e:	0007      	movs	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8002c50:	e00e      	b.n	8002c70 <HAL_RCC_OscConfig+0x3b0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002c52:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c54:	4a58      	ldr	r2, [pc, #352]	; (8002db8 <HAL_RCC_OscConfig+0x4f8>)
 8002c56:	4013      	ands	r3, r2
 8002c58:	6523      	str	r3, [r4, #80]	; 0x50
 8002c5a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c5c:	4a57      	ldr	r2, [pc, #348]	; (8002dbc <HAL_RCC_OscConfig+0x4fc>)
 8002c5e:	4013      	ands	r3, r2
 8002c60:	e7a4      	b.n	8002bac <HAL_RCC_OscConfig+0x2ec>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002c62:	f7ff fcbf 	bl	80025e4 <HAL_GetTick>
 8002c66:	4b56      	ldr	r3, [pc, #344]	; (8002dc0 <HAL_RCC_OscConfig+0x500>)
 8002c68:	1bc0      	subs	r0, r0, r7
 8002c6a:	4298      	cmp	r0, r3
 8002c6c:	d900      	bls.n	8002c70 <HAL_RCC_OscConfig+0x3b0>
 8002c6e:	e69e      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8002c70:	2280      	movs	r2, #128	; 0x80
 8002c72:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002c74:	0092      	lsls	r2, r2, #2
 8002c76:	4213      	tst	r3, r2
 8002c78:	d0f3      	beq.n	8002c62 <HAL_RCC_OscConfig+0x3a2>
    if(pwrclkchanged == SET)
 8002c7a:	9b01      	ldr	r3, [sp, #4]
 8002c7c:	2b01      	cmp	r3, #1
 8002c7e:	d000      	beq.n	8002c82 <HAL_RCC_OscConfig+0x3c2>
 8002c80:	e66a      	b.n	8002958 <HAL_RCC_OscConfig+0x98>
      __HAL_RCC_PWR_CLK_DISABLE();
 8002c82:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8002c84:	4a4f      	ldr	r2, [pc, #316]	; (8002dc4 <HAL_RCC_OscConfig+0x504>)
 8002c86:	4013      	ands	r3, r2
 8002c88:	63a3      	str	r3, [r4, #56]	; 0x38
 8002c8a:	e665      	b.n	8002958 <HAL_RCC_OscConfig+0x98>
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8002c8c:	69a9      	ldr	r1, [r5, #24]
 8002c8e:	2301      	movs	r3, #1
 8002c90:	4a4d      	ldr	r2, [pc, #308]	; (8002dc8 <HAL_RCC_OscConfig+0x508>)
 8002c92:	2900      	cmp	r1, #0
 8002c94:	d018      	beq.n	8002cc8 <HAL_RCC_OscConfig+0x408>
        __HAL_RCC_HSI48_ENABLE();
 8002c96:	68a1      	ldr	r1, [r4, #8]
 8002c98:	4319      	orrs	r1, r3
 8002c9a:	60a1      	str	r1, [r4, #8]
 8002c9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002c9e:	430b      	orrs	r3, r1
 8002ca0:	6363      	str	r3, [r4, #52]	; 0x34
 8002ca2:	2380      	movs	r3, #128	; 0x80
 8002ca4:	6a11      	ldr	r1, [r2, #32]
 8002ca6:	019b      	lsls	r3, r3, #6
 8002ca8:	430b      	orrs	r3, r1
 8002caa:	6213      	str	r3, [r2, #32]
        tickstart = HAL_GetTick();
 8002cac:	f7ff fc9a 	bl	80025e4 <HAL_GetTick>
 8002cb0:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8002cb2:	2202      	movs	r2, #2
 8002cb4:	68a3      	ldr	r3, [r4, #8]
 8002cb6:	4213      	tst	r3, r2
 8002cb8:	d000      	beq.n	8002cbc <HAL_RCC_OscConfig+0x3fc>
 8002cba:	e651      	b.n	8002960 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8002cbc:	f7ff fc92 	bl	80025e4 <HAL_GetTick>
 8002cc0:	1bc0      	subs	r0, r0, r7
 8002cc2:	2802      	cmp	r0, #2
 8002cc4:	d9f5      	bls.n	8002cb2 <HAL_RCC_OscConfig+0x3f2>
 8002cc6:	e672      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
        __HAL_RCC_HSI48_DISABLE();
 8002cc8:	68a1      	ldr	r1, [r4, #8]
 8002cca:	4399      	bics	r1, r3
 8002ccc:	60a1      	str	r1, [r4, #8]
 8002cce:	6a13      	ldr	r3, [r2, #32]
 8002cd0:	493e      	ldr	r1, [pc, #248]	; (8002dcc <HAL_RCC_OscConfig+0x50c>)
 8002cd2:	400b      	ands	r3, r1
 8002cd4:	6213      	str	r3, [r2, #32]
        tickstart = HAL_GetTick();
 8002cd6:	f7ff fc85 	bl	80025e4 <HAL_GetTick>
 8002cda:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8002cdc:	2202      	movs	r2, #2
 8002cde:	68a3      	ldr	r3, [r4, #8]
 8002ce0:	4213      	tst	r3, r2
 8002ce2:	d100      	bne.n	8002ce6 <HAL_RCC_OscConfig+0x426>
 8002ce4:	e63c      	b.n	8002960 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8002ce6:	f7ff fc7d 	bl	80025e4 <HAL_GetTick>
 8002cea:	1bc0      	subs	r0, r0, r7
 8002cec:	2802      	cmp	r0, #2
 8002cee:	d9f5      	bls.n	8002cdc <HAL_RCC_OscConfig+0x41c>
 8002cf0:	e65d      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002cf2:	2e0c      	cmp	r6, #12
 8002cf4:	d043      	beq.n	8002d7e <HAL_RCC_OscConfig+0x4be>
 8002cf6:	4a36      	ldr	r2, [pc, #216]	; (8002dd0 <HAL_RCC_OscConfig+0x510>)
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002cf8:	2b02      	cmp	r3, #2
 8002cfa:	d12e      	bne.n	8002d5a <HAL_RCC_OscConfig+0x49a>
        __HAL_RCC_PLL_DISABLE();
 8002cfc:	6823      	ldr	r3, [r4, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002cfe:	2680      	movs	r6, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8002d00:	4013      	ands	r3, r2
 8002d02:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002d04:	f7ff fc6e 	bl	80025e4 <HAL_GetTick>
 8002d08:	0007      	movs	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002d0a:	04b6      	lsls	r6, r6, #18
 8002d0c:	6823      	ldr	r3, [r4, #0]
 8002d0e:	4233      	tst	r3, r6
 8002d10:	d11d      	bne.n	8002d4e <HAL_RCC_OscConfig+0x48e>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002d12:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8002d14:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002d16:	68e2      	ldr	r2, [r4, #12]
 8002d18:	430b      	orrs	r3, r1
 8002d1a:	492e      	ldr	r1, [pc, #184]	; (8002dd4 <HAL_RCC_OscConfig+0x514>)
 8002d1c:	400a      	ands	r2, r1
 8002d1e:	4313      	orrs	r3, r2
 8002d20:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8002d22:	2580      	movs	r5, #128	; 0x80
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002d24:	4313      	orrs	r3, r2
 8002d26:	60e3      	str	r3, [r4, #12]
        __HAL_RCC_PLL_ENABLE();
 8002d28:	2380      	movs	r3, #128	; 0x80
 8002d2a:	6822      	ldr	r2, [r4, #0]
 8002d2c:	045b      	lsls	r3, r3, #17
 8002d2e:	4313      	orrs	r3, r2
 8002d30:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002d32:	f7ff fc57 	bl	80025e4 <HAL_GetTick>
 8002d36:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8002d38:	04ad      	lsls	r5, r5, #18
 8002d3a:	6823      	ldr	r3, [r4, #0]
 8002d3c:	422b      	tst	r3, r5
 8002d3e:	d000      	beq.n	8002d42 <HAL_RCC_OscConfig+0x482>
 8002d40:	e612      	b.n	8002968 <HAL_RCC_OscConfig+0xa8>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002d42:	f7ff fc4f 	bl	80025e4 <HAL_GetTick>
 8002d46:	1b80      	subs	r0, r0, r6
 8002d48:	2802      	cmp	r0, #2
 8002d4a:	d9f6      	bls.n	8002d3a <HAL_RCC_OscConfig+0x47a>
 8002d4c:	e62f      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002d4e:	f7ff fc49 	bl	80025e4 <HAL_GetTick>
 8002d52:	1bc0      	subs	r0, r0, r7
 8002d54:	2802      	cmp	r0, #2
 8002d56:	d9d9      	bls.n	8002d0c <HAL_RCC_OscConfig+0x44c>
 8002d58:	e629      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
        __HAL_RCC_PLL_DISABLE();
 8002d5a:	6823      	ldr	r3, [r4, #0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002d5c:	2580      	movs	r5, #128	; 0x80
        __HAL_RCC_PLL_DISABLE();
 8002d5e:	4013      	ands	r3, r2
 8002d60:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8002d62:	f7ff fc3f 	bl	80025e4 <HAL_GetTick>
 8002d66:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002d68:	04ad      	lsls	r5, r5, #18
 8002d6a:	6823      	ldr	r3, [r4, #0]
 8002d6c:	422b      	tst	r3, r5
 8002d6e:	d100      	bne.n	8002d72 <HAL_RCC_OscConfig+0x4b2>
 8002d70:	e5fa      	b.n	8002968 <HAL_RCC_OscConfig+0xa8>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002d72:	f7ff fc37 	bl	80025e4 <HAL_GetTick>
 8002d76:	1b80      	subs	r0, r0, r6
 8002d78:	2802      	cmp	r0, #2
 8002d7a:	d9f6      	bls.n	8002d6a <HAL_RCC_OscConfig+0x4aa>
 8002d7c:	e617      	b.n	80029ae <HAL_RCC_OscConfig+0xee>
        return HAL_ERROR;
 8002d7e:	0018      	movs	r0, r3
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002d80:	2b01      	cmp	r3, #1
 8002d82:	d100      	bne.n	8002d86 <HAL_RCC_OscConfig+0x4c6>
 8002d84:	e5a2      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002d86:	2280      	movs	r2, #128	; 0x80
        pll_config = RCC->CFGR;
 8002d88:	68e3      	ldr	r3, [r4, #12]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002d8a:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 8002d8c:	0252      	lsls	r2, r2, #9
 8002d8e:	401a      	ands	r2, r3
        return HAL_ERROR;
 8002d90:	2001      	movs	r0, #1
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002d92:	428a      	cmp	r2, r1
 8002d94:	d000      	beq.n	8002d98 <HAL_RCC_OscConfig+0x4d8>
 8002d96:	e599      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8002d98:	22f0      	movs	r2, #240	; 0xf0
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002d9a:	6b29      	ldr	r1, [r5, #48]	; 0x30
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8002d9c:	0392      	lsls	r2, r2, #14
 8002d9e:	401a      	ands	r2, r3
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002da0:	428a      	cmp	r2, r1
 8002da2:	d000      	beq.n	8002da6 <HAL_RCC_OscConfig+0x4e6>
 8002da4:	e592      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8002da6:	20c0      	movs	r0, #192	; 0xc0
 8002da8:	0400      	lsls	r0, r0, #16
 8002daa:	4003      	ands	r3, r0
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8002dac:	6b68      	ldr	r0, [r5, #52]	; 0x34
 8002dae:	1a18      	subs	r0, r3, r0
 8002db0:	1e43      	subs	r3, r0, #1
 8002db2:	4198      	sbcs	r0, r3
    return HAL_ERROR;
 8002db4:	b2c0      	uxtb	r0, r0
 8002db6:	e589      	b.n	80028cc <HAL_RCC_OscConfig+0xc>
 8002db8:	fffffeff 	.word	0xfffffeff
 8002dbc:	fffffbff 	.word	0xfffffbff
 8002dc0:	00001388 	.word	0x00001388
 8002dc4:	efffffff 	.word	0xefffffff
 8002dc8:	40010000 	.word	0x40010000
 8002dcc:	ffffdfff 	.word	0xffffdfff
 8002dd0:	feffffff 	.word	0xfeffffff
 8002dd4:	ff02ffff 	.word	0xff02ffff

08002dd8 <HAL_RCC_ClockConfig>:
{
 8002dd8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002dda:	1e06      	subs	r6, r0, #0
 8002ddc:	9101      	str	r1, [sp, #4]
  if(RCC_ClkInitStruct == NULL)
 8002dde:	d101      	bne.n	8002de4 <HAL_RCC_ClockConfig+0xc>
    return HAL_ERROR;
 8002de0:	2001      	movs	r0, #1
}
 8002de2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002de4:	2201      	movs	r2, #1
 8002de6:	4c51      	ldr	r4, [pc, #324]	; (8002f2c <HAL_RCC_ClockConfig+0x154>)
 8002de8:	9901      	ldr	r1, [sp, #4]
 8002dea:	6823      	ldr	r3, [r4, #0]
 8002dec:	4013      	ands	r3, r2
 8002dee:	428b      	cmp	r3, r1
 8002df0:	d327      	bcc.n	8002e42 <HAL_RCC_ClockConfig+0x6a>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8002df2:	6832      	ldr	r2, [r6, #0]
 8002df4:	0793      	lsls	r3, r2, #30
 8002df6:	d42f      	bmi.n	8002e58 <HAL_RCC_ClockConfig+0x80>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8002df8:	07d3      	lsls	r3, r2, #31
 8002dfa:	d435      	bmi.n	8002e68 <HAL_RCC_ClockConfig+0x90>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8002dfc:	2301      	movs	r3, #1
 8002dfe:	6822      	ldr	r2, [r4, #0]
 8002e00:	9901      	ldr	r1, [sp, #4]
 8002e02:	401a      	ands	r2, r3
 8002e04:	4291      	cmp	r1, r2
 8002e06:	d200      	bcs.n	8002e0a <HAL_RCC_ClockConfig+0x32>
 8002e08:	e081      	b.n	8002f0e <HAL_RCC_ClockConfig+0x136>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8002e0a:	6832      	ldr	r2, [r6, #0]
 8002e0c:	4c48      	ldr	r4, [pc, #288]	; (8002f30 <HAL_RCC_ClockConfig+0x158>)
 8002e0e:	0753      	lsls	r3, r2, #29
 8002e10:	d500      	bpl.n	8002e14 <HAL_RCC_ClockConfig+0x3c>
 8002e12:	e084      	b.n	8002f1e <HAL_RCC_ClockConfig+0x146>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8002e14:	0713      	lsls	r3, r2, #28
 8002e16:	d506      	bpl.n	8002e26 <HAL_RCC_ClockConfig+0x4e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8002e18:	68e2      	ldr	r2, [r4, #12]
 8002e1a:	6933      	ldr	r3, [r6, #16]
 8002e1c:	4945      	ldr	r1, [pc, #276]	; (8002f34 <HAL_RCC_ClockConfig+0x15c>)
 8002e1e:	00db      	lsls	r3, r3, #3
 8002e20:	400a      	ands	r2, r1
 8002e22:	4313      	orrs	r3, r2
 8002e24:	60e3      	str	r3, [r4, #12]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8002e26:	f7ff fd0f 	bl	8002848 <HAL_RCC_GetSysClockFreq>
 8002e2a:	68e3      	ldr	r3, [r4, #12]
 8002e2c:	4a42      	ldr	r2, [pc, #264]	; (8002f38 <HAL_RCC_ClockConfig+0x160>)
 8002e2e:	061b      	lsls	r3, r3, #24
 8002e30:	0f1b      	lsrs	r3, r3, #28
 8002e32:	5cd3      	ldrb	r3, [r2, r3]
 8002e34:	40d8      	lsrs	r0, r3
 8002e36:	4b41      	ldr	r3, [pc, #260]	; (8002f3c <HAL_RCC_ClockConfig+0x164>)
 8002e38:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(TICK_INT_PRIORITY);
 8002e3a:	2000      	movs	r0, #0
 8002e3c:	f7ff fb9e 	bl	800257c <HAL_InitTick>
 8002e40:	e7cf      	b.n	8002de2 <HAL_RCC_ClockConfig+0xa>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002e42:	6823      	ldr	r3, [r4, #0]
 8002e44:	9901      	ldr	r1, [sp, #4]
 8002e46:	4393      	bics	r3, r2
 8002e48:	430b      	orrs	r3, r1
 8002e4a:	6023      	str	r3, [r4, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002e4c:	6823      	ldr	r3, [r4, #0]
 8002e4e:	4013      	ands	r3, r2
 8002e50:	9a01      	ldr	r2, [sp, #4]
 8002e52:	429a      	cmp	r2, r3
 8002e54:	d1c4      	bne.n	8002de0 <HAL_RCC_ClockConfig+0x8>
 8002e56:	e7cc      	b.n	8002df2 <HAL_RCC_ClockConfig+0x1a>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8002e58:	20f0      	movs	r0, #240	; 0xf0
 8002e5a:	4935      	ldr	r1, [pc, #212]	; (8002f30 <HAL_RCC_ClockConfig+0x158>)
 8002e5c:	68cb      	ldr	r3, [r1, #12]
 8002e5e:	4383      	bics	r3, r0
 8002e60:	68b0      	ldr	r0, [r6, #8]
 8002e62:	4303      	orrs	r3, r0
 8002e64:	60cb      	str	r3, [r1, #12]
 8002e66:	e7c7      	b.n	8002df8 <HAL_RCC_ClockConfig+0x20>
 8002e68:	4d31      	ldr	r5, [pc, #196]	; (8002f30 <HAL_RCC_ClockConfig+0x158>)
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002e6a:	6872      	ldr	r2, [r6, #4]
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002e6c:	682b      	ldr	r3, [r5, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002e6e:	2a02      	cmp	r2, #2
 8002e70:	d119      	bne.n	8002ea6 <HAL_RCC_ClockConfig+0xce>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002e72:	039b      	lsls	r3, r3, #14
 8002e74:	d5b4      	bpl.n	8002de0 <HAL_RCC_ClockConfig+0x8>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8002e76:	2103      	movs	r1, #3
 8002e78:	68eb      	ldr	r3, [r5, #12]
 8002e7a:	438b      	bics	r3, r1
 8002e7c:	4313      	orrs	r3, r2
 8002e7e:	60eb      	str	r3, [r5, #12]
    tickstart = HAL_GetTick();
 8002e80:	f7ff fbb0 	bl	80025e4 <HAL_GetTick>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002e84:	6873      	ldr	r3, [r6, #4]
    tickstart = HAL_GetTick();
 8002e86:	0007      	movs	r7, r0
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8002e88:	2b02      	cmp	r3, #2
 8002e8a:	d119      	bne.n	8002ec0 <HAL_RCC_ClockConfig+0xe8>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8002e8c:	220c      	movs	r2, #12
 8002e8e:	68eb      	ldr	r3, [r5, #12]
 8002e90:	4013      	ands	r3, r2
 8002e92:	2b08      	cmp	r3, #8
 8002e94:	d0b2      	beq.n	8002dfc <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002e96:	f7ff fba5 	bl	80025e4 <HAL_GetTick>
 8002e9a:	4b29      	ldr	r3, [pc, #164]	; (8002f40 <HAL_RCC_ClockConfig+0x168>)
 8002e9c:	1bc0      	subs	r0, r0, r7
 8002e9e:	4298      	cmp	r0, r3
 8002ea0:	d9f4      	bls.n	8002e8c <HAL_RCC_ClockConfig+0xb4>
          return HAL_TIMEOUT;
 8002ea2:	2003      	movs	r0, #3
 8002ea4:	e79d      	b.n	8002de2 <HAL_RCC_ClockConfig+0xa>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002ea6:	2a03      	cmp	r2, #3
 8002ea8:	d102      	bne.n	8002eb0 <HAL_RCC_ClockConfig+0xd8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8002eaa:	019b      	lsls	r3, r3, #6
 8002eac:	d4e3      	bmi.n	8002e76 <HAL_RCC_ClockConfig+0x9e>
 8002eae:	e797      	b.n	8002de0 <HAL_RCC_ClockConfig+0x8>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8002eb0:	2a01      	cmp	r2, #1
 8002eb2:	d102      	bne.n	8002eba <HAL_RCC_ClockConfig+0xe2>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002eb4:	075b      	lsls	r3, r3, #29
 8002eb6:	d4de      	bmi.n	8002e76 <HAL_RCC_ClockConfig+0x9e>
 8002eb8:	e792      	b.n	8002de0 <HAL_RCC_ClockConfig+0x8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002eba:	059b      	lsls	r3, r3, #22
 8002ebc:	d4db      	bmi.n	8002e76 <HAL_RCC_ClockConfig+0x9e>
 8002ebe:	e78f      	b.n	8002de0 <HAL_RCC_ClockConfig+0x8>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8002ec0:	2b03      	cmp	r3, #3
 8002ec2:	d10b      	bne.n	8002edc <HAL_RCC_ClockConfig+0x104>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002ec4:	220c      	movs	r2, #12
 8002ec6:	68eb      	ldr	r3, [r5, #12]
 8002ec8:	4013      	ands	r3, r2
 8002eca:	4293      	cmp	r3, r2
 8002ecc:	d096      	beq.n	8002dfc <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002ece:	f7ff fb89 	bl	80025e4 <HAL_GetTick>
 8002ed2:	4b1b      	ldr	r3, [pc, #108]	; (8002f40 <HAL_RCC_ClockConfig+0x168>)
 8002ed4:	1bc0      	subs	r0, r0, r7
 8002ed6:	4298      	cmp	r0, r3
 8002ed8:	d9f4      	bls.n	8002ec4 <HAL_RCC_ClockConfig+0xec>
 8002eda:	e7e2      	b.n	8002ea2 <HAL_RCC_ClockConfig+0xca>
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8002edc:	2b01      	cmp	r3, #1
 8002ede:	d010      	beq.n	8002f02 <HAL_RCC_ClockConfig+0x12a>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8002ee0:	220c      	movs	r2, #12
 8002ee2:	68eb      	ldr	r3, [r5, #12]
 8002ee4:	4213      	tst	r3, r2
 8002ee6:	d089      	beq.n	8002dfc <HAL_RCC_ClockConfig+0x24>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002ee8:	f7ff fb7c 	bl	80025e4 <HAL_GetTick>
 8002eec:	4b14      	ldr	r3, [pc, #80]	; (8002f40 <HAL_RCC_ClockConfig+0x168>)
 8002eee:	1bc0      	subs	r0, r0, r7
 8002ef0:	4298      	cmp	r0, r3
 8002ef2:	d9f5      	bls.n	8002ee0 <HAL_RCC_ClockConfig+0x108>
 8002ef4:	e7d5      	b.n	8002ea2 <HAL_RCC_ClockConfig+0xca>
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8002ef6:	f7ff fb75 	bl	80025e4 <HAL_GetTick>
 8002efa:	4b11      	ldr	r3, [pc, #68]	; (8002f40 <HAL_RCC_ClockConfig+0x168>)
 8002efc:	1bc0      	subs	r0, r0, r7
 8002efe:	4298      	cmp	r0, r3
 8002f00:	d8cf      	bhi.n	8002ea2 <HAL_RCC_ClockConfig+0xca>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8002f02:	220c      	movs	r2, #12
 8002f04:	68eb      	ldr	r3, [r5, #12]
 8002f06:	4013      	ands	r3, r2
 8002f08:	2b04      	cmp	r3, #4
 8002f0a:	d1f4      	bne.n	8002ef6 <HAL_RCC_ClockConfig+0x11e>
 8002f0c:	e776      	b.n	8002dfc <HAL_RCC_ClockConfig+0x24>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002f0e:	6822      	ldr	r2, [r4, #0]
 8002f10:	439a      	bics	r2, r3
 8002f12:	6022      	str	r2, [r4, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002f14:	6822      	ldr	r2, [r4, #0]
 8002f16:	421a      	tst	r2, r3
 8002f18:	d000      	beq.n	8002f1c <HAL_RCC_ClockConfig+0x144>
 8002f1a:	e761      	b.n	8002de0 <HAL_RCC_ClockConfig+0x8>
 8002f1c:	e775      	b.n	8002e0a <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8002f1e:	68e3      	ldr	r3, [r4, #12]
 8002f20:	4908      	ldr	r1, [pc, #32]	; (8002f44 <HAL_RCC_ClockConfig+0x16c>)
 8002f22:	400b      	ands	r3, r1
 8002f24:	68f1      	ldr	r1, [r6, #12]
 8002f26:	430b      	orrs	r3, r1
 8002f28:	60e3      	str	r3, [r4, #12]
 8002f2a:	e773      	b.n	8002e14 <HAL_RCC_ClockConfig+0x3c>
 8002f2c:	40022000 	.word	0x40022000
 8002f30:	40021000 	.word	0x40021000
 8002f34:	ffffc7ff 	.word	0xffffc7ff
 8002f38:	080060d6 	.word	0x080060d6
 8002f3c:	20000004 	.word	0x20000004
 8002f40:	00001388 	.word	0x00001388
 8002f44:	fffff8ff 	.word	0xfffff8ff

08002f48 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8002f48:	4b04      	ldr	r3, [pc, #16]	; (8002f5c <HAL_RCC_GetPCLK1Freq+0x14>)
 8002f4a:	4a05      	ldr	r2, [pc, #20]	; (8002f60 <HAL_RCC_GetPCLK1Freq+0x18>)
 8002f4c:	68db      	ldr	r3, [r3, #12]
 8002f4e:	055b      	lsls	r3, r3, #21
 8002f50:	0f5b      	lsrs	r3, r3, #29
 8002f52:	5cd3      	ldrb	r3, [r2, r3]
 8002f54:	4a03      	ldr	r2, [pc, #12]	; (8002f64 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8002f56:	6810      	ldr	r0, [r2, #0]
 8002f58:	40d8      	lsrs	r0, r3
}
 8002f5a:	4770      	bx	lr
 8002f5c:	40021000 	.word	0x40021000
 8002f60:	080060e6 	.word	0x080060e6
 8002f64:	20000004 	.word	0x20000004

08002f68 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8002f68:	4b04      	ldr	r3, [pc, #16]	; (8002f7c <HAL_RCC_GetPCLK2Freq+0x14>)
 8002f6a:	4a05      	ldr	r2, [pc, #20]	; (8002f80 <HAL_RCC_GetPCLK2Freq+0x18>)
 8002f6c:	68db      	ldr	r3, [r3, #12]
 8002f6e:	049b      	lsls	r3, r3, #18
 8002f70:	0f5b      	lsrs	r3, r3, #29
 8002f72:	5cd3      	ldrb	r3, [r2, r3]
 8002f74:	4a03      	ldr	r2, [pc, #12]	; (8002f84 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8002f76:	6810      	ldr	r0, [r2, #0]
 8002f78:	40d8      	lsrs	r0, r3
}
 8002f7a:	4770      	bx	lr
 8002f7c:	40021000 	.word	0x40021000
 8002f80:	080060e6 	.word	0x080060e6
 8002f84:	20000004 	.word	0x20000004

08002f88 <HAL_RCCEx_PeriphCLKConfig>:
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*------------------------------- RTC/LCD Configuration ------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
#if defined(LCD)
   || (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD)
 8002f88:	2382      	movs	r3, #130	; 0x82
{
 8002f8a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8002f8c:	6802      	ldr	r2, [r0, #0]
   || (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD)
 8002f8e:	011b      	lsls	r3, r3, #4
{
 8002f90:	0005      	movs	r5, r0
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8002f92:	421a      	tst	r2, r3
 8002f94:	d048      	beq.n	8003028 <HAL_RCCEx_PeriphCLKConfig+0xa0>
    FlagStatus       pwrclkchanged = RESET;

    /* As soon as function is called to change RTC clock source, activation of the
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f96:	2380      	movs	r3, #128	; 0x80
    FlagStatus       pwrclkchanged = RESET;
 8002f98:	2100      	movs	r1, #0
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002f9a:	4c65      	ldr	r4, [pc, #404]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8002f9c:	055b      	lsls	r3, r3, #21
 8002f9e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    FlagStatus       pwrclkchanged = RESET;
 8002fa0:	9100      	str	r1, [sp, #0]
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002fa2:	421a      	tst	r2, r3
 8002fa4:	d104      	bne.n	8002fb0 <HAL_RCCEx_PeriphCLKConfig+0x28>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002fa6:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8002fa8:	4313      	orrs	r3, r2
 8002faa:	63a3      	str	r3, [r4, #56]	; 0x38
      pwrclkchanged = SET;
 8002fac:	2301      	movs	r3, #1
 8002fae:	9300      	str	r3, [sp, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002fb0:	2780      	movs	r7, #128	; 0x80
 8002fb2:	4e60      	ldr	r6, [pc, #384]	; (8003134 <HAL_RCCEx_PeriphCLKConfig+0x1ac>)
 8002fb4:	007f      	lsls	r7, r7, #1
 8002fb6:	6833      	ldr	r3, [r6, #0]
 8002fb8:	423b      	tst	r3, r7
 8002fba:	d077      	beq.n	80030ac <HAL_RCCEx_PeriphCLKConfig+0x124>
      }
    }

    /* Check if user wants to change HSE RTC prescaler whereas HSE is enabled */
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 8002fbc:	6869      	ldr	r1, [r5, #4]
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 8002fbe:	22c0      	movs	r2, #192	; 0xc0
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 8002fc0:	0008      	movs	r0, r1
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 8002fc2:	6823      	ldr	r3, [r4, #0]
 8002fc4:	0392      	lsls	r2, r2, #14
 8002fc6:	4013      	ands	r3, r2
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 8002fc8:	4010      	ands	r0, r2
 8002fca:	4283      	cmp	r3, r0
 8002fcc:	d103      	bne.n	8002fd6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
#if defined (LCD)
     || (temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CR_RTCPRE))
 8002fce:	68a8      	ldr	r0, [r5, #8]
 8002fd0:	4002      	ands	r2, r0
 8002fd2:	4293      	cmp	r3, r2
 8002fd4:	d009      	beq.n	8002fea <HAL_RCCEx_PeriphCLKConfig+0x62>
#endif /* LCD */
       )
    { /* Check HSE State */
      if ((PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL) == RCC_CSR_RTCSEL_HSE)
 8002fd6:	23c0      	movs	r3, #192	; 0xc0
 8002fd8:	000a      	movs	r2, r1
 8002fda:	029b      	lsls	r3, r3, #10
 8002fdc:	401a      	ands	r2, r3
 8002fde:	429a      	cmp	r2, r3
 8002fe0:	d103      	bne.n	8002fea <HAL_RCCEx_PeriphCLKConfig+0x62>
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8002fe2:	6823      	ldr	r3, [r4, #0]
        {
          /* To update HSE divider, first switch-OFF HSE clock oscillator*/
          return HAL_ERROR;
 8002fe4:	2001      	movs	r0, #1
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8002fe6:	039b      	lsls	r3, r3, #14
 8002fe8:	d471      	bmi.n	80030ce <HAL_RCCEx_PeriphCLKConfig+0x146>
        }
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    temp_reg = (RCC->CSR & RCC_CSR_RTCSEL);
 8002fea:	22c0      	movs	r2, #192	; 0xc0
 8002fec:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8002fee:	0292      	lsls	r2, r2, #10
 8002ff0:	4013      	ands	r3, r2

    if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL)) \
 8002ff2:	d000      	beq.n	8002ff6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8002ff4:	e06c      	b.n	80030d0 <HAL_RCCEx_PeriphCLKConfig+0x148>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8002ff6:	6869      	ldr	r1, [r5, #4]
 8002ff8:	23c0      	movs	r3, #192	; 0xc0
 8002ffa:	000a      	movs	r2, r1
 8002ffc:	029b      	lsls	r3, r3, #10
 8002ffe:	401a      	ands	r2, r3
 8003000:	429a      	cmp	r2, r3
 8003002:	d107      	bne.n	8003014 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8003004:	6823      	ldr	r3, [r4, #0]
 8003006:	484c      	ldr	r0, [pc, #304]	; (8003138 <HAL_RCCEx_PeriphCLKConfig+0x1b0>)
 8003008:	4003      	ands	r3, r0
 800300a:	20c0      	movs	r0, #192	; 0xc0
 800300c:	0380      	lsls	r0, r0, #14
 800300e:	4001      	ands	r1, r0
 8003010:	430b      	orrs	r3, r1
 8003012:	6023      	str	r3, [r4, #0]
 8003014:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8003016:	431a      	orrs	r2, r3

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003018:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800301a:	6522      	str	r2, [r4, #80]	; 0x50
    if(pwrclkchanged == SET)
 800301c:	2b01      	cmp	r3, #1
 800301e:	d103      	bne.n	8003028 <HAL_RCCEx_PeriphCLKConfig+0xa0>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003020:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003022:	4a46      	ldr	r2, [pc, #280]	; (800313c <HAL_RCCEx_PeriphCLKConfig+0x1b4>)
 8003024:	4013      	ands	r3, r2
 8003026:	63a3      	str	r3, [r4, #56]	; 0x38
    }
  }

#if defined (RCC_CCIPR_USART1SEL)
  /*------------------------------- USART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8003028:	682b      	ldr	r3, [r5, #0]
 800302a:	07da      	lsls	r2, r3, #31
 800302c:	d506      	bpl.n	800303c <HAL_RCCEx_PeriphCLKConfig+0xb4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800302e:	2003      	movs	r0, #3
 8003030:	493f      	ldr	r1, [pc, #252]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003032:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003034:	4382      	bics	r2, r0
 8003036:	68e8      	ldr	r0, [r5, #12]
 8003038:	4302      	orrs	r2, r0
 800303a:	64ca      	str	r2, [r1, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_USART1SEL */

  /*----------------------------- USART2 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800303c:	079a      	lsls	r2, r3, #30
 800303e:	d506      	bpl.n	800304e <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8003040:	200c      	movs	r0, #12
 8003042:	493b      	ldr	r1, [pc, #236]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003044:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003046:	4382      	bics	r2, r0
 8003048:	6928      	ldr	r0, [r5, #16]
 800304a:	4302      	orrs	r2, r0
 800304c:	64ca      	str	r2, [r1, #76]	; 0x4c
  }

  /*------------------------------ LPUART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 800304e:	075a      	lsls	r2, r3, #29
 8003050:	d506      	bpl.n	8003060 <HAL_RCCEx_PeriphCLKConfig+0xd8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUAR1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8003052:	4937      	ldr	r1, [pc, #220]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003054:	483a      	ldr	r0, [pc, #232]	; (8003140 <HAL_RCCEx_PeriphCLKConfig+0x1b8>)
 8003056:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 8003058:	4002      	ands	r2, r0
 800305a:	6968      	ldr	r0, [r5, #20]
 800305c:	4302      	orrs	r2, r0
 800305e:	64ca      	str	r2, [r1, #76]	; 0x4c
  }

  /*------------------------------ I2C1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8003060:	071a      	lsls	r2, r3, #28
 8003062:	d506      	bpl.n	8003072 <HAL_RCCEx_PeriphCLKConfig+0xea>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8003064:	4932      	ldr	r1, [pc, #200]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003066:	4837      	ldr	r0, [pc, #220]	; (8003144 <HAL_RCCEx_PeriphCLKConfig+0x1bc>)
 8003068:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800306a:	4002      	ands	r2, r0
 800306c:	69a8      	ldr	r0, [r5, #24]
 800306e:	4302      	orrs	r2, r0
 8003070:	64ca      	str	r2, [r1, #76]	; 0x4c
  }

#if defined (RCC_CCIPR_I2C3SEL)
    /*------------------------------ I2C3 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8003072:	05da      	lsls	r2, r3, #23
 8003074:	d506      	bpl.n	8003084 <HAL_RCCEx_PeriphCLKConfig+0xfc>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8003076:	492e      	ldr	r1, [pc, #184]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 8003078:	4833      	ldr	r0, [pc, #204]	; (8003148 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
 800307a:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800307c:	4002      	ands	r2, r0
 800307e:	69e8      	ldr	r0, [r5, #28]
 8003080:	4302      	orrs	r2, r0
 8003082:	64ca      	str	r2, [r1, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_I2C3SEL */

#if defined(USB)
 /*---------------------------- USB and RNG configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 8003084:	065a      	lsls	r2, r3, #25
 8003086:	d506      	bpl.n	8003096 <HAL_RCCEx_PeriphCLKConfig+0x10e>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8003088:	4929      	ldr	r1, [pc, #164]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 800308a:	4830      	ldr	r0, [pc, #192]	; (800314c <HAL_RCCEx_PeriphCLKConfig+0x1c4>)
 800308c:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800308e:	4002      	ands	r2, r0
 8003090:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8003092:	4302      	orrs	r2, r0
 8003094:	64ca      	str	r2, [r1, #76]	; 0x4c
  {
    assert_param(IS_RCC_LPTIMCLK(PeriphClkInit->LptimClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->LptimClockSelection);
  }

  return HAL_OK;
 8003096:	2000      	movs	r0, #0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8003098:	061b      	lsls	r3, r3, #24
 800309a:	d518      	bpl.n	80030ce <HAL_RCCEx_PeriphCLKConfig+0x146>
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->LptimClockSelection);
 800309c:	4a24      	ldr	r2, [pc, #144]	; (8003130 <HAL_RCCEx_PeriphCLKConfig+0x1a8>)
 800309e:	492c      	ldr	r1, [pc, #176]	; (8003150 <HAL_RCCEx_PeriphCLKConfig+0x1c8>)
 80030a0:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80030a2:	400b      	ands	r3, r1
 80030a4:	6a29      	ldr	r1, [r5, #32]
 80030a6:	430b      	orrs	r3, r1
 80030a8:	64d3      	str	r3, [r2, #76]	; 0x4c
 80030aa:	e010      	b.n	80030ce <HAL_RCCEx_PeriphCLKConfig+0x146>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80030ac:	6833      	ldr	r3, [r6, #0]
 80030ae:	433b      	orrs	r3, r7
 80030b0:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 80030b2:	f7ff fa97 	bl	80025e4 <HAL_GetTick>
 80030b6:	9001      	str	r0, [sp, #4]
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80030b8:	6833      	ldr	r3, [r6, #0]
 80030ba:	423b      	tst	r3, r7
 80030bc:	d000      	beq.n	80030c0 <HAL_RCCEx_PeriphCLKConfig+0x138>
 80030be:	e77d      	b.n	8002fbc <HAL_RCCEx_PeriphCLKConfig+0x34>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80030c0:	f7ff fa90 	bl	80025e4 <HAL_GetTick>
 80030c4:	9b01      	ldr	r3, [sp, #4]
 80030c6:	1ac0      	subs	r0, r0, r3
 80030c8:	2864      	cmp	r0, #100	; 0x64
 80030ca:	d9f5      	bls.n	80030b8 <HAL_RCCEx_PeriphCLKConfig+0x130>
          return HAL_TIMEOUT;
 80030cc:	2003      	movs	r0, #3
}
 80030ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL)) \
 80030d0:	4011      	ands	r1, r2
 80030d2:	428b      	cmp	r3, r1
 80030d4:	d002      	beq.n	80030dc <HAL_RCCEx_PeriphCLKConfig+0x154>
      && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC))
 80030d6:	6829      	ldr	r1, [r5, #0]
 80030d8:	0689      	lsls	r1, r1, #26
 80030da:	d408      	bmi.n	80030ee <HAL_RCCEx_PeriphCLKConfig+0x166>
      || ((temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CSR_RTCSEL)) \
 80030dc:	68a9      	ldr	r1, [r5, #8]
 80030de:	400a      	ands	r2, r1
 80030e0:	4293      	cmp	r3, r2
 80030e2:	d100      	bne.n	80030e6 <HAL_RCCEx_PeriphCLKConfig+0x15e>
 80030e4:	e787      	b.n	8002ff6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
       && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD))
 80030e6:	682b      	ldr	r3, [r5, #0]
 80030e8:	051b      	lsls	r3, r3, #20
 80030ea:	d400      	bmi.n	80030ee <HAL_RCCEx_PeriphCLKConfig+0x166>
 80030ec:	e783      	b.n	8002ff6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
      __HAL_RCC_BACKUPRESET_FORCE();
 80030ee:	2280      	movs	r2, #128	; 0x80
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 80030f0:	6d21      	ldr	r1, [r4, #80]	; 0x50
      __HAL_RCC_BACKUPRESET_FORCE();
 80030f2:	6d20      	ldr	r0, [r4, #80]	; 0x50
 80030f4:	0312      	lsls	r2, r2, #12
 80030f6:	4302      	orrs	r2, r0
 80030f8:	6522      	str	r2, [r4, #80]	; 0x50
      __HAL_RCC_BACKUPRESET_RELEASE();
 80030fa:	6d22      	ldr	r2, [r4, #80]	; 0x50
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 80030fc:	4b12      	ldr	r3, [pc, #72]	; (8003148 <HAL_RCCEx_PeriphCLKConfig+0x1c0>)
      __HAL_RCC_BACKUPRESET_RELEASE();
 80030fe:	4815      	ldr	r0, [pc, #84]	; (8003154 <HAL_RCCEx_PeriphCLKConfig+0x1cc>)
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 8003100:	400b      	ands	r3, r1
      __HAL_RCC_BACKUPRESET_RELEASE();
 8003102:	4002      	ands	r2, r0
 8003104:	6522      	str	r2, [r4, #80]	; 0x50
      RCC->CSR = temp_reg;
 8003106:	6523      	str	r3, [r4, #80]	; 0x50
      if (HAL_IS_BIT_SET(temp_reg, RCC_CSR_LSEON))
 8003108:	05cb      	lsls	r3, r1, #23
 800310a:	d400      	bmi.n	800310e <HAL_RCCEx_PeriphCLKConfig+0x186>
 800310c:	e773      	b.n	8002ff6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
        tickstart = HAL_GetTick();
 800310e:	f7ff fa69 	bl	80025e4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003112:	2780      	movs	r7, #128	; 0x80
        tickstart = HAL_GetTick();
 8003114:	0006      	movs	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003116:	00bf      	lsls	r7, r7, #2
 8003118:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800311a:	423b      	tst	r3, r7
 800311c:	d000      	beq.n	8003120 <HAL_RCCEx_PeriphCLKConfig+0x198>
 800311e:	e76a      	b.n	8002ff6 <HAL_RCCEx_PeriphCLKConfig+0x6e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003120:	f7ff fa60 	bl	80025e4 <HAL_GetTick>
 8003124:	4b0c      	ldr	r3, [pc, #48]	; (8003158 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8003126:	1b80      	subs	r0, r0, r6
 8003128:	4298      	cmp	r0, r3
 800312a:	d9f5      	bls.n	8003118 <HAL_RCCEx_PeriphCLKConfig+0x190>
 800312c:	e7ce      	b.n	80030cc <HAL_RCCEx_PeriphCLKConfig+0x144>
 800312e:	46c0      	nop			; (mov r8, r8)
 8003130:	40021000 	.word	0x40021000
 8003134:	40007000 	.word	0x40007000
 8003138:	ffcfffff 	.word	0xffcfffff
 800313c:	efffffff 	.word	0xefffffff
 8003140:	fffff3ff 	.word	0xfffff3ff
 8003144:	ffffcfff 	.word	0xffffcfff
 8003148:	fffcffff 	.word	0xfffcffff
 800314c:	fbffffff 	.word	0xfbffffff
 8003150:	fff3ffff 	.word	0xfff3ffff
 8003154:	fff7ffff 	.word	0xfff7ffff
 8003158:	00001388 	.word	0x00001388

0800315c <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800315c:	2280      	movs	r2, #128	; 0x80
  tmpcr1 = TIMx->CR1;
 800315e:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003160:	05d2      	lsls	r2, r2, #23
 8003162:	4290      	cmp	r0, r2
 8003164:	d008      	beq.n	8003178 <TIM_Base_SetConfig+0x1c>
 8003166:	4a15      	ldr	r2, [pc, #84]	; (80031bc <TIM_Base_SetConfig+0x60>)
 8003168:	4290      	cmp	r0, r2
 800316a:	d005      	beq.n	8003178 <TIM_Base_SetConfig+0x1c>
 800316c:	4a14      	ldr	r2, [pc, #80]	; (80031c0 <TIM_Base_SetConfig+0x64>)
 800316e:	4290      	cmp	r0, r2
 8003170:	d002      	beq.n	8003178 <TIM_Base_SetConfig+0x1c>
 8003172:	4a14      	ldr	r2, [pc, #80]	; (80031c4 <TIM_Base_SetConfig+0x68>)
 8003174:	4290      	cmp	r0, r2
 8003176:	d114      	bne.n	80031a2 <TIM_Base_SetConfig+0x46>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003178:	2270      	movs	r2, #112	; 0x70
 800317a:	4393      	bics	r3, r2
    tmpcr1 |= Structure->CounterMode;
 800317c:	684a      	ldr	r2, [r1, #4]
 800317e:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003180:	2280      	movs	r2, #128	; 0x80
 8003182:	05d2      	lsls	r2, r2, #23
 8003184:	4290      	cmp	r0, r2
 8003186:	d008      	beq.n	800319a <TIM_Base_SetConfig+0x3e>
 8003188:	4a0c      	ldr	r2, [pc, #48]	; (80031bc <TIM_Base_SetConfig+0x60>)
 800318a:	4290      	cmp	r0, r2
 800318c:	d005      	beq.n	800319a <TIM_Base_SetConfig+0x3e>
 800318e:	4a0c      	ldr	r2, [pc, #48]	; (80031c0 <TIM_Base_SetConfig+0x64>)
 8003190:	4290      	cmp	r0, r2
 8003192:	d002      	beq.n	800319a <TIM_Base_SetConfig+0x3e>
 8003194:	4a0b      	ldr	r2, [pc, #44]	; (80031c4 <TIM_Base_SetConfig+0x68>)
 8003196:	4290      	cmp	r0, r2
 8003198:	d103      	bne.n	80031a2 <TIM_Base_SetConfig+0x46>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800319a:	4a0b      	ldr	r2, [pc, #44]	; (80031c8 <TIM_Base_SetConfig+0x6c>)
 800319c:	4013      	ands	r3, r2
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800319e:	68ca      	ldr	r2, [r1, #12]
 80031a0:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80031a2:	2280      	movs	r2, #128	; 0x80
 80031a4:	4393      	bics	r3, r2
 80031a6:	690a      	ldr	r2, [r1, #16]
 80031a8:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80031aa:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80031ac:	688b      	ldr	r3, [r1, #8]
 80031ae:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80031b0:	680b      	ldr	r3, [r1, #0]
 80031b2:	6283      	str	r3, [r0, #40]	; 0x28

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80031b4:	2301      	movs	r3, #1
 80031b6:	6143      	str	r3, [r0, #20]
}
 80031b8:	4770      	bx	lr
 80031ba:	46c0      	nop			; (mov r8, r8)
 80031bc:	40000400 	.word	0x40000400
 80031c0:	40010800 	.word	0x40010800
 80031c4:	40011400 	.word	0x40011400
 80031c8:	fffffcff 	.word	0xfffffcff

080031cc <HAL_TIM_Base_Init>:
{
 80031cc:	b570      	push	{r4, r5, r6, lr}
 80031ce:	0004      	movs	r4, r0
    return HAL_ERROR;
 80031d0:	2001      	movs	r0, #1
  if (htim == NULL)
 80031d2:	2c00      	cmp	r4, #0
 80031d4:	d014      	beq.n	8003200 <HAL_TIM_Base_Init+0x34>
  if (htim->State == HAL_TIM_STATE_RESET)
 80031d6:	0025      	movs	r5, r4
 80031d8:	3539      	adds	r5, #57	; 0x39
 80031da:	782b      	ldrb	r3, [r5, #0]
 80031dc:	b2db      	uxtb	r3, r3
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d105      	bne.n	80031ee <HAL_TIM_Base_Init+0x22>
    htim->Lock = HAL_UNLOCKED;
 80031e2:	0022      	movs	r2, r4
 80031e4:	3238      	adds	r2, #56	; 0x38
 80031e6:	7013      	strb	r3, [r2, #0]
    HAL_TIM_Base_MspInit(htim);
 80031e8:	0020      	movs	r0, r4
 80031ea:	f000 fd79 	bl	8003ce0 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80031ee:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80031f0:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80031f2:	702b      	strb	r3, [r5, #0]
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80031f4:	1d21      	adds	r1, r4, #4
 80031f6:	f7ff ffb1 	bl	800315c <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80031fa:	2301      	movs	r3, #1
  return HAL_OK;
 80031fc:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80031fe:	702b      	strb	r3, [r5, #0]
}
 8003200:	bd70      	pop	{r4, r5, r6, pc}

08003202 <HAL_TIM_Base_Start>:
  htim->State = HAL_TIM_STATE_BUSY;
 8003202:	0001      	movs	r1, r0
 8003204:	2302      	movs	r3, #2
 8003206:	3139      	adds	r1, #57	; 0x39
 8003208:	700b      	strb	r3, [r1, #0]
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800320a:	6803      	ldr	r3, [r0, #0]
 800320c:	2007      	movs	r0, #7
 800320e:	689a      	ldr	r2, [r3, #8]
 8003210:	4002      	ands	r2, r0
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8003212:	2a06      	cmp	r2, #6
 8003214:	d003      	beq.n	800321e <HAL_TIM_Base_Start+0x1c>
    __HAL_TIM_ENABLE(htim);
 8003216:	2201      	movs	r2, #1
 8003218:	6818      	ldr	r0, [r3, #0]
 800321a:	4302      	orrs	r2, r0
 800321c:	601a      	str	r2, [r3, #0]
  htim->State = HAL_TIM_STATE_READY;
 800321e:	2301      	movs	r3, #1
}
 8003220:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8003222:	700b      	strb	r3, [r1, #0]
}
 8003224:	4770      	bx	lr
	...

08003228 <HAL_TIM_ConfigClockSource>:
{
 8003228:	b5f0      	push	{r4, r5, r6, r7, lr}
  __HAL_LOCK(htim);
 800322a:	0004      	movs	r4, r0
 800322c:	2202      	movs	r2, #2
 800322e:	3438      	adds	r4, #56	; 0x38
 8003230:	7825      	ldrb	r5, [r4, #0]
{
 8003232:	0003      	movs	r3, r0
  __HAL_LOCK(htim);
 8003234:	0010      	movs	r0, r2
 8003236:	2d01      	cmp	r5, #1
 8003238:	d017      	beq.n	800326a <HAL_TIM_ConfigClockSource+0x42>
  htim->State = HAL_TIM_STATE_BUSY;
 800323a:	001d      	movs	r5, r3
  __HAL_LOCK(htim);
 800323c:	2701      	movs	r7, #1
  tmpsmcr = htim->Instance->SMCR;
 800323e:	681b      	ldr	r3, [r3, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8003240:	3539      	adds	r5, #57	; 0x39
  __HAL_LOCK(htim);
 8003242:	7027      	strb	r7, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8003244:	702a      	strb	r2, [r5, #0]
  tmpsmcr = htim->Instance->SMCR;
 8003246:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003248:	4845      	ldr	r0, [pc, #276]	; (8003360 <HAL_TIM_ConfigClockSource+0x138>)
 800324a:	4002      	ands	r2, r0
  htim->Instance->SMCR = tmpsmcr;
 800324c:	609a      	str	r2, [r3, #8]
  switch (sClockSourceConfig->ClockSource)
 800324e:	680a      	ldr	r2, [r1, #0]
 8003250:	2a40      	cmp	r2, #64	; 0x40
 8003252:	d100      	bne.n	8003256 <HAL_TIM_ConfigClockSource+0x2e>
 8003254:	e06d      	b.n	8003332 <HAL_TIM_ConfigClockSource+0x10a>
 8003256:	d814      	bhi.n	8003282 <HAL_TIM_ConfigClockSource+0x5a>
 8003258:	2a10      	cmp	r2, #16
 800325a:	d00b      	beq.n	8003274 <HAL_TIM_ConfigClockSource+0x4c>
 800325c:	d806      	bhi.n	800326c <HAL_TIM_ConfigClockSource+0x44>
 800325e:	2a00      	cmp	r2, #0
 8003260:	d008      	beq.n	8003274 <HAL_TIM_ConfigClockSource+0x4c>
  htim->State = HAL_TIM_STATE_READY;
 8003262:	2301      	movs	r3, #1
  __HAL_UNLOCK(htim);
 8003264:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 8003266:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 8003268:	7020      	strb	r0, [r4, #0]
}
 800326a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  switch (sClockSourceConfig->ClockSource)
 800326c:	2a20      	cmp	r2, #32
 800326e:	d001      	beq.n	8003274 <HAL_TIM_ConfigClockSource+0x4c>
 8003270:	2a30      	cmp	r2, #48	; 0x30
 8003272:	d1f6      	bne.n	8003262 <HAL_TIM_ConfigClockSource+0x3a>
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8003274:	2170      	movs	r1, #112	; 0x70
  tmpsmcr = TIMx->SMCR;
 8003276:	6898      	ldr	r0, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003278:	4388      	bics	r0, r1
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800327a:	3969      	subs	r1, #105	; 0x69
 800327c:	430a      	orrs	r2, r1
 800327e:	4302      	orrs	r2, r0
 8003280:	e03d      	b.n	80032fe <HAL_TIM_ConfigClockSource+0xd6>
  switch (sClockSourceConfig->ClockSource)
 8003282:	2a60      	cmp	r2, #96	; 0x60
 8003284:	d03d      	beq.n	8003302 <HAL_TIM_ConfigClockSource+0xda>
 8003286:	d817      	bhi.n	80032b8 <HAL_TIM_ConfigClockSource+0x90>
 8003288:	2a50      	cmp	r2, #80	; 0x50
 800328a:	d1ea      	bne.n	8003262 <HAL_TIM_ConfigClockSource+0x3a>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800328c:	6848      	ldr	r0, [r1, #4]
 800328e:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 8003290:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003292:	6a1e      	ldr	r6, [r3, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003294:	0112      	lsls	r2, r2, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003296:	43be      	bics	r6, r7
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003298:	27f0      	movs	r7, #240	; 0xf0
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800329a:	621e      	str	r6, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800329c:	699e      	ldr	r6, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800329e:	43be      	bics	r6, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 80032a0:	4332      	orrs	r2, r6
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 80032a2:	260a      	movs	r6, #10
 80032a4:	43b1      	bics	r1, r6
  tmpccer |= TIM_ICPolarity;
 80032a6:	4301      	orrs	r1, r0
  TIMx->CCMR1 = tmpccmr1;
 80032a8:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80032aa:	6219      	str	r1, [r3, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 80032ac:	2170      	movs	r1, #112	; 0x70
  tmpsmcr = TIMx->SMCR;
 80032ae:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 80032b0:	438a      	bics	r2, r1
 80032b2:	0011      	movs	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80032b4:	2257      	movs	r2, #87	; 0x57
 80032b6:	e021      	b.n	80032fc <HAL_TIM_ConfigClockSource+0xd4>
  switch (sClockSourceConfig->ClockSource)
 80032b8:	2a70      	cmp	r2, #112	; 0x70
 80032ba:	d012      	beq.n	80032e2 <HAL_TIM_ConfigClockSource+0xba>
 80032bc:	2080      	movs	r0, #128	; 0x80
 80032be:	0180      	lsls	r0, r0, #6
 80032c0:	4282      	cmp	r2, r0
 80032c2:	d1ce      	bne.n	8003262 <HAL_TIM_ConfigClockSource+0x3a>
static void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                              uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80032c4:	689a      	ldr	r2, [r3, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80032c6:	4827      	ldr	r0, [pc, #156]	; (8003364 <HAL_TIM_ConfigClockSource+0x13c>)

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80032c8:	684e      	ldr	r6, [r1, #4]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80032ca:	4010      	ands	r0, r2
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80032cc:	688a      	ldr	r2, [r1, #8]
 80032ce:	68c9      	ldr	r1, [r1, #12]
 80032d0:	4332      	orrs	r2, r6
 80032d2:	0209      	lsls	r1, r1, #8
 80032d4:	430a      	orrs	r2, r1
 80032d6:	4302      	orrs	r2, r0

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80032d8:	609a      	str	r2, [r3, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80032da:	2280      	movs	r2, #128	; 0x80
 80032dc:	6899      	ldr	r1, [r3, #8]
 80032de:	01d2      	lsls	r2, r2, #7
 80032e0:	e00c      	b.n	80032fc <HAL_TIM_ConfigClockSource+0xd4>
  tmpsmcr = TIMx->SMCR;
 80032e2:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80032e4:	481f      	ldr	r0, [pc, #124]	; (8003364 <HAL_TIM_ConfigClockSource+0x13c>)
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80032e6:	684e      	ldr	r6, [r1, #4]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80032e8:	4010      	ands	r0, r2
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 80032ea:	688a      	ldr	r2, [r1, #8]
 80032ec:	68c9      	ldr	r1, [r1, #12]
 80032ee:	4332      	orrs	r2, r6
 80032f0:	0209      	lsls	r1, r1, #8
 80032f2:	430a      	orrs	r2, r1
 80032f4:	4302      	orrs	r2, r0
  TIMx->SMCR = tmpsmcr;
 80032f6:	609a      	str	r2, [r3, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80032f8:	2277      	movs	r2, #119	; 0x77
      tmpsmcr = htim->Instance->SMCR;
 80032fa:	6899      	ldr	r1, [r3, #8]
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80032fc:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 80032fe:	609a      	str	r2, [r3, #8]
 8003300:	e7af      	b.n	8003262 <HAL_TIM_ConfigClockSource+0x3a>
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003302:	2610      	movs	r6, #16
 8003304:	6a18      	ldr	r0, [r3, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8003306:	684a      	ldr	r2, [r1, #4]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003308:	43b0      	bics	r0, r6
      TIM_TI2_ConfigInputStage(htim->Instance,
 800330a:	68c9      	ldr	r1, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800330c:	6218      	str	r0, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 800330e:	699e      	ldr	r6, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8003310:	4f15      	ldr	r7, [pc, #84]	; (8003368 <HAL_TIM_ConfigClockSource+0x140>)
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8003312:	0309      	lsls	r1, r1, #12
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8003314:	403e      	ands	r6, r7
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8003316:	4331      	orrs	r1, r6
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8003318:	26a0      	movs	r6, #160	; 0xa0
  tmpccer = TIMx->CCER;
 800331a:	6a18      	ldr	r0, [r3, #32]
  TIMx->CCMR1 = tmpccmr1 ;
 800331c:	6199      	str	r1, [r3, #24]
  tmpsmcr &= ~TIM_SMCR_TS;
 800331e:	2170      	movs	r1, #112	; 0x70
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8003320:	43b0      	bics	r0, r6
  tmpccer |= (TIM_ICPolarity << 4U);
 8003322:	0112      	lsls	r2, r2, #4
 8003324:	4302      	orrs	r2, r0
  TIMx->CCER = tmpccer;
 8003326:	621a      	str	r2, [r3, #32]
  tmpsmcr = TIMx->SMCR;
 8003328:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800332a:	438a      	bics	r2, r1
 800332c:	0011      	movs	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800332e:	2267      	movs	r2, #103	; 0x67
 8003330:	e7e4      	b.n	80032fc <HAL_TIM_ConfigClockSource+0xd4>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8003332:	6848      	ldr	r0, [r1, #4]
 8003334:	68ca      	ldr	r2, [r1, #12]
  tmpccer = TIMx->CCER;
 8003336:	6a19      	ldr	r1, [r3, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003338:	6a1e      	ldr	r6, [r3, #32]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800333a:	0112      	lsls	r2, r2, #4
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800333c:	43be      	bics	r6, r7
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800333e:	27f0      	movs	r7, #240	; 0xf0
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003340:	621e      	str	r6, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8003342:	699e      	ldr	r6, [r3, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003344:	43be      	bics	r6, r7
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003346:	4332      	orrs	r2, r6
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003348:	260a      	movs	r6, #10
 800334a:	43b1      	bics	r1, r6
  tmpccer |= TIM_ICPolarity;
 800334c:	4301      	orrs	r1, r0
  TIMx->CCMR1 = tmpccmr1;
 800334e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8003350:	6219      	str	r1, [r3, #32]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003352:	2170      	movs	r1, #112	; 0x70
  tmpsmcr = TIMx->SMCR;
 8003354:	689a      	ldr	r2, [r3, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8003356:	438a      	bics	r2, r1
 8003358:	0011      	movs	r1, r2
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800335a:	2247      	movs	r2, #71	; 0x47
 800335c:	e7ce      	b.n	80032fc <HAL_TIM_ConfigClockSource+0xd4>
 800335e:	46c0      	nop			; (mov r8, r8)
 8003360:	ffff0088 	.word	0xffff0088
 8003364:	ffff00ff 	.word	0xffff00ff
 8003368:	ffff0fff 	.word	0xffff0fff

0800336c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 800336c:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_TIM_SYNCHRO_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800336e:	0004      	movs	r4, r0
 8003370:	3438      	adds	r4, #56	; 0x38
 8003372:	7822      	ldrb	r2, [r4, #0]
{
 8003374:	0003      	movs	r3, r0
 8003376:	2002      	movs	r0, #2
  __HAL_LOCK(htim);
 8003378:	2a01      	cmp	r2, #1
 800337a:	d013      	beq.n	80033a4 <HAL_TIMEx_MasterConfigSynchronization+0x38>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800337c:	001d      	movs	r5, r3

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800337e:	2670      	movs	r6, #112	; 0x70
  htim->State = HAL_TIM_STATE_BUSY;
 8003380:	3539      	adds	r5, #57	; 0x39
 8003382:	7028      	strb	r0, [r5, #0]
  tmpcr2 = htim->Instance->CR2;
 8003384:	6818      	ldr	r0, [r3, #0]
 8003386:	6842      	ldr	r2, [r0, #4]
  tmpsmcr = htim->Instance->SMCR;
 8003388:	6883      	ldr	r3, [r0, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800338a:	43b2      	bics	r2, r6
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800338c:	680e      	ldr	r6, [r1, #0]

  /* Reset the MSM Bit */
  tmpsmcr &= ~TIM_SMCR_MSM;
  /* Set master mode */
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800338e:	6849      	ldr	r1, [r1, #4]
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8003390:	4332      	orrs	r2, r6
  tmpsmcr &= ~TIM_SMCR_MSM;
 8003392:	2680      	movs	r6, #128	; 0x80
 8003394:	43b3      	bics	r3, r6
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8003396:	430b      	orrs	r3, r1

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8003398:	6042      	str	r2, [r0, #4]

  /* Update TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 800339a:	6083      	str	r3, [r0, #8]

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800339c:	2301      	movs	r3, #1

  __HAL_UNLOCK(htim);
 800339e:	2000      	movs	r0, #0
  htim->State = HAL_TIM_STATE_READY;
 80033a0:	702b      	strb	r3, [r5, #0]
  __HAL_UNLOCK(htim);
 80033a2:	7020      	strb	r0, [r4, #0]

  return HAL_OK;
}
 80033a4:	bd70      	pop	{r4, r5, r6, pc}
	...

080033a8 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80033a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033aa:	0004      	movs	r4, r0
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80033ac:	6925      	ldr	r5, [r4, #16]
 80033ae:	68a2      	ldr	r2, [r4, #8]
  if (UART_INSTANCE_LOWPOWER(huart))
 80033b0:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80033b2:	432a      	orrs	r2, r5
 80033b4:	6965      	ldr	r5, [r4, #20]
 80033b6:	69c1      	ldr	r1, [r0, #28]
 80033b8:	432a      	orrs	r2, r5
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80033ba:	6818      	ldr	r0, [r3, #0]
 80033bc:	4d81      	ldr	r5, [pc, #516]	; (80035c4 <UART_SetConfig+0x21c>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80033be:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80033c0:	4028      	ands	r0, r5
 80033c2:	4302      	orrs	r2, r0
 80033c4:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80033c6:	685a      	ldr	r2, [r3, #4]
 80033c8:	487f      	ldr	r0, [pc, #508]	; (80035c8 <UART_SetConfig+0x220>)
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 80033ca:	4d80      	ldr	r5, [pc, #512]	; (80035cc <UART_SetConfig+0x224>)
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80033cc:	4002      	ands	r2, r0
 80033ce:	68e0      	ldr	r0, [r4, #12]
 80033d0:	4302      	orrs	r2, r0
 80033d2:	605a      	str	r2, [r3, #4]
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80033d4:	69a0      	ldr	r0, [r4, #24]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
 80033d6:	42ab      	cmp	r3, r5
 80033d8:	d001      	beq.n	80033de <UART_SetConfig+0x36>
  {
    tmpreg |= huart->Init.OneBitSampling;
 80033da:	6a22      	ldr	r2, [r4, #32]
 80033dc:	4310      	orrs	r0, r2
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80033de:	689a      	ldr	r2, [r3, #8]
 80033e0:	4e7b      	ldr	r6, [pc, #492]	; (80035d0 <UART_SetConfig+0x228>)
 80033e2:	4032      	ands	r2, r6
 80033e4:	4302      	orrs	r2, r0
 80033e6:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 80033e8:	4a7a      	ldr	r2, [pc, #488]	; (80035d4 <UART_SetConfig+0x22c>)
 80033ea:	4293      	cmp	r3, r2
 80033ec:	d113      	bne.n	8003416 <UART_SetConfig+0x6e>
 80033ee:	2203      	movs	r2, #3
 80033f0:	4b79      	ldr	r3, [pc, #484]	; (80035d8 <UART_SetConfig+0x230>)
 80033f2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80033f4:	4013      	ands	r3, r2
 80033f6:	4a79      	ldr	r2, [pc, #484]	; (80035dc <UART_SetConfig+0x234>)
 80033f8:	5cd0      	ldrb	r0, [r2, r3]
        }
      } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (lpuart_ker_ck_pres != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80033fa:	2380      	movs	r3, #128	; 0x80
 80033fc:	021b      	lsls	r3, r3, #8
 80033fe:	4299      	cmp	r1, r3
 8003400:	d100      	bne.n	8003404 <UART_SetConfig+0x5c>
 8003402:	e0d1      	b.n	80035a8 <UART_SetConfig+0x200>
      ret = HAL_ERROR;
    }
  }
  else
  {
    switch (clocksource)
 8003404:	2808      	cmp	r0, #8
 8003406:	d826      	bhi.n	8003456 <UART_SetConfig+0xae>
 8003408:	f7fc fe86 	bl	8000118 <__gnu_thumb1_case_uqi>
 800340c:	259996c0 	.word	0x259996c0
 8003410:	252525b4 	.word	0x252525b4
 8003414:	b7          	.byte	0xb7
 8003415:	00          	.byte	0x00
  UART_GETCLOCKSOURCE(huart, clocksource);
 8003416:	4a72      	ldr	r2, [pc, #456]	; (80035e0 <UART_SetConfig+0x238>)
 8003418:	4293      	cmp	r3, r2
 800341a:	d105      	bne.n	8003428 <UART_SetConfig+0x80>
 800341c:	220c      	movs	r2, #12
 800341e:	4b6e      	ldr	r3, [pc, #440]	; (80035d8 <UART_SetConfig+0x230>)
 8003420:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003422:	4013      	ands	r3, r2
 8003424:	4a6f      	ldr	r2, [pc, #444]	; (80035e4 <UART_SetConfig+0x23c>)
 8003426:	e7e7      	b.n	80033f8 <UART_SetConfig+0x50>
 8003428:	4a6f      	ldr	r2, [pc, #444]	; (80035e8 <UART_SetConfig+0x240>)
 800342a:	4293      	cmp	r3, r2
 800342c:	d100      	bne.n	8003430 <UART_SetConfig+0x88>
 800342e:	e0a9      	b.n	8003584 <UART_SetConfig+0x1dc>
 8003430:	4a6e      	ldr	r2, [pc, #440]	; (80035ec <UART_SetConfig+0x244>)
 8003432:	4293      	cmp	r3, r2
 8003434:	d100      	bne.n	8003438 <UART_SetConfig+0x90>
 8003436:	e0a5      	b.n	8003584 <UART_SetConfig+0x1dc>
 8003438:	42ab      	cmp	r3, r5
 800343a:	d000      	beq.n	800343e <UART_SetConfig+0x96>
 800343c:	e0ad      	b.n	800359a <UART_SetConfig+0x1f2>
 800343e:	21c0      	movs	r1, #192	; 0xc0
 8003440:	2080      	movs	r0, #128	; 0x80
 8003442:	4a65      	ldr	r2, [pc, #404]	; (80035d8 <UART_SetConfig+0x230>)
 8003444:	0109      	lsls	r1, r1, #4
 8003446:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8003448:	00c0      	lsls	r0, r0, #3
 800344a:	400b      	ands	r3, r1
 800344c:	4283      	cmp	r3, r0
 800344e:	d038      	beq.n	80034c2 <UART_SetConfig+0x11a>
 8003450:	d803      	bhi.n	800345a <UART_SetConfig+0xb2>
 8003452:	2b00      	cmp	r3, #0
 8003454:	d00a      	beq.n	800346c <UART_SetConfig+0xc4>
        ret = HAL_ERROR;
 8003456:	2501      	movs	r5, #1
 8003458:	e00d      	b.n	8003476 <UART_SetConfig+0xce>
  UART_GETCLOCKSOURCE(huart, clocksource);
 800345a:	2080      	movs	r0, #128	; 0x80
 800345c:	0100      	lsls	r0, r0, #4
 800345e:	4283      	cmp	r3, r0
 8003460:	d00e      	beq.n	8003480 <UART_SetConfig+0xd8>
 8003462:	428b      	cmp	r3, r1
 8003464:	d1f7      	bne.n	8003456 <UART_SetConfig+0xae>
        lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 8003466:	2080      	movs	r0, #128	; 0x80
 8003468:	0200      	lsls	r0, r0, #8
 800346a:	e00d      	b.n	8003488 <UART_SetConfig+0xe0>
        lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 800346c:	f7ff fd6c 	bl	8002f48 <HAL_RCC_GetPCLK1Freq>
 8003470:	2500      	movs	r5, #0
    if (lpuart_ker_ck_pres != 0U)
 8003472:	42a8      	cmp	r0, r5
 8003474:	d108      	bne.n	8003488 <UART_SetConfig+0xe0>
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8003476:	2300      	movs	r3, #0
  huart->TxISR = NULL;

  return ret;
}
 8003478:	0028      	movs	r0, r5
  huart->RxISR = NULL;
 800347a:	6623      	str	r3, [r4, #96]	; 0x60
  huart->TxISR = NULL;
 800347c:	6663      	str	r3, [r4, #100]	; 0x64
}
 800347e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8003480:	6813      	ldr	r3, [r2, #0]
 8003482:	06db      	lsls	r3, r3, #27
 8003484:	d520      	bpl.n	80034c8 <UART_SetConfig+0x120>
          lpuart_ker_ck_pres = (uint32_t)(HSI_VALUE >> 2U);
 8003486:	485a      	ldr	r0, [pc, #360]	; (80035f0 <UART_SetConfig+0x248>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003488:	2203      	movs	r2, #3
 800348a:	6863      	ldr	r3, [r4, #4]
 800348c:	435a      	muls	r2, r3
 800348e:	4282      	cmp	r2, r0
 8003490:	d8e1      	bhi.n	8003456 <UART_SetConfig+0xae>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8003492:	031a      	lsls	r2, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8003494:	4282      	cmp	r2, r0
 8003496:	d3de      	bcc.n	8003456 <UART_SetConfig+0xae>
        usartdiv = (uint32_t)(UART_DIV_LPUART(lpuart_ker_ck_pres, huart->Init.BaudRate));
 8003498:	2700      	movs	r7, #0
 800349a:	0e02      	lsrs	r2, r0, #24
 800349c:	0201      	lsls	r1, r0, #8
 800349e:	085e      	lsrs	r6, r3, #1
 80034a0:	1989      	adds	r1, r1, r6
 80034a2:	417a      	adcs	r2, r7
 80034a4:	0008      	movs	r0, r1
 80034a6:	0011      	movs	r1, r2
 80034a8:	001a      	movs	r2, r3
 80034aa:	003b      	movs	r3, r7
 80034ac:	f7fc fffc 	bl	80004a8 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 80034b0:	4b50      	ldr	r3, [pc, #320]	; (80035f4 <UART_SetConfig+0x24c>)
 80034b2:	18c2      	adds	r2, r0, r3
 80034b4:	4b50      	ldr	r3, [pc, #320]	; (80035f8 <UART_SetConfig+0x250>)
 80034b6:	429a      	cmp	r2, r3
 80034b8:	d8cd      	bhi.n	8003456 <UART_SetConfig+0xae>
          huart->Instance->BRR = usartdiv;
 80034ba:	6823      	ldr	r3, [r4, #0]
 80034bc:	003d      	movs	r5, r7
 80034be:	60d8      	str	r0, [r3, #12]
 80034c0:	e7d9      	b.n	8003476 <UART_SetConfig+0xce>
        lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 80034c2:	f7ff f9c1 	bl	8002848 <HAL_RCC_GetSysClockFreq>
        break;
 80034c6:	e7d3      	b.n	8003470 <UART_SetConfig+0xc8>
          lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 80034c8:	484c      	ldr	r0, [pc, #304]	; (80035fc <UART_SetConfig+0x254>)
 80034ca:	e7dd      	b.n	8003488 <UART_SetConfig+0xe0>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 80034cc:	f7ff fd3c 	bl	8002f48 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 80034d0:	6863      	ldr	r3, [r4, #4]
 80034d2:	0040      	lsls	r0, r0, #1
 80034d4:	085b      	lsrs	r3, r3, #1
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 80034d6:	18c0      	adds	r0, r0, r3
 80034d8:	6861      	ldr	r1, [r4, #4]
 80034da:	e00b      	b.n	80034f4 <UART_SetConfig+0x14c>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 80034dc:	f7ff fd44 	bl	8002f68 <HAL_RCC_GetPCLK2Freq>
 80034e0:	e7f6      	b.n	80034d0 <UART_SetConfig+0x128>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80034e2:	2510      	movs	r5, #16
 80034e4:	4b3c      	ldr	r3, [pc, #240]	; (80035d8 <UART_SetConfig+0x230>)
 80034e6:	6861      	ldr	r1, [r4, #4]
 80034e8:	681a      	ldr	r2, [r3, #0]
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
 80034ea:	0848      	lsrs	r0, r1, #1
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80034ec:	4015      	ands	r5, r2
 80034ee:	d006      	beq.n	80034fe <UART_SetConfig+0x156>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
 80034f0:	4b43      	ldr	r3, [pc, #268]	; (8003600 <UART_SetConfig+0x258>)
 80034f2:	18c0      	adds	r0, r0, r3
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 80034f4:	f7fc fe24 	bl	8000140 <__udivsi3>
  HAL_StatusTypeDef ret               = HAL_OK;
 80034f8:	2500      	movs	r5, #0
 80034fa:	b283      	uxth	r3, r0
        break;
 80034fc:	e004      	b.n	8003508 <UART_SetConfig+0x160>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 80034fe:	4b41      	ldr	r3, [pc, #260]	; (8003604 <UART_SetConfig+0x25c>)
 8003500:	18c0      	adds	r0, r0, r3
 8003502:	f7fc fe1d 	bl	8000140 <__udivsi3>
 8003506:	b283      	uxth	r3, r0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003508:	0019      	movs	r1, r3
 800350a:	483f      	ldr	r0, [pc, #252]	; (8003608 <UART_SetConfig+0x260>)
 800350c:	3910      	subs	r1, #16
 800350e:	4281      	cmp	r1, r0
 8003510:	d8a1      	bhi.n	8003456 <UART_SetConfig+0xae>
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003512:	210f      	movs	r1, #15
 8003514:	0018      	movs	r0, r3
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8003516:	071b      	lsls	r3, r3, #28
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003518:	4388      	bics	r0, r1
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800351a:	0f5b      	lsrs	r3, r3, #29
      huart->Instance->BRR = brrtemp;
 800351c:	6821      	ldr	r1, [r4, #0]
 800351e:	4303      	orrs	r3, r0
      huart->Instance->BRR = usartdiv;
 8003520:	60cb      	str	r3, [r1, #12]
 8003522:	e7a8      	b.n	8003476 <UART_SetConfig+0xce>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8003524:	f7ff f990 	bl	8002848 <HAL_RCC_GetSysClockFreq>
 8003528:	e7d2      	b.n	80034d0 <UART_SetConfig+0x128>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800352a:	6863      	ldr	r3, [r4, #4]
 800352c:	0858      	lsrs	r0, r3, #1
 800352e:	2380      	movs	r3, #128	; 0x80
 8003530:	025b      	lsls	r3, r3, #9
 8003532:	e7d0      	b.n	80034d6 <UART_SetConfig+0x12e>
  uint32_t usartdiv                   = 0x00000000U;
 8003534:	2300      	movs	r3, #0
 8003536:	e7e7      	b.n	8003508 <UART_SetConfig+0x160>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 8003538:	f7ff fd16 	bl	8002f68 <HAL_RCC_GetPCLK2Freq>
 800353c:	e028      	b.n	8003590 <UART_SetConfig+0x1e8>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800353e:	2510      	movs	r5, #16
 8003540:	4b25      	ldr	r3, [pc, #148]	; (80035d8 <UART_SetConfig+0x230>)
 8003542:	6861      	ldr	r1, [r4, #4]
 8003544:	681a      	ldr	r2, [r3, #0]
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRate));
 8003546:	0848      	lsrs	r0, r1, #1
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8003548:	4015      	ands	r5, r2
 800354a:	d006      	beq.n	800355a <UART_SetConfig+0x1b2>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRate));
 800354c:	4b28      	ldr	r3, [pc, #160]	; (80035f0 <UART_SetConfig+0x248>)
 800354e:	18c0      	adds	r0, r0, r3
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8003550:	f7fc fdf6 	bl	8000140 <__udivsi3>
  HAL_StatusTypeDef ret               = HAL_OK;
 8003554:	2500      	movs	r5, #0
 8003556:	b283      	uxth	r3, r0
        break;
 8003558:	e004      	b.n	8003564 <UART_SetConfig+0x1bc>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 800355a:	4b28      	ldr	r3, [pc, #160]	; (80035fc <UART_SetConfig+0x254>)
 800355c:	18c0      	adds	r0, r0, r3
 800355e:	f7fc fdef 	bl	8000140 <__udivsi3>
 8003562:	b283      	uxth	r3, r0
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003564:	0019      	movs	r1, r3
 8003566:	4828      	ldr	r0, [pc, #160]	; (8003608 <UART_SetConfig+0x260>)
 8003568:	3910      	subs	r1, #16
 800356a:	4281      	cmp	r1, r0
 800356c:	d900      	bls.n	8003570 <UART_SetConfig+0x1c8>
 800356e:	e772      	b.n	8003456 <UART_SetConfig+0xae>
      huart->Instance->BRR = usartdiv;
 8003570:	6821      	ldr	r1, [r4, #0]
 8003572:	e7d5      	b.n	8003520 <UART_SetConfig+0x178>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8003574:	f7ff f968 	bl	8002848 <HAL_RCC_GetSysClockFreq>
 8003578:	e00a      	b.n	8003590 <UART_SetConfig+0x1e8>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 800357a:	6863      	ldr	r3, [r4, #4]
 800357c:	0858      	lsrs	r0, r3, #1
 800357e:	2380      	movs	r3, #128	; 0x80
 8003580:	021b      	lsls	r3, r3, #8
 8003582:	e007      	b.n	8003594 <UART_SetConfig+0x1ec>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8003584:	2380      	movs	r3, #128	; 0x80
 8003586:	021b      	lsls	r3, r3, #8
 8003588:	4299      	cmp	r1, r3
 800358a:	d09f      	beq.n	80034cc <UART_SetConfig+0x124>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 800358c:	f7ff fcdc 	bl	8002f48 <HAL_RCC_GetPCLK1Freq>
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8003590:	6863      	ldr	r3, [r4, #4]
 8003592:	085b      	lsrs	r3, r3, #1
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 8003594:	18c0      	adds	r0, r0, r3
 8003596:	6861      	ldr	r1, [r4, #4]
 8003598:	e7da      	b.n	8003550 <UART_SetConfig+0x1a8>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800359a:	2380      	movs	r3, #128	; 0x80
        ret = HAL_ERROR;
 800359c:	2501      	movs	r5, #1
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800359e:	021b      	lsls	r3, r3, #8
 80035a0:	4299      	cmp	r1, r3
 80035a2:	d0c7      	beq.n	8003534 <UART_SetConfig+0x18c>
  uint32_t usartdiv                   = 0x00000000U;
 80035a4:	2300      	movs	r3, #0
 80035a6:	e7dd      	b.n	8003564 <UART_SetConfig+0x1bc>
    switch (clocksource)
 80035a8:	2808      	cmp	r0, #8
 80035aa:	d900      	bls.n	80035ae <UART_SetConfig+0x206>
 80035ac:	e753      	b.n	8003456 <UART_SetConfig+0xae>
 80035ae:	f7fc fdbd 	bl	800012c <__gnu_thumb1_case_shi>
 80035b2:	ff8d      	.short	0xff8d
 80035b4:	ff98ff95 	.word	0xff98ff95
 80035b8:	ffb9ff52 	.word	0xffb9ff52
 80035bc:	ff52ff52 	.word	0xff52ff52
 80035c0:	ffbcff52 	.word	0xffbcff52
 80035c4:	efff69f3 	.word	0xefff69f3
 80035c8:	ffffcfff 	.word	0xffffcfff
 80035cc:	40004800 	.word	0x40004800
 80035d0:	fffff4ff 	.word	0xfffff4ff
 80035d4:	40013800 	.word	0x40013800
 80035d8:	40021000 	.word	0x40021000
 80035dc:	080060c0 	.word	0x080060c0
 80035e0:	40004400 	.word	0x40004400
 80035e4:	080060c4 	.word	0x080060c4
 80035e8:	40004c00 	.word	0x40004c00
 80035ec:	40005000 	.word	0x40005000
 80035f0:	003d0900 	.word	0x003d0900
 80035f4:	fffffd00 	.word	0xfffffd00
 80035f8:	000ffcff 	.word	0x000ffcff
 80035fc:	00f42400 	.word	0x00f42400
 8003600:	007a1200 	.word	0x007a1200
 8003604:	01e84800 	.word	0x01e84800
 8003608:	0000ffef 	.word	0x0000ffef

0800360c <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800360c:	6a43      	ldr	r3, [r0, #36]	; 0x24
{
 800360e:	b530      	push	{r4, r5, lr}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003610:	07da      	lsls	r2, r3, #31
 8003612:	d506      	bpl.n	8003622 <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003614:	6801      	ldr	r1, [r0, #0]
 8003616:	4c28      	ldr	r4, [pc, #160]	; (80036b8 <UART_AdvFeatureConfig+0xac>)
 8003618:	684a      	ldr	r2, [r1, #4]
 800361a:	4022      	ands	r2, r4
 800361c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800361e:	4322      	orrs	r2, r4
 8003620:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 8003622:	079a      	lsls	r2, r3, #30
 8003624:	d506      	bpl.n	8003634 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8003626:	6801      	ldr	r1, [r0, #0]
 8003628:	4c24      	ldr	r4, [pc, #144]	; (80036bc <UART_AdvFeatureConfig+0xb0>)
 800362a:	684a      	ldr	r2, [r1, #4]
 800362c:	4022      	ands	r2, r4
 800362e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 8003630:	4322      	orrs	r2, r4
 8003632:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8003634:	075a      	lsls	r2, r3, #29
 8003636:	d506      	bpl.n	8003646 <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8003638:	6801      	ldr	r1, [r0, #0]
 800363a:	4c21      	ldr	r4, [pc, #132]	; (80036c0 <UART_AdvFeatureConfig+0xb4>)
 800363c:	684a      	ldr	r2, [r1, #4]
 800363e:	4022      	ands	r2, r4
 8003640:	6b04      	ldr	r4, [r0, #48]	; 0x30
 8003642:	4322      	orrs	r2, r4
 8003644:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8003646:	071a      	lsls	r2, r3, #28
 8003648:	d506      	bpl.n	8003658 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800364a:	6801      	ldr	r1, [r0, #0]
 800364c:	4c1d      	ldr	r4, [pc, #116]	; (80036c4 <UART_AdvFeatureConfig+0xb8>)
 800364e:	684a      	ldr	r2, [r1, #4]
 8003650:	4022      	ands	r2, r4
 8003652:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003654:	4322      	orrs	r2, r4
 8003656:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003658:	06da      	lsls	r2, r3, #27
 800365a:	d506      	bpl.n	800366a <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800365c:	6801      	ldr	r1, [r0, #0]
 800365e:	4c1a      	ldr	r4, [pc, #104]	; (80036c8 <UART_AdvFeatureConfig+0xbc>)
 8003660:	688a      	ldr	r2, [r1, #8]
 8003662:	4022      	ands	r2, r4
 8003664:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8003666:	4322      	orrs	r2, r4
 8003668:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800366a:	069a      	lsls	r2, r3, #26
 800366c:	d506      	bpl.n	800367c <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800366e:	6801      	ldr	r1, [r0, #0]
 8003670:	4c16      	ldr	r4, [pc, #88]	; (80036cc <UART_AdvFeatureConfig+0xc0>)
 8003672:	688a      	ldr	r2, [r1, #8]
 8003674:	4022      	ands	r2, r4
 8003676:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003678:	4322      	orrs	r2, r4
 800367a:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800367c:	065a      	lsls	r2, r3, #25
 800367e:	d510      	bpl.n	80036a2 <UART_AdvFeatureConfig+0x96>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003680:	6801      	ldr	r1, [r0, #0]
 8003682:	4d13      	ldr	r5, [pc, #76]	; (80036d0 <UART_AdvFeatureConfig+0xc4>)
 8003684:	684a      	ldr	r2, [r1, #4]
 8003686:	6c04      	ldr	r4, [r0, #64]	; 0x40
 8003688:	402a      	ands	r2, r5
 800368a:	4322      	orrs	r2, r4
 800368c:	604a      	str	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800368e:	2280      	movs	r2, #128	; 0x80
 8003690:	0352      	lsls	r2, r2, #13
 8003692:	4294      	cmp	r4, r2
 8003694:	d105      	bne.n	80036a2 <UART_AdvFeatureConfig+0x96>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003696:	684a      	ldr	r2, [r1, #4]
 8003698:	4c0e      	ldr	r4, [pc, #56]	; (80036d4 <UART_AdvFeatureConfig+0xc8>)
 800369a:	4022      	ands	r2, r4
 800369c:	6c44      	ldr	r4, [r0, #68]	; 0x44
 800369e:	4322      	orrs	r2, r4
 80036a0:	604a      	str	r2, [r1, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80036a2:	061b      	lsls	r3, r3, #24
 80036a4:	d506      	bpl.n	80036b4 <UART_AdvFeatureConfig+0xa8>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80036a6:	6802      	ldr	r2, [r0, #0]
 80036a8:	490b      	ldr	r1, [pc, #44]	; (80036d8 <UART_AdvFeatureConfig+0xcc>)
 80036aa:	6853      	ldr	r3, [r2, #4]
 80036ac:	400b      	ands	r3, r1
 80036ae:	6c81      	ldr	r1, [r0, #72]	; 0x48
 80036b0:	430b      	orrs	r3, r1
 80036b2:	6053      	str	r3, [r2, #4]
  }
}
 80036b4:	bd30      	pop	{r4, r5, pc}
 80036b6:	46c0      	nop			; (mov r8, r8)
 80036b8:	fffdffff 	.word	0xfffdffff
 80036bc:	fffeffff 	.word	0xfffeffff
 80036c0:	fffbffff 	.word	0xfffbffff
 80036c4:	ffff7fff 	.word	0xffff7fff
 80036c8:	ffffefff 	.word	0xffffefff
 80036cc:	ffffdfff 	.word	0xffffdfff
 80036d0:	ffefffff 	.word	0xffefffff
 80036d4:	ff9fffff 	.word	0xff9fffff
 80036d8:	fff7ffff 	.word	0xfff7ffff

080036dc <UART_WaitOnFlagUntilTimeout>:
  * @param Tickstart Tick start value
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 80036dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036de:	0004      	movs	r4, r0
 80036e0:	000e      	movs	r6, r1
 80036e2:	0015      	movs	r5, r2
 80036e4:	001f      	movs	r7, r3
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80036e6:	6822      	ldr	r2, [r4, #0]
 80036e8:	69d3      	ldr	r3, [r2, #28]
 80036ea:	4033      	ands	r3, r6
 80036ec:	1b9b      	subs	r3, r3, r6
 80036ee:	4259      	negs	r1, r3
 80036f0:	414b      	adcs	r3, r1
 80036f2:	42ab      	cmp	r3, r5
 80036f4:	d001      	beq.n	80036fa <UART_WaitOnFlagUntilTimeout+0x1e>

        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 80036f6:	2000      	movs	r0, #0
 80036f8:	e01b      	b.n	8003732 <UART_WaitOnFlagUntilTimeout+0x56>
    if (Timeout != HAL_MAX_DELAY)
 80036fa:	9b06      	ldr	r3, [sp, #24]
 80036fc:	3301      	adds	r3, #1
 80036fe:	d0f3      	beq.n	80036e8 <UART_WaitOnFlagUntilTimeout+0xc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003700:	f7fe ff70 	bl	80025e4 <HAL_GetTick>
 8003704:	9b06      	ldr	r3, [sp, #24]
 8003706:	1bc0      	subs	r0, r0, r7
 8003708:	4283      	cmp	r3, r0
 800370a:	d301      	bcc.n	8003710 <UART_WaitOnFlagUntilTimeout+0x34>
 800370c:	2b00      	cmp	r3, #0
 800370e:	d1ea      	bne.n	80036e6 <UART_WaitOnFlagUntilTimeout+0xa>
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003710:	6823      	ldr	r3, [r4, #0]
 8003712:	4908      	ldr	r1, [pc, #32]	; (8003734 <UART_WaitOnFlagUntilTimeout+0x58>)
 8003714:	681a      	ldr	r2, [r3, #0]
        __HAL_UNLOCK(huart);
 8003716:	2003      	movs	r0, #3
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003718:	400a      	ands	r2, r1
 800371a:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800371c:	689a      	ldr	r2, [r3, #8]
 800371e:	31a3      	adds	r1, #163	; 0xa3
 8003720:	31ff      	adds	r1, #255	; 0xff
 8003722:	438a      	bics	r2, r1
 8003724:	609a      	str	r2, [r3, #8]
        huart->gState = HAL_UART_STATE_READY;
 8003726:	2320      	movs	r3, #32
 8003728:	6763      	str	r3, [r4, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 800372a:	67a3      	str	r3, [r4, #120]	; 0x78
        __HAL_UNLOCK(huart);
 800372c:	2300      	movs	r3, #0
 800372e:	3470      	adds	r4, #112	; 0x70
 8003730:	7023      	strb	r3, [r4, #0]
}
 8003732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003734:	fffffe5f 	.word	0xfffffe5f

08003738 <HAL_UART_Transmit>:
{
 8003738:	b5f0      	push	{r4, r5, r6, r7, lr}
 800373a:	b087      	sub	sp, #28
 800373c:	9305      	str	r3, [sp, #20]
  if (huart->gState == HAL_UART_STATE_READY)
 800373e:	6f43      	ldr	r3, [r0, #116]	; 0x74
{
 8003740:	0004      	movs	r4, r0
 8003742:	000d      	movs	r5, r1
 8003744:	0017      	movs	r7, r2
    return HAL_BUSY;
 8003746:	2002      	movs	r0, #2
  if (huart->gState == HAL_UART_STATE_READY)
 8003748:	2b20      	cmp	r3, #32
 800374a:	d149      	bne.n	80037e0 <HAL_UART_Transmit+0xa8>
      return  HAL_ERROR;
 800374c:	3801      	subs	r0, #1
    if ((pData == NULL) || (Size == 0U))
 800374e:	2900      	cmp	r1, #0
 8003750:	d046      	beq.n	80037e0 <HAL_UART_Transmit+0xa8>
 8003752:	2a00      	cmp	r2, #0
 8003754:	d044      	beq.n	80037e0 <HAL_UART_Transmit+0xa8>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003756:	2380      	movs	r3, #128	; 0x80
 8003758:	68a2      	ldr	r2, [r4, #8]
 800375a:	015b      	lsls	r3, r3, #5
 800375c:	429a      	cmp	r2, r3
 800375e:	d104      	bne.n	800376a <HAL_UART_Transmit+0x32>
 8003760:	6923      	ldr	r3, [r4, #16]
 8003762:	2b00      	cmp	r3, #0
 8003764:	d101      	bne.n	800376a <HAL_UART_Transmit+0x32>
      if ((((uint32_t)pData) & 1) != 0)
 8003766:	4201      	tst	r1, r0
 8003768:	d13a      	bne.n	80037e0 <HAL_UART_Transmit+0xa8>
    __HAL_LOCK(huart);
 800376a:	0023      	movs	r3, r4
 800376c:	3370      	adds	r3, #112	; 0x70
 800376e:	781a      	ldrb	r2, [r3, #0]
    return HAL_BUSY;
 8003770:	2002      	movs	r0, #2
    __HAL_LOCK(huart);
 8003772:	2a01      	cmp	r2, #1
 8003774:	d034      	beq.n	80037e0 <HAL_UART_Transmit+0xa8>
 8003776:	2201      	movs	r2, #1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003778:	2600      	movs	r6, #0
    __HAL_LOCK(huart);
 800377a:	701a      	strb	r2, [r3, #0]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800377c:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800377e:	67e6      	str	r6, [r4, #124]	; 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003780:	6763      	str	r3, [r4, #116]	; 0x74
    tickstart = HAL_GetTick();
 8003782:	f7fe ff2f 	bl	80025e4 <HAL_GetTick>
    huart->TxXferSize  = Size;
 8003786:	0023      	movs	r3, r4
 8003788:	3350      	adds	r3, #80	; 0x50
 800378a:	801f      	strh	r7, [r3, #0]
    huart->TxXferCount = Size;
 800378c:	3302      	adds	r3, #2
 800378e:	9303      	str	r3, [sp, #12]
 8003790:	801f      	strh	r7, [r3, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003792:	2380      	movs	r3, #128	; 0x80
 8003794:	68a2      	ldr	r2, [r4, #8]
    tickstart = HAL_GetTick();
 8003796:	9004      	str	r0, [sp, #16]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003798:	015b      	lsls	r3, r3, #5
 800379a:	429a      	cmp	r2, r3
 800379c:	d104      	bne.n	80037a8 <HAL_UART_Transmit+0x70>
 800379e:	6923      	ldr	r3, [r4, #16]
 80037a0:	42b3      	cmp	r3, r6
 80037a2:	d101      	bne.n	80037a8 <HAL_UART_Transmit+0x70>
 80037a4:	002e      	movs	r6, r5
      pdata8bits  = NULL;
 80037a6:	001d      	movs	r5, r3
    while (huart->TxXferCount > 0U)
 80037a8:	0023      	movs	r3, r4
 80037aa:	3352      	adds	r3, #82	; 0x52
 80037ac:	881a      	ldrh	r2, [r3, #0]
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80037ae:	9b05      	ldr	r3, [sp, #20]
    while (huart->TxXferCount > 0U)
 80037b0:	b292      	uxth	r2, r2
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80037b2:	9300      	str	r3, [sp, #0]
 80037b4:	9b04      	ldr	r3, [sp, #16]
    while (huart->TxXferCount > 0U)
 80037b6:	2a00      	cmp	r2, #0
 80037b8:	d10a      	bne.n	80037d0 <HAL_UART_Transmit+0x98>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80037ba:	2140      	movs	r1, #64	; 0x40
 80037bc:	0020      	movs	r0, r4
 80037be:	f7ff ff8d 	bl	80036dc <UART_WaitOnFlagUntilTimeout>
 80037c2:	2800      	cmp	r0, #0
 80037c4:	d10b      	bne.n	80037de <HAL_UART_Transmit+0xa6>
    huart->gState = HAL_UART_STATE_READY;
 80037c6:	2320      	movs	r3, #32
    __HAL_UNLOCK(huart);
 80037c8:	3470      	adds	r4, #112	; 0x70
    huart->gState = HAL_UART_STATE_READY;
 80037ca:	6063      	str	r3, [r4, #4]
    __HAL_UNLOCK(huart);
 80037cc:	7020      	strb	r0, [r4, #0]
    return HAL_OK;
 80037ce:	e007      	b.n	80037e0 <HAL_UART_Transmit+0xa8>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80037d0:	2200      	movs	r2, #0
 80037d2:	2180      	movs	r1, #128	; 0x80
 80037d4:	0020      	movs	r0, r4
 80037d6:	f7ff ff81 	bl	80036dc <UART_WaitOnFlagUntilTimeout>
 80037da:	2800      	cmp	r0, #0
 80037dc:	d002      	beq.n	80037e4 <HAL_UART_Transmit+0xac>
        return HAL_TIMEOUT;
 80037de:	2003      	movs	r0, #3
}
 80037e0:	b007      	add	sp, #28
 80037e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037e4:	6822      	ldr	r2, [r4, #0]
      if (pdata8bits == NULL)
 80037e6:	2d00      	cmp	r5, #0
 80037e8:	d10b      	bne.n	8003802 <HAL_UART_Transmit+0xca>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80037ea:	8833      	ldrh	r3, [r6, #0]
        pdata16bits++;
 80037ec:	3602      	adds	r6, #2
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80037ee:	05db      	lsls	r3, r3, #23
 80037f0:	0ddb      	lsrs	r3, r3, #23
 80037f2:	6293      	str	r3, [r2, #40]	; 0x28
      huart->TxXferCount--;
 80037f4:	9b03      	ldr	r3, [sp, #12]
 80037f6:	9a03      	ldr	r2, [sp, #12]
 80037f8:	881b      	ldrh	r3, [r3, #0]
 80037fa:	3b01      	subs	r3, #1
 80037fc:	b29b      	uxth	r3, r3
 80037fe:	8013      	strh	r3, [r2, #0]
 8003800:	e7d2      	b.n	80037a8 <HAL_UART_Transmit+0x70>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003802:	782b      	ldrb	r3, [r5, #0]
        pdata8bits++;
 8003804:	3501      	adds	r5, #1
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8003806:	6293      	str	r3, [r2, #40]	; 0x28
 8003808:	e7f4      	b.n	80037f4 <HAL_UART_Transmit+0xbc>
	...

0800380c <UART_CheckIdleState>:
{
 800380c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800380e:	2600      	movs	r6, #0
{
 8003810:	0004      	movs	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003812:	67c6      	str	r6, [r0, #124]	; 0x7c
  tickstart = HAL_GetTick();
 8003814:	f7fe fee6 	bl	80025e4 <HAL_GetTick>
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003818:	6823      	ldr	r3, [r4, #0]
  tickstart = HAL_GetTick();
 800381a:	0005      	movs	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	071b      	lsls	r3, r3, #28
 8003820:	d415      	bmi.n	800384e <UART_CheckIdleState+0x42>
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8003822:	6823      	ldr	r3, [r4, #0]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	075b      	lsls	r3, r3, #29
 8003828:	d50a      	bpl.n	8003840 <UART_CheckIdleState+0x34>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800382a:	2180      	movs	r1, #128	; 0x80
 800382c:	4b0e      	ldr	r3, [pc, #56]	; (8003868 <UART_CheckIdleState+0x5c>)
 800382e:	2200      	movs	r2, #0
 8003830:	9300      	str	r3, [sp, #0]
 8003832:	03c9      	lsls	r1, r1, #15
 8003834:	002b      	movs	r3, r5
 8003836:	0020      	movs	r0, r4
 8003838:	f7ff ff50 	bl	80036dc <UART_WaitOnFlagUntilTimeout>
 800383c:	2800      	cmp	r0, #0
 800383e:	d111      	bne.n	8003864 <UART_CheckIdleState+0x58>
  huart->gState = HAL_UART_STATE_READY;
 8003840:	2320      	movs	r3, #32
  __HAL_UNLOCK(huart);
 8003842:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8003844:	6763      	str	r3, [r4, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8003846:	67a3      	str	r3, [r4, #120]	; 0x78
  __HAL_UNLOCK(huart);
 8003848:	3470      	adds	r4, #112	; 0x70
 800384a:	7020      	strb	r0, [r4, #0]
  return HAL_OK;
 800384c:	e00b      	b.n	8003866 <UART_CheckIdleState+0x5a>
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800384e:	2180      	movs	r1, #128	; 0x80
 8003850:	4b05      	ldr	r3, [pc, #20]	; (8003868 <UART_CheckIdleState+0x5c>)
 8003852:	0032      	movs	r2, r6
 8003854:	9300      	str	r3, [sp, #0]
 8003856:	0389      	lsls	r1, r1, #14
 8003858:	0003      	movs	r3, r0
 800385a:	0020      	movs	r0, r4
 800385c:	f7ff ff3e 	bl	80036dc <UART_WaitOnFlagUntilTimeout>
 8003860:	2800      	cmp	r0, #0
 8003862:	d0de      	beq.n	8003822 <UART_CheckIdleState+0x16>
      return HAL_TIMEOUT;
 8003864:	2003      	movs	r0, #3
}
 8003866:	bd76      	pop	{r1, r2, r4, r5, r6, pc}
 8003868:	01ffffff 	.word	0x01ffffff

0800386c <HAL_UART_Init>:
{
 800386c:	b510      	push	{r4, lr}
 800386e:	1e04      	subs	r4, r0, #0
  if (huart == NULL)
 8003870:	d101      	bne.n	8003876 <HAL_UART_Init+0xa>
    return HAL_ERROR;
 8003872:	2001      	movs	r0, #1
}
 8003874:	bd10      	pop	{r4, pc}
  if (huart->gState == HAL_UART_STATE_RESET)
 8003876:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8003878:	2b00      	cmp	r3, #0
 800387a:	d104      	bne.n	8003886 <HAL_UART_Init+0x1a>
    huart->Lock = HAL_UNLOCKED;
 800387c:	0002      	movs	r2, r0
 800387e:	3270      	adds	r2, #112	; 0x70
 8003880:	7013      	strb	r3, [r2, #0]
    HAL_UART_MspInit(huart);
 8003882:	f000 fa3b 	bl	8003cfc <HAL_UART_MspInit>
  huart->gState = HAL_UART_STATE_BUSY;
 8003886:	2324      	movs	r3, #36	; 0x24
  __HAL_UART_DISABLE(huart);
 8003888:	2101      	movs	r1, #1
 800388a:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800388c:	6763      	str	r3, [r4, #116]	; 0x74
  __HAL_UART_DISABLE(huart);
 800388e:	6813      	ldr	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003890:	0020      	movs	r0, r4
  __HAL_UART_DISABLE(huart);
 8003892:	438b      	bics	r3, r1
 8003894:	6013      	str	r3, [r2, #0]
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003896:	f7ff fd87 	bl	80033a8 <UART_SetConfig>
 800389a:	2801      	cmp	r0, #1
 800389c:	d0e9      	beq.n	8003872 <HAL_UART_Init+0x6>
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800389e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	d002      	beq.n	80038aa <HAL_UART_Init+0x3e>
    UART_AdvFeatureConfig(huart);
 80038a4:	0020      	movs	r0, r4
 80038a6:	f7ff feb1 	bl	800360c <UART_AdvFeatureConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80038aa:	6823      	ldr	r3, [r4, #0]
 80038ac:	4907      	ldr	r1, [pc, #28]	; (80038cc <HAL_UART_Init+0x60>)
 80038ae:	685a      	ldr	r2, [r3, #4]
  return (UART_CheckIdleState(huart));
 80038b0:	0020      	movs	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80038b2:	400a      	ands	r2, r1
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80038b4:	212a      	movs	r1, #42	; 0x2a
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80038b6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80038b8:	689a      	ldr	r2, [r3, #8]
 80038ba:	438a      	bics	r2, r1
 80038bc:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
 80038be:	2201      	movs	r2, #1
 80038c0:	6819      	ldr	r1, [r3, #0]
 80038c2:	430a      	orrs	r2, r1
 80038c4:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
 80038c6:	f7ff ffa1 	bl	800380c <UART_CheckIdleState>
 80038ca:	e7d3      	b.n	8003874 <HAL_UART_Init+0x8>
 80038cc:	ffffb7ff 	.word	0xffffb7ff

080038d0 <gpio_set_input>:
/* USER CODE BEGIN 0 */
GPIO_InitTypeDef GPIO_InitStruct;

void gpio_set_input(void)
{
	GPIO_InitStruct.Pin = GPIO_PIN_15;
 80038d0:	2380      	movs	r3, #128	; 0x80
 80038d2:	4906      	ldr	r1, [pc, #24]	; (80038ec <gpio_set_input+0x1c>)
 80038d4:	021b      	lsls	r3, r3, #8
{
 80038d6:	b510      	push	{r4, lr}
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
	GPIO_InitStruct.Pull = 	GPIO_PULLUP;
	HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 80038d8:	20a0      	movs	r0, #160	; 0xa0
	GPIO_InitStruct.Pin = GPIO_PIN_15;
 80038da:	600b      	str	r3, [r1, #0]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80038dc:	2300      	movs	r3, #0
	HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 80038de:	05c0      	lsls	r0, r0, #23
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80038e0:	604b      	str	r3, [r1, #4]
	GPIO_InitStruct.Pull = 	GPIO_PULLUP;
 80038e2:	3301      	adds	r3, #1
 80038e4:	608b      	str	r3, [r1, #8]
	HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 80038e6:	f7fe fedd 	bl	80026a4 <HAL_GPIO_Init>
}
 80038ea:	bd10      	pop	{r4, pc}
 80038ec:	20000210 	.word	0x20000210

080038f0 <gpio_set_output>:

void gpio_set_output(void)
{
	GPIO_InitStruct.Pin = GPIO_PIN_15;
 80038f0:	2380      	movs	r3, #128	; 0x80
 80038f2:	4907      	ldr	r1, [pc, #28]	; (8003910 <gpio_set_output+0x20>)
 80038f4:	021b      	lsls	r3, r3, #8
{
 80038f6:	b510      	push	{r4, lr}
	GPIO_InitStruct.Pin = GPIO_PIN_15;
 80038f8:	600b      	str	r3, [r1, #0]
		GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80038fa:	2301      	movs	r3, #1
		GPIO_InitStruct.Pull = 	GPIO_NOPULL;
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
		HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 80038fc:	20a0      	movs	r0, #160	; 0xa0
		GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80038fe:	604b      	str	r3, [r1, #4]
		GPIO_InitStruct.Pull = 	GPIO_NOPULL;
 8003900:	2300      	movs	r3, #0
		HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 8003902:	05c0      	lsls	r0, r0, #23
		GPIO_InitStruct.Pull = 	GPIO_NOPULL;
 8003904:	608b      	str	r3, [r1, #8]
		GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003906:	60cb      	str	r3, [r1, #12]
		HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);
 8003908:	f7fe fecc 	bl	80026a4 <HAL_GPIO_Init>
}
 800390c:	bd10      	pop	{r4, pc}
 800390e:	46c0      	nop			; (mov r8, r8)
 8003910:	20000210 	.word	0x20000210

08003914 <delay_us>:
}


void delay_us(uint16_t micros)
{
	__HAL_TIM_SET_COUNTER(&htim2 , 0);
 8003914:	2200      	movs	r2, #0
 8003916:	4b03      	ldr	r3, [pc, #12]	; (8003924 <delay_us+0x10>)
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	625a      	str	r2, [r3, #36]	; 0x24
	while(__HAL_TIM_GET_COUNTER(&htim2)<micros);
 800391c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800391e:	4282      	cmp	r2, r0
 8003920:	d3fc      	bcc.n	800391c <delay_us+0x8>
}
 8003922:	4770      	bx	lr
 8003924:	20000224 	.word	0x20000224

08003928 <write>:
{
 8003928:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
			HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 800392a:	2780      	movs	r7, #128	; 0x80
{
 800392c:	9001      	str	r0, [sp, #4]
	for(int i=0 ; i<8 ; i++)
 800392e:	2400      	movs	r4, #0
	gpio_set_output();
 8003930:	f7ff ffde 	bl	80038f0 <gpio_set_output>
		if((data & (1<<i))!=0)
 8003934:	2601      	movs	r6, #1
			HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 8003936:	023f      	lsls	r7, r7, #8
		if((data & (1<<i))!=0)
 8003938:	9d01      	ldr	r5, [sp, #4]
 800393a:	4125      	asrs	r5, r4
 800393c:	4035      	ands	r5, r6
 800393e:	d013      	beq.n	8003968 <write+0x40>
			gpio_set_output();
 8003940:	f7ff ffd6 	bl	80038f0 <gpio_set_output>
			HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 8003944:	20a0      	movs	r0, #160	; 0xa0
 8003946:	2200      	movs	r2, #0
 8003948:	0039      	movs	r1, r7
 800394a:	05c0      	lsls	r0, r0, #23
 800394c:	f7fe ff6c 	bl	8002828 <HAL_GPIO_WritePin>
			delay_us(1);
 8003950:	0030      	movs	r0, r6
 8003952:	f7ff ffdf 	bl	8003914 <delay_us>
			gpio_set_input();
 8003956:	f7ff ffbb 	bl	80038d0 <gpio_set_input>
			delay_us(60);
 800395a:	203c      	movs	r0, #60	; 0x3c
 800395c:	f7ff ffda 	bl	8003914 <delay_us>
	for(int i=0 ; i<8 ; i++)
 8003960:	3401      	adds	r4, #1
 8003962:	2c08      	cmp	r4, #8
 8003964:	d1e8      	bne.n	8003938 <write+0x10>
}
 8003966:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
			gpio_set_output();
 8003968:	f7ff ffc2 	bl	80038f0 <gpio_set_output>
			HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 800396c:	20a0      	movs	r0, #160	; 0xa0
 800396e:	002a      	movs	r2, r5
 8003970:	0039      	movs	r1, r7
 8003972:	05c0      	lsls	r0, r0, #23
 8003974:	f7fe ff58 	bl	8002828 <HAL_GPIO_WritePin>
			delay_us(60);
 8003978:	203c      	movs	r0, #60	; 0x3c
 800397a:	f7ff ffcb 	bl	8003914 <delay_us>
			gpio_set_input();
 800397e:	f7ff ffa7 	bl	80038d0 <gpio_set_input>
 8003982:	e7ed      	b.n	8003960 <write+0x38>

08003984 <read>:
{
 8003984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	  for(int i=0 ; i<8;i++)
 8003986:	2400      	movs	r4, #0
			  HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 8003988:	2580      	movs	r5, #128	; 0x80
 800398a:	26a0      	movs	r6, #160	; 0xa0
	gpio_set_input();
 800398c:	f7ff ffa0 	bl	80038d0 <gpio_set_input>
	uint8_t value=0;
 8003990:	0027      	movs	r7, r4
			  HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 8003992:	022d      	lsls	r5, r5, #8
 8003994:	05f6      	lsls	r6, r6, #23
		  gpio_set_output();
 8003996:	f7ff ffab 	bl	80038f0 <gpio_set_output>
			  HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 800399a:	0029      	movs	r1, r5
 800399c:	2200      	movs	r2, #0
 800399e:	0030      	movs	r0, r6
 80039a0:	f7fe ff42 	bl	8002828 <HAL_GPIO_WritePin>
			  delay_us(2);
 80039a4:	2002      	movs	r0, #2
 80039a6:	f7ff ffb5 	bl	8003914 <delay_us>
			  gpio_set_input();
 80039aa:	f7ff ff91 	bl	80038d0 <gpio_set_input>
			  if(HAL_GPIO_ReadPin(GPIOA , GPIO_PIN_15))
 80039ae:	0029      	movs	r1, r5
 80039b0:	0030      	movs	r0, r6
 80039b2:	f7fe ff33 	bl	800281c <HAL_GPIO_ReadPin>
 80039b6:	2800      	cmp	r0, #0
 80039b8:	d003      	beq.n	80039c2 <read+0x3e>
				  value |= 1<<i;
 80039ba:	2001      	movs	r0, #1
 80039bc:	40a0      	lsls	r0, r4
 80039be:	4307      	orrs	r7, r0
 80039c0:	b2ff      	uxtb	r7, r7
			  delay_us(60);
 80039c2:	203c      	movs	r0, #60	; 0x3c
	  for(int i=0 ; i<8;i++)
 80039c4:	3401      	adds	r4, #1
			  delay_us(60);
 80039c6:	f7ff ffa5 	bl	8003914 <delay_us>
	  for(int i=0 ; i<8;i++)
 80039ca:	2c08      	cmp	r4, #8
 80039cc:	d1e3      	bne.n	8003996 <read+0x12>
}
 80039ce:	0038      	movs	r0, r7
 80039d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080039d2 <ds18b20_init>:
{
 80039d2:	b510      	push	{r4, lr}
	gpio_set_output();
 80039d4:	f7ff ff8c 	bl	80038f0 <gpio_set_output>
	HAL_GPIO_WritePin(GPIOA , GPIO_PIN_15,0);
 80039d8:	2180      	movs	r1, #128	; 0x80
 80039da:	20a0      	movs	r0, #160	; 0xa0
 80039dc:	2200      	movs	r2, #0
 80039de:	0209      	lsls	r1, r1, #8
 80039e0:	05c0      	lsls	r0, r0, #23
 80039e2:	f7fe ff21 	bl	8002828 <HAL_GPIO_WritePin>
	delay_us(480);
 80039e6:	20f0      	movs	r0, #240	; 0xf0
 80039e8:	0040      	lsls	r0, r0, #1
 80039ea:	f7ff ff93 	bl	8003914 <delay_us>
	gpio_set_input();
 80039ee:	f7ff ff6f 	bl	80038d0 <gpio_set_input>
	delay_us(80);
 80039f2:	2050      	movs	r0, #80	; 0x50
 80039f4:	f7ff ff8e 	bl	8003914 <delay_us>
	if(!(HAL_GPIO_ReadPin(GPIOA , GPIO_PIN_15)))
 80039f8:	2180      	movs	r1, #128	; 0x80
 80039fa:	20a0      	movs	r0, #160	; 0xa0
 80039fc:	0209      	lsls	r1, r1, #8
 80039fe:	05c0      	lsls	r0, r0, #23
 8003a00:	f7fe ff0c 	bl	800281c <HAL_GPIO_ReadPin>
 8003a04:	0004      	movs	r4, r0
		 delay_us(400);
 8003a06:	20c8      	movs	r0, #200	; 0xc8
 8003a08:	0040      	lsls	r0, r0, #1
	if(!(HAL_GPIO_ReadPin(GPIOA , GPIO_PIN_15)))
 8003a0a:	2c00      	cmp	r4, #0
 8003a0c:	d103      	bne.n	8003a16 <ds18b20_init+0x44>
		 delay_us(400);
 8003a0e:	f7ff ff81 	bl	8003914 <delay_us>
		  return 0;
 8003a12:	0020      	movs	r0, r4
}
 8003a14:	bd10      	pop	{r4, pc}
		  delay_us(400);
 8003a16:	f7ff ff7d 	bl	8003914 <delay_us>
		  return 1;
 8003a1a:	2001      	movs	r0, #1
 8003a1c:	e7fa      	b.n	8003a14 <ds18b20_init+0x42>
	...

08003a20 <print>:

void print(char* format , ...)
{
 8003a20:	b40f      	push	{r0, r1, r2, r3}
 8003a22:	b500      	push	{lr}
 8003a24:	b097      	sub	sp, #92	; 0x5c
 8003a26:	aa18      	add	r2, sp, #96	; 0x60
 8003a28:	ca02      	ldmia	r2!, {r1}
	char str[80];

	va_list args;

	va_start(args , format);
	vsprintf(str,format,args);
 8003a2a:	a802      	add	r0, sp, #8
	va_start(args , format);
 8003a2c:	9201      	str	r2, [sp, #4]
	vsprintf(str,format,args);
 8003a2e:	f000 fec7 	bl	80047c0 <vsiprintf>
	HAL_UART_Transmit(&huart2 , (uint8_t*)str , strlen(str),HAL_MAX_DELAY);
 8003a32:	a802      	add	r0, sp, #8
 8003a34:	f7fc fb68 	bl	8000108 <strlen>
 8003a38:	2301      	movs	r3, #1
 8003a3a:	b282      	uxth	r2, r0
 8003a3c:	425b      	negs	r3, r3
 8003a3e:	a902      	add	r1, sp, #8
 8003a40:	4803      	ldr	r0, [pc, #12]	; (8003a50 <print+0x30>)
 8003a42:	f7ff fe79 	bl	8003738 <HAL_UART_Transmit>

	va_end(args);
}
 8003a46:	b017      	add	sp, #92	; 0x5c
 8003a48:	bc08      	pop	{r3}
 8003a4a:	b004      	add	sp, #16
 8003a4c:	4718      	bx	r3
 8003a4e:	46c0      	nop			; (mov r8, r8)
 8003a50:	20000260 	.word	0x20000260

08003a54 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003a54:	b530      	push	{r4, r5, lr}
 8003a56:	b09f      	sub	sp, #124	; 0x7c
	  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003a58:	2238      	movs	r2, #56	; 0x38
 8003a5a:	2100      	movs	r1, #0
 8003a5c:	a810      	add	r0, sp, #64	; 0x40
 8003a5e:	f000 fa1f 	bl	8003ea0 <memset>
	  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003a62:	2214      	movs	r2, #20
 8003a64:	2100      	movs	r1, #0
 8003a66:	a801      	add	r0, sp, #4
 8003a68:	f000 fa1a 	bl	8003ea0 <memset>
	  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8003a6c:	2228      	movs	r2, #40	; 0x28
 8003a6e:	2100      	movs	r1, #0
 8003a70:	a806      	add	r0, sp, #24
 8003a72:	f000 fa15 	bl	8003ea0 <memset>

	  /** Configure the main internal regulator output voltage
	  */
	  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003a76:	2380      	movs	r3, #128	; 0x80
 8003a78:	4916      	ldr	r1, [pc, #88]	; (8003ad4 <SystemClock_Config+0x80>)
 8003a7a:	4c17      	ldr	r4, [pc, #92]	; (8003ad8 <SystemClock_Config+0x84>)
 8003a7c:	680a      	ldr	r2, [r1, #0]
 8003a7e:	011b      	lsls	r3, r3, #4
 8003a80:	4022      	ands	r2, r4
 8003a82:	4313      	orrs	r3, r2
 8003a84:	600b      	str	r3, [r1, #0]
	  /** Configure LSE Drive Capability
	  */
	  HAL_PWR_EnableBkUpAccess();
 8003a86:	f7fe fed5 	bl	8002834 <HAL_PWR_EnableBkUpAccess>
	  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8003a8a:	4a14      	ldr	r2, [pc, #80]	; (8003adc <SystemClock_Config+0x88>)
	  /** Initializes the CPU, AHB and APB busses clocks
	  */
	  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
	  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003a8c:	2580      	movs	r5, #128	; 0x80
	  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8003a8e:	6d13      	ldr	r3, [r2, #80]	; 0x50
	  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003a90:	026d      	lsls	r5, r5, #9
	  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8003a92:	4023      	ands	r3, r4
 8003a94:	6513      	str	r3, [r2, #80]	; 0x50
	  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 8003a96:	2305      	movs	r3, #5
	  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
	  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8003a98:	2400      	movs	r4, #0
	  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 8003a9a:	9310      	str	r3, [sp, #64]	; 0x40
	  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003a9c:	a810      	add	r0, sp, #64	; 0x40
	  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8003a9e:	33fb      	adds	r3, #251	; 0xfb
 8003aa0:	9312      	str	r3, [sp, #72]	; 0x48
	  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8003aa2:	9511      	str	r5, [sp, #68]	; 0x44
	  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8003aa4:	941a      	str	r4, [sp, #104]	; 0x68
	  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003aa6:	f7fe ff0b 	bl	80028c0 <HAL_RCC_OscConfig>
	  {
	    Error_Handler();
	  }
	  /** Initializes the CPU, AHB and APB busses clocks
	  */
	  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003aaa:	230f      	movs	r3, #15
	  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
	  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
	  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
	  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

	  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003aac:	0021      	movs	r1, r4
	  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003aae:	9301      	str	r3, [sp, #4]
	  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003ab0:	a801      	add	r0, sp, #4
	  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8003ab2:	3b0d      	subs	r3, #13
 8003ab4:	9302      	str	r3, [sp, #8]
	  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003ab6:	9403      	str	r4, [sp, #12]
	  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003ab8:	9404      	str	r4, [sp, #16]
	  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003aba:	9405      	str	r4, [sp, #20]
	  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8003abc:	f7ff f98c 	bl	8002dd8 <HAL_RCC_ClockConfig>
	  {
	    Error_Handler();
	  }
	  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 8003ac0:	2323      	movs	r3, #35	; 0x23
	                              |RCC_PERIPHCLK_RTC;
	  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
	  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
	  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
	  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003ac2:	a806      	add	r0, sp, #24
	  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 8003ac4:	9306      	str	r3, [sp, #24]
	  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8003ac6:	9409      	str	r4, [sp, #36]	; 0x24
	  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8003ac8:	940a      	str	r4, [sp, #40]	; 0x28
	  PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 8003aca:	9507      	str	r5, [sp, #28]
	  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003acc:	f7ff fa5c 	bl	8002f88 <HAL_RCCEx_PeriphCLKConfig>
	  {
	    Error_Handler();
//	    error_handler("\r\n error in PerClkCongf\r\n");
	  }
}
 8003ad0:	b01f      	add	sp, #124	; 0x7c
 8003ad2:	bd30      	pop	{r4, r5, pc}
 8003ad4:	40007000 	.word	0x40007000
 8003ad8:	ffffe7ff 	.word	0xffffe7ff
 8003adc:	40021000 	.word	0x40021000

08003ae0 <SystemClock_Config_HSI>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config_HSI(void)
{
 8003ae0:	b570      	push	{r4, r5, r6, lr}
 8003ae2:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003ae4:	2238      	movs	r2, #56	; 0x38
 8003ae6:	2100      	movs	r1, #0
 8003ae8:	a810      	add	r0, sp, #64	; 0x40
 8003aea:	f000 f9d9 	bl	8003ea0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003aee:	2214      	movs	r2, #20
 8003af0:	2100      	movs	r1, #0
 8003af2:	a801      	add	r0, sp, #4
 8003af4:	f000 f9d4 	bl	8003ea0 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8003af8:	2228      	movs	r2, #40	; 0x28
 8003afa:	2100      	movs	r1, #0
 8003afc:	a806      	add	r0, sp, #24
 8003afe:	f000 f9cf 	bl	8003ea0 <memset>

  /** Configure the main internal regulator output voltage 
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003b02:	4916      	ldr	r1, [pc, #88]	; (8003b5c <SystemClock_Config_HSI+0x7c>)
 8003b04:	4a16      	ldr	r2, [pc, #88]	; (8003b60 <SystemClock_Config_HSI+0x80>)
 8003b06:	680b      	ldr	r3, [r1, #0]
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003b08:	2400      	movs	r4, #0
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003b0a:	401a      	ands	r2, r3
 8003b0c:	2380      	movs	r3, #128	; 0x80
 8003b0e:	011b      	lsls	r3, r3, #4
 8003b10:	4313      	orrs	r3, r2
 8003b12:	600b      	str	r3, [r1, #0]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003b14:	2310      	movs	r3, #16
 8003b16:	9314      	str	r3, [sp, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 8003b18:	2380      	movs	r3, #128	; 0x80
 8003b1a:	02db      	lsls	r3, r3, #11
 8003b1c:	931c      	str	r3, [sp, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8003b1e:	2380      	movs	r3, #128	; 0x80
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003b20:	2502      	movs	r5, #2
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003b22:	2601      	movs	r6, #1
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8003b24:	03db      	lsls	r3, r3, #15
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003b26:	a810      	add	r0, sp, #64	; 0x40
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8003b28:	931d      	str	r3, [sp, #116]	; 0x74
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003b2a:	9510      	str	r5, [sp, #64]	; 0x40
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003b2c:	9613      	str	r6, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003b2e:	951a      	str	r5, [sp, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003b30:	941b      	str	r4, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003b32:	f7fe fec5 	bl	80028c0 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003b36:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003b38:	0031      	movs	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003b3a:	9301      	str	r3, [sp, #4]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003b3c:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003b3e:	3b0c      	subs	r3, #12
 8003b40:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003b42:	9403      	str	r4, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003b44:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003b46:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003b48:	f7ff f946 	bl	8002dd8 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003b4c:	a806      	add	r0, sp, #24
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8003b4e:	9506      	str	r5, [sp, #24]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8003b50:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003b52:	f7ff fa19 	bl	8002f88 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 8003b56:	b01e      	add	sp, #120	; 0x78
 8003b58:	bd70      	pop	{r4, r5, r6, pc}
 8003b5a:	46c0      	nop			; (mov r8, r8)
 8003b5c:	40007000 	.word	0x40007000
 8003b60:	ffffe7ff 	.word	0xffffe7ff

08003b64 <main>:
{
 8003b64:	b530      	push	{r4, r5, lr}
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b66:	2401      	movs	r4, #1
{
 8003b68:	b089      	sub	sp, #36	; 0x24
  HAL_Init();
 8003b6a:	f7fe fd1f 	bl	80025ac <HAL_Init>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b6e:	2580      	movs	r5, #128	; 0x80
  SystemClock_Config();
 8003b70:	f7ff ff70 	bl	8003a54 <SystemClock_Config>
  SystemClock_Config_HSI();
 8003b74:	f7ff ffb4 	bl	8003ae0 <SystemClock_Config_HSI>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003b78:	2214      	movs	r2, #20
 8003b7a:	2100      	movs	r1, #0
 8003b7c:	a803      	add	r0, sp, #12
 8003b7e:	f000 f98f 	bl	8003ea0 <memset>
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b82:	20a0      	movs	r0, #160	; 0xa0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b84:	4b44      	ldr	r3, [pc, #272]	; (8003c98 <main+0x134>)
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b86:	022d      	lsls	r5, r5, #8
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b88:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b8a:	0029      	movs	r1, r5
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b8c:	4322      	orrs	r2, r4
 8003b8e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003b90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b92:	2200      	movs	r2, #0
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b94:	4023      	ands	r3, r4
 8003b96:	9300      	str	r3, [sp, #0]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b98:	05c0      	lsls	r0, r0, #23
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003b9a:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_RESET);
 8003b9c:	f7fe fe44 	bl	8002828 <HAL_GPIO_WritePin>
  /*Configure GPIO pin : PA15 */
  GPIO_InitStruct.Pin = GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003ba0:	20a0      	movs	r0, #160	; 0xa0
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003ba2:	9404      	str	r4, [sp, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003ba4:	2400      	movs	r4, #0
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003ba6:	a903      	add	r1, sp, #12
 8003ba8:	05c0      	lsls	r0, r0, #23
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8003baa:	9503      	str	r5, [sp, #12]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003bac:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003bae:	9406      	str	r4, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003bb0:	f7fe fd78 	bl	80026a4 <HAL_GPIO_Init>
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003bb4:	0021      	movs	r1, r4
 8003bb6:	2210      	movs	r2, #16
 8003bb8:	a803      	add	r0, sp, #12
 8003bba:	f000 f971 	bl	8003ea0 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003bbe:	2208      	movs	r2, #8
 8003bc0:	0021      	movs	r1, r4
 8003bc2:	a801      	add	r0, sp, #4
 8003bc4:	f000 f96c 	bl	8003ea0 <memset>
  htim2.Instance = TIM2;
 8003bc8:	2380      	movs	r3, #128	; 0x80
 8003bca:	4d34      	ldr	r5, [pc, #208]	; (8003c9c <main+0x138>)
 8003bcc:	05db      	lsls	r3, r3, #23
 8003bce:	602b      	str	r3, [r5, #0]
  htim2.Init.Prescaler = 32-1;
 8003bd0:	231f      	movs	r3, #31
 8003bd2:	606b      	str	r3, [r5, #4]
  htim2.Init.Period = 0xffff-1;
 8003bd4:	4b32      	ldr	r3, [pc, #200]	; (8003ca0 <main+0x13c>)
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8003bd6:	0028      	movs	r0, r5
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003bd8:	60ac      	str	r4, [r5, #8]
  htim2.Init.Period = 0xffff-1;
 8003bda:	60eb      	str	r3, [r5, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003bdc:	612c      	str	r4, [r5, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003bde:	616c      	str	r4, [r5, #20]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8003be0:	f7ff faf4 	bl	80031cc <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003be4:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8003be6:	a903      	add	r1, sp, #12
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003be8:	015b      	lsls	r3, r3, #5
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8003bea:	0028      	movs	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003bec:	9303      	str	r3, [sp, #12]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8003bee:	f7ff fb1b 	bl	8003228 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003bf2:	a901      	add	r1, sp, #4
 8003bf4:	0028      	movs	r0, r5
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003bf6:	9401      	str	r4, [sp, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003bf8:	9402      	str	r4, [sp, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8003bfa:	f7ff fbb7 	bl	800336c <HAL_TIMEx_MasterConfigSynchronization>
  huart2.Instance = USART2;
 8003bfe:	4829      	ldr	r0, [pc, #164]	; (8003ca4 <main+0x140>)
 8003c00:	4b29      	ldr	r3, [pc, #164]	; (8003ca8 <main+0x144>)
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003c02:	6084      	str	r4, [r0, #8]
  huart2.Instance = USART2;
 8003c04:	6003      	str	r3, [r0, #0]
  huart2.Init.BaudRate = 115200;
 8003c06:	23e1      	movs	r3, #225	; 0xe1
 8003c08:	025b      	lsls	r3, r3, #9
 8003c0a:	6043      	str	r3, [r0, #4]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003c0c:	230c      	movs	r3, #12
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003c0e:	60c4      	str	r4, [r0, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8003c10:	6104      	str	r4, [r0, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003c12:	6143      	str	r3, [r0, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003c14:	6184      	str	r4, [r0, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8003c16:	61c4      	str	r4, [r0, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003c18:	6204      	str	r4, [r0, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003c1a:	6244      	str	r4, [r0, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8003c1c:	f7ff fe26 	bl	800386c <HAL_UART_Init>
  HAL_TIM_Base_Start(&htim2);
 8003c20:	0028      	movs	r0, r5
 8003c22:	f7ff faee 	bl	8003202 <HAL_TIM_Base_Start>
		  	  write(0xCC);
 8003c26:	34cc      	adds	r4, #204	; 0xcc
	  SystemClock_Config_HSI();
 8003c28:	f7ff ff5a 	bl	8003ae0 <SystemClock_Config_HSI>
	  check = ds18b20_init ();
 8003c2c:	f7ff fed1 	bl	80039d2 <ds18b20_init>
 8003c30:	4b1e      	ldr	r3, [pc, #120]	; (8003cac <main+0x148>)
 8003c32:	7018      	strb	r0, [r3, #0]
		  	  write(0xCC);
 8003c34:	0020      	movs	r0, r4
 8003c36:	f7ff fe77 	bl	8003928 <write>
		  	  write(0x44);
 8003c3a:	2044      	movs	r0, #68	; 0x44
 8003c3c:	f7ff fe74 	bl	8003928 <write>
		  	  HAL_Delay(800);
 8003c40:	20c8      	movs	r0, #200	; 0xc8
 8003c42:	0080      	lsls	r0, r0, #2
 8003c44:	f7fe fcd4 	bl	80025f0 <HAL_Delay>
		  	  ds18b20_init ();
 8003c48:	f7ff fec3 	bl	80039d2 <ds18b20_init>
			  write(0xCC);
 8003c4c:	0020      	movs	r0, r4
 8003c4e:	f7ff fe6b 	bl	8003928 <write>
			  write(0xBE);
 8003c52:	20be      	movs	r0, #190	; 0xbe
 8003c54:	f7ff fe68 	bl	8003928 <write>
			  temp_l = read();
 8003c58:	f7ff fe94 	bl	8003984 <read>
 8003c5c:	4d14      	ldr	r5, [pc, #80]	; (8003cb0 <main+0x14c>)
 8003c5e:	7028      	strb	r0, [r5, #0]
			  temp_h = read();
 8003c60:	f7ff fe90 	bl	8003984 <read>
 8003c64:	4b13      	ldr	r3, [pc, #76]	; (8003cb4 <main+0x150>)
 8003c66:	7018      	strb	r0, [r3, #0]
		  	  temp = (temp_h<<8)|temp_l;
 8003c68:	0203      	lsls	r3, r0, #8
 8003c6a:	7828      	ldrb	r0, [r5, #0]
 8003c6c:	4318      	orrs	r0, r3
 8003c6e:	4b12      	ldr	r3, [pc, #72]	; (8003cb8 <main+0x154>)
 8003c70:	8018      	strh	r0, [r3, #0]
		  	  temperature = (float)temp/16;
 8003c72:	f7fc fe19 	bl	80008a8 <__aeabi_ui2f>
 8003c76:	21f6      	movs	r1, #246	; 0xf6
 8003c78:	0589      	lsls	r1, r1, #22
 8003c7a:	f7fc fcf5 	bl	8000668 <__aeabi_fmul>
 8003c7e:	4b0f      	ldr	r3, [pc, #60]	; (8003cbc <main+0x158>)
 8003c80:	6018      	str	r0, [r3, #0]
		  	  print("%f\r\n",temperature);
 8003c82:	f7fe fbff 	bl	8002484 <__aeabi_f2d>
 8003c86:	0002      	movs	r2, r0
 8003c88:	000b      	movs	r3, r1
 8003c8a:	480d      	ldr	r0, [pc, #52]	; (8003cc0 <main+0x15c>)
 8003c8c:	f7ff fec8 	bl	8003a20 <print>
		  	SystemClock_Config();
 8003c90:	f7ff fee0 	bl	8003a54 <SystemClock_Config>
 8003c94:	e7c8      	b.n	8003c28 <main+0xc4>
 8003c96:	46c0      	nop			; (mov r8, r8)
 8003c98:	40021000 	.word	0x40021000
 8003c9c:	20000224 	.word	0x20000224
 8003ca0:	0000fffe 	.word	0x0000fffe
 8003ca4:	20000260 	.word	0x20000260
 8003ca8:	40004400 	.word	0x40004400
 8003cac:	20000000 	.word	0x20000000
 8003cb0:	20000204 	.word	0x20000204
 8003cb4:	2000020c 	.word	0x2000020c
 8003cb8:	20000206 	.word	0x20000206
 8003cbc:	20000208 	.word	0x20000208
 8003cc0:	080060d1 	.word	0x080060d1

08003cc4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003cc4:	2201      	movs	r2, #1
 8003cc6:	4b05      	ldr	r3, [pc, #20]	; (8003cdc <HAL_MspInit+0x18>)
 8003cc8:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8003cca:	430a      	orrs	r2, r1
 8003ccc:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8003cce:	2280      	movs	r2, #128	; 0x80
 8003cd0:	6b99      	ldr	r1, [r3, #56]	; 0x38
 8003cd2:	0552      	lsls	r2, r2, #21
 8003cd4:	430a      	orrs	r2, r1
 8003cd6:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003cd8:	4770      	bx	lr
 8003cda:	46c0      	nop			; (mov r8, r8)
 8003cdc:	40021000 	.word	0x40021000

08003ce0 <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8003ce0:	2380      	movs	r3, #128	; 0x80
 8003ce2:	6802      	ldr	r2, [r0, #0]
 8003ce4:	05db      	lsls	r3, r3, #23
 8003ce6:	429a      	cmp	r2, r3
 8003ce8:	d104      	bne.n	8003cf4 <HAL_TIM_Base_MspInit+0x14>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003cea:	2301      	movs	r3, #1
 8003cec:	4a02      	ldr	r2, [pc, #8]	; (8003cf8 <HAL_TIM_Base_MspInit+0x18>)
 8003cee:	6b91      	ldr	r1, [r2, #56]	; 0x38
 8003cf0:	430b      	orrs	r3, r1
 8003cf2:	6393      	str	r3, [r2, #56]	; 0x38
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8003cf4:	4770      	bx	lr
 8003cf6:	46c0      	nop			; (mov r8, r8)
 8003cf8:	40021000 	.word	0x40021000

08003cfc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8003cfc:	b510      	push	{r4, lr}
 8003cfe:	0004      	movs	r4, r0
 8003d00:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003d02:	2214      	movs	r2, #20
 8003d04:	2100      	movs	r1, #0
 8003d06:	a801      	add	r0, sp, #4
 8003d08:	f000 f8ca 	bl	8003ea0 <memset>
  if(huart->Instance==USART2)
 8003d0c:	4b10      	ldr	r3, [pc, #64]	; (8003d50 <HAL_UART_MspInit+0x54>)
 8003d0e:	6822      	ldr	r2, [r4, #0]
 8003d10:	429a      	cmp	r2, r3
 8003d12:	d11a      	bne.n	8003d4a <HAL_UART_MspInit+0x4e>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8003d14:	2280      	movs	r2, #128	; 0x80
 8003d16:	4b0f      	ldr	r3, [pc, #60]	; (8003d54 <HAL_UART_MspInit+0x58>)
 8003d18:	0292      	lsls	r2, r2, #10
 8003d1a:	6b99      	ldr	r1, [r3, #56]	; 0x38
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_USART2;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003d1c:	20a0      	movs	r0, #160	; 0xa0
    __HAL_RCC_USART2_CLK_ENABLE();
 8003d1e:	430a      	orrs	r2, r1
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003d20:	2101      	movs	r1, #1
    __HAL_RCC_USART2_CLK_ENABLE();
 8003d22:	639a      	str	r2, [r3, #56]	; 0x38
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003d24:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003d26:	05c0      	lsls	r0, r0, #23
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003d28:	430a      	orrs	r2, r1
 8003d2a:	62da      	str	r2, [r3, #44]	; 0x2c
 8003d2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d2e:	400b      	ands	r3, r1
 8003d30:	9300      	str	r3, [sp, #0]
 8003d32:	9b00      	ldr	r3, [sp, #0]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8003d34:	230c      	movs	r3, #12
 8003d36:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003d38:	3b0a      	subs	r3, #10
 8003d3a:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003d3c:	185b      	adds	r3, r3, r1
 8003d3e:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Alternate = GPIO_AF4_USART2;
 8003d40:	185b      	adds	r3, r3, r1
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003d42:	a901      	add	r1, sp, #4
    GPIO_InitStruct.Alternate = GPIO_AF4_USART2;
 8003d44:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003d46:	f7fe fcad 	bl	80026a4 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8003d4a:	b006      	add	sp, #24
 8003d4c:	bd10      	pop	{r4, pc}
 8003d4e:	46c0      	nop			; (mov r8, r8)
 8003d50:	40004400 	.word	0x40004400
 8003d54:	40021000 	.word	0x40021000

08003d58 <NMI_Handler>:
 8003d58:	4770      	bx	lr

08003d5a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003d5a:	e7fe      	b.n	8003d5a <HardFault_Handler>

08003d5c <SVC_Handler>:
 8003d5c:	4770      	bx	lr

08003d5e <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003d5e:	4770      	bx	lr

08003d60 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003d60:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003d62:	f7fe fc37 	bl	80025d4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003d66:	bd10      	pop	{r4, pc}

08003d68 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8003d68:	4b0a      	ldr	r3, [pc, #40]	; (8003d94 <_sbrk+0x2c>)
{
 8003d6a:	b510      	push	{r4, lr}
	if (heap_end == 0)
 8003d6c:	6819      	ldr	r1, [r3, #0]
{
 8003d6e:	0002      	movs	r2, r0
	if (heap_end == 0)
 8003d70:	2900      	cmp	r1, #0
 8003d72:	d101      	bne.n	8003d78 <_sbrk+0x10>
		heap_end = &end;
 8003d74:	4908      	ldr	r1, [pc, #32]	; (8003d98 <_sbrk+0x30>)
 8003d76:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8003d78:	4669      	mov	r1, sp
	prev_heap_end = heap_end;
 8003d7a:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8003d7c:	1882      	adds	r2, r0, r2
 8003d7e:	428a      	cmp	r2, r1
 8003d80:	d906      	bls.n	8003d90 <_sbrk+0x28>
	{
//		write(1, "Heap and stack collision\n", 25);
//		abort();
		errno = ENOMEM;
 8003d82:	f000 f863 	bl	8003e4c <__errno>
 8003d86:	230c      	movs	r3, #12
 8003d88:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8003d8a:	2001      	movs	r0, #1
 8003d8c:	4240      	negs	r0, r0
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8003d8e:	bd10      	pop	{r4, pc}
	heap_end += incr;
 8003d90:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8003d92:	e7fc      	b.n	8003d8e <_sbrk+0x26>
 8003d94:	200001f4 	.word	0x200001f4
 8003d98:	200002e4 	.word	0x200002e4

08003d9c <SystemInit>:
  * @retval None
  */
void SystemInit (void)
{
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100U;
 8003d9c:	2280      	movs	r2, #128	; 0x80
 8003d9e:	4b10      	ldr	r3, [pc, #64]	; (8003de0 <SystemInit+0x44>)
 8003da0:	0052      	lsls	r2, r2, #1
 8003da2:	6819      	ldr	r1, [r3, #0]
 8003da4:	430a      	orrs	r2, r1
 8003da6:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t) 0x88FF400CU;
 8003da8:	68da      	ldr	r2, [r3, #12]
 8003daa:	490e      	ldr	r1, [pc, #56]	; (8003de4 <SystemInit+0x48>)
 8003dac:	400a      	ands	r2, r1
 8003dae:	60da      	str	r2, [r3, #12]

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 8003db0:	681a      	ldr	r2, [r3, #0]
 8003db2:	490d      	ldr	r1, [pc, #52]	; (8003de8 <SystemInit+0x4c>)
 8003db4:	400a      	ands	r2, r1

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8003db6:	2101      	movs	r1, #1
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 8003db8:	601a      	str	r2, [r3, #0]
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8003dba:	689a      	ldr	r2, [r3, #8]
 8003dbc:	438a      	bics	r2, r1
 8003dbe:	609a      	str	r2, [r3, #8]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8003dc0:	681a      	ldr	r2, [r3, #0]
 8003dc2:	490a      	ldr	r1, [pc, #40]	; (8003dec <SystemInit+0x50>)
 8003dc4:	400a      	ands	r2, r1
 8003dc6:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFFU;
 8003dc8:	68da      	ldr	r2, [r3, #12]
 8003dca:	4909      	ldr	r1, [pc, #36]	; (8003df0 <SystemInit+0x54>)
 8003dcc:	400a      	ands	r2, r1
 8003dce:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000U;
 8003dd0:	2200      	movs	r2, #0
 8003dd2:	611a      	str	r2, [r3, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003dd4:	2280      	movs	r2, #128	; 0x80
 8003dd6:	4b07      	ldr	r3, [pc, #28]	; (8003df4 <SystemInit+0x58>)
 8003dd8:	0512      	lsls	r2, r2, #20
 8003dda:	609a      	str	r2, [r3, #8]
#endif
}
 8003ddc:	4770      	bx	lr
 8003dde:	46c0      	nop			; (mov r8, r8)
 8003de0:	40021000 	.word	0x40021000
 8003de4:	88ff400c 	.word	0x88ff400c
 8003de8:	fef6fff6 	.word	0xfef6fff6
 8003dec:	fffbffff 	.word	0xfffbffff
 8003df0:	ff02ffff 	.word	0xff02ffff
 8003df4:	e000ed00 	.word	0xe000ed00

08003df8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 8003df8:	480d      	ldr	r0, [pc, #52]	; (8003e30 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 8003dfa:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 8003dfc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8003dfe:	e003      	b.n	8003e08 <LoopCopyDataInit>

08003e00 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8003e00:	4b0c      	ldr	r3, [pc, #48]	; (8003e34 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
 8003e02:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8003e04:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8003e06:	3104      	adds	r1, #4

08003e08 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 8003e08:	480b      	ldr	r0, [pc, #44]	; (8003e38 <LoopForever+0xa>)
  ldr  r3, =_edata
 8003e0a:	4b0c      	ldr	r3, [pc, #48]	; (8003e3c <LoopForever+0xe>)
  adds  r2, r0, r1
 8003e0c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8003e0e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8003e10:	d3f6      	bcc.n	8003e00 <CopyDataInit>
  ldr  r2, =_sbss
 8003e12:	4a0b      	ldr	r2, [pc, #44]	; (8003e40 <LoopForever+0x12>)
  b  LoopFillZerobss
 8003e14:	e002      	b.n	8003e1c <LoopFillZerobss>

08003e16 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 8003e16:	2300      	movs	r3, #0
  str  r3, [r2]
 8003e18:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003e1a:	3204      	adds	r2, #4

08003e1c <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 8003e1c:	4b09      	ldr	r3, [pc, #36]	; (8003e44 <LoopForever+0x16>)
  cmp  r2, r3
 8003e1e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8003e20:	d3f9      	bcc.n	8003e16 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8003e22:	f7ff ffbb 	bl	8003d9c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8003e26:	f000 f817 	bl	8003e58 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003e2a:	f7ff fe9b 	bl	8003b64 <main>

08003e2e <LoopForever>:

LoopForever:
    b LoopForever
 8003e2e:	e7fe      	b.n	8003e2e <LoopForever>
   ldr   r0, =_estack
 8003e30:	20005000 	.word	0x20005000
  ldr  r3, =_sidata
 8003e34:	08006360 	.word	0x08006360
  ldr  r0, =_sdata
 8003e38:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8003e3c:	200001d8 	.word	0x200001d8
  ldr  r2, =_sbss
 8003e40:	200001d8 	.word	0x200001d8
  ldr  r3, = _ebss
 8003e44:	200002e4 	.word	0x200002e4

08003e48 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003e48:	e7fe      	b.n	8003e48 <ADC1_COMP_IRQHandler>
	...

08003e4c <__errno>:
 8003e4c:	4b01      	ldr	r3, [pc, #4]	; (8003e54 <__errno+0x8>)
 8003e4e:	6818      	ldr	r0, [r3, #0]
 8003e50:	4770      	bx	lr
 8003e52:	46c0      	nop			; (mov r8, r8)
 8003e54:	20000008 	.word	0x20000008

08003e58 <__libc_init_array>:
 8003e58:	b570      	push	{r4, r5, r6, lr}
 8003e5a:	2600      	movs	r6, #0
 8003e5c:	4d0c      	ldr	r5, [pc, #48]	; (8003e90 <__libc_init_array+0x38>)
 8003e5e:	4c0d      	ldr	r4, [pc, #52]	; (8003e94 <__libc_init_array+0x3c>)
 8003e60:	1b64      	subs	r4, r4, r5
 8003e62:	10a4      	asrs	r4, r4, #2
 8003e64:	42a6      	cmp	r6, r4
 8003e66:	d109      	bne.n	8003e7c <__libc_init_array+0x24>
 8003e68:	2600      	movs	r6, #0
 8003e6a:	f002 f8bb 	bl	8005fe4 <_init>
 8003e6e:	4d0a      	ldr	r5, [pc, #40]	; (8003e98 <__libc_init_array+0x40>)
 8003e70:	4c0a      	ldr	r4, [pc, #40]	; (8003e9c <__libc_init_array+0x44>)
 8003e72:	1b64      	subs	r4, r4, r5
 8003e74:	10a4      	asrs	r4, r4, #2
 8003e76:	42a6      	cmp	r6, r4
 8003e78:	d105      	bne.n	8003e86 <__libc_init_array+0x2e>
 8003e7a:	bd70      	pop	{r4, r5, r6, pc}
 8003e7c:	00b3      	lsls	r3, r6, #2
 8003e7e:	58eb      	ldr	r3, [r5, r3]
 8003e80:	4798      	blx	r3
 8003e82:	3601      	adds	r6, #1
 8003e84:	e7ee      	b.n	8003e64 <__libc_init_array+0xc>
 8003e86:	00b3      	lsls	r3, r6, #2
 8003e88:	58eb      	ldr	r3, [r5, r3]
 8003e8a:	4798      	blx	r3
 8003e8c:	3601      	adds	r6, #1
 8003e8e:	e7f2      	b.n	8003e76 <__libc_init_array+0x1e>
 8003e90:	08006358 	.word	0x08006358
 8003e94:	08006358 	.word	0x08006358
 8003e98:	08006358 	.word	0x08006358
 8003e9c:	0800635c 	.word	0x0800635c

08003ea0 <memset>:
 8003ea0:	0003      	movs	r3, r0
 8003ea2:	1882      	adds	r2, r0, r2
 8003ea4:	4293      	cmp	r3, r2
 8003ea6:	d100      	bne.n	8003eaa <memset+0xa>
 8003ea8:	4770      	bx	lr
 8003eaa:	7019      	strb	r1, [r3, #0]
 8003eac:	3301      	adds	r3, #1
 8003eae:	e7f9      	b.n	8003ea4 <memset+0x4>

08003eb0 <__cvt>:
 8003eb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003eb2:	b08b      	sub	sp, #44	; 0x2c
 8003eb4:	0014      	movs	r4, r2
 8003eb6:	1e1d      	subs	r5, r3, #0
 8003eb8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003eba:	da53      	bge.n	8003f64 <__cvt+0xb4>
 8003ebc:	2480      	movs	r4, #128	; 0x80
 8003ebe:	0624      	lsls	r4, r4, #24
 8003ec0:	191b      	adds	r3, r3, r4
 8003ec2:	001d      	movs	r5, r3
 8003ec4:	0014      	movs	r4, r2
 8003ec6:	232d      	movs	r3, #45	; 0x2d
 8003ec8:	700b      	strb	r3, [r1, #0]
 8003eca:	2320      	movs	r3, #32
 8003ecc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8003ece:	2203      	movs	r2, #3
 8003ed0:	439e      	bics	r6, r3
 8003ed2:	2e46      	cmp	r6, #70	; 0x46
 8003ed4:	d007      	beq.n	8003ee6 <__cvt+0x36>
 8003ed6:	0033      	movs	r3, r6
 8003ed8:	3b45      	subs	r3, #69	; 0x45
 8003eda:	4259      	negs	r1, r3
 8003edc:	414b      	adcs	r3, r1
 8003ede:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003ee0:	3a01      	subs	r2, #1
 8003ee2:	18cb      	adds	r3, r1, r3
 8003ee4:	9310      	str	r3, [sp, #64]	; 0x40
 8003ee6:	ab09      	add	r3, sp, #36	; 0x24
 8003ee8:	9304      	str	r3, [sp, #16]
 8003eea:	ab08      	add	r3, sp, #32
 8003eec:	9303      	str	r3, [sp, #12]
 8003eee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003ef0:	9200      	str	r2, [sp, #0]
 8003ef2:	9302      	str	r3, [sp, #8]
 8003ef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003ef6:	0022      	movs	r2, r4
 8003ef8:	9301      	str	r3, [sp, #4]
 8003efa:	002b      	movs	r3, r5
 8003efc:	f000 fcf0 	bl	80048e0 <_dtoa_r>
 8003f00:	0007      	movs	r7, r0
 8003f02:	2e47      	cmp	r6, #71	; 0x47
 8003f04:	d102      	bne.n	8003f0c <__cvt+0x5c>
 8003f06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003f08:	07db      	lsls	r3, r3, #31
 8003f0a:	d524      	bpl.n	8003f56 <__cvt+0xa6>
 8003f0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003f0e:	18fb      	adds	r3, r7, r3
 8003f10:	9307      	str	r3, [sp, #28]
 8003f12:	2e46      	cmp	r6, #70	; 0x46
 8003f14:	d114      	bne.n	8003f40 <__cvt+0x90>
 8003f16:	783b      	ldrb	r3, [r7, #0]
 8003f18:	2b30      	cmp	r3, #48	; 0x30
 8003f1a:	d10c      	bne.n	8003f36 <__cvt+0x86>
 8003f1c:	2200      	movs	r2, #0
 8003f1e:	2300      	movs	r3, #0
 8003f20:	0020      	movs	r0, r4
 8003f22:	0029      	movs	r1, r5
 8003f24:	f7fc fa92 	bl	800044c <__aeabi_dcmpeq>
 8003f28:	2800      	cmp	r0, #0
 8003f2a:	d104      	bne.n	8003f36 <__cvt+0x86>
 8003f2c:	2301      	movs	r3, #1
 8003f2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003f30:	1a9b      	subs	r3, r3, r2
 8003f32:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003f34:	6013      	str	r3, [r2, #0]
 8003f36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003f38:	9a07      	ldr	r2, [sp, #28]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	18d3      	adds	r3, r2, r3
 8003f3e:	9307      	str	r3, [sp, #28]
 8003f40:	2200      	movs	r2, #0
 8003f42:	2300      	movs	r3, #0
 8003f44:	0020      	movs	r0, r4
 8003f46:	0029      	movs	r1, r5
 8003f48:	f7fc fa80 	bl	800044c <__aeabi_dcmpeq>
 8003f4c:	2230      	movs	r2, #48	; 0x30
 8003f4e:	2800      	cmp	r0, #0
 8003f50:	d00d      	beq.n	8003f6e <__cvt+0xbe>
 8003f52:	9b07      	ldr	r3, [sp, #28]
 8003f54:	9309      	str	r3, [sp, #36]	; 0x24
 8003f56:	0038      	movs	r0, r7
 8003f58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f5a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003f5c:	1bdb      	subs	r3, r3, r7
 8003f5e:	6013      	str	r3, [r2, #0]
 8003f60:	b00b      	add	sp, #44	; 0x2c
 8003f62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f64:	2300      	movs	r3, #0
 8003f66:	e7af      	b.n	8003ec8 <__cvt+0x18>
 8003f68:	1c59      	adds	r1, r3, #1
 8003f6a:	9109      	str	r1, [sp, #36]	; 0x24
 8003f6c:	701a      	strb	r2, [r3, #0]
 8003f6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f70:	9907      	ldr	r1, [sp, #28]
 8003f72:	4299      	cmp	r1, r3
 8003f74:	d8f8      	bhi.n	8003f68 <__cvt+0xb8>
 8003f76:	e7ee      	b.n	8003f56 <__cvt+0xa6>

08003f78 <__exponent>:
 8003f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f7a:	232b      	movs	r3, #43	; 0x2b
 8003f7c:	b085      	sub	sp, #20
 8003f7e:	0007      	movs	r7, r0
 8003f80:	000c      	movs	r4, r1
 8003f82:	7002      	strb	r2, [r0, #0]
 8003f84:	1c86      	adds	r6, r0, #2
 8003f86:	2900      	cmp	r1, #0
 8003f88:	da01      	bge.n	8003f8e <__exponent+0x16>
 8003f8a:	232d      	movs	r3, #45	; 0x2d
 8003f8c:	424c      	negs	r4, r1
 8003f8e:	707b      	strb	r3, [r7, #1]
 8003f90:	2c09      	cmp	r4, #9
 8003f92:	dd23      	ble.n	8003fdc <__exponent+0x64>
 8003f94:	ab02      	add	r3, sp, #8
 8003f96:	1ddd      	adds	r5, r3, #7
 8003f98:	1e6b      	subs	r3, r5, #1
 8003f9a:	0020      	movs	r0, r4
 8003f9c:	210a      	movs	r1, #10
 8003f9e:	9301      	str	r3, [sp, #4]
 8003fa0:	f7fc fa3e 	bl	8000420 <__aeabi_idivmod>
 8003fa4:	1e6b      	subs	r3, r5, #1
 8003fa6:	3130      	adds	r1, #48	; 0x30
 8003fa8:	7019      	strb	r1, [r3, #0]
 8003faa:	0020      	movs	r0, r4
 8003fac:	210a      	movs	r1, #10
 8003fae:	f7fc f951 	bl	8000254 <__divsi3>
 8003fb2:	0004      	movs	r4, r0
 8003fb4:	2809      	cmp	r0, #9
 8003fb6:	dc0a      	bgt.n	8003fce <__exponent+0x56>
 8003fb8:	3d02      	subs	r5, #2
 8003fba:	3430      	adds	r4, #48	; 0x30
 8003fbc:	702c      	strb	r4, [r5, #0]
 8003fbe:	ab02      	add	r3, sp, #8
 8003fc0:	3307      	adds	r3, #7
 8003fc2:	0030      	movs	r0, r6
 8003fc4:	42ab      	cmp	r3, r5
 8003fc6:	d804      	bhi.n	8003fd2 <__exponent+0x5a>
 8003fc8:	1bc0      	subs	r0, r0, r7
 8003fca:	b005      	add	sp, #20
 8003fcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003fce:	9d01      	ldr	r5, [sp, #4]
 8003fd0:	e7e2      	b.n	8003f98 <__exponent+0x20>
 8003fd2:	782b      	ldrb	r3, [r5, #0]
 8003fd4:	3501      	adds	r5, #1
 8003fd6:	7033      	strb	r3, [r6, #0]
 8003fd8:	3601      	adds	r6, #1
 8003fda:	e7f0      	b.n	8003fbe <__exponent+0x46>
 8003fdc:	2330      	movs	r3, #48	; 0x30
 8003fde:	18e4      	adds	r4, r4, r3
 8003fe0:	7033      	strb	r3, [r6, #0]
 8003fe2:	1cb0      	adds	r0, r6, #2
 8003fe4:	7074      	strb	r4, [r6, #1]
 8003fe6:	e7ef      	b.n	8003fc8 <__exponent+0x50>

08003fe8 <_printf_float>:
 8003fe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003fea:	b095      	sub	sp, #84	; 0x54
 8003fec:	000c      	movs	r4, r1
 8003fee:	920a      	str	r2, [sp, #40]	; 0x28
 8003ff0:	930b      	str	r3, [sp, #44]	; 0x2c
 8003ff2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8003ff4:	9009      	str	r0, [sp, #36]	; 0x24
 8003ff6:	f001 fa5b 	bl	80054b0 <_localeconv_r>
 8003ffa:	6803      	ldr	r3, [r0, #0]
 8003ffc:	0018      	movs	r0, r3
 8003ffe:	930d      	str	r3, [sp, #52]	; 0x34
 8004000:	f7fc f882 	bl	8000108 <strlen>
 8004004:	2300      	movs	r3, #0
 8004006:	9312      	str	r3, [sp, #72]	; 0x48
 8004008:	6823      	ldr	r3, [r4, #0]
 800400a:	900e      	str	r0, [sp, #56]	; 0x38
 800400c:	930c      	str	r3, [sp, #48]	; 0x30
 800400e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004010:	7e27      	ldrb	r7, [r4, #24]
 8004012:	682b      	ldr	r3, [r5, #0]
 8004014:	2207      	movs	r2, #7
 8004016:	05c9      	lsls	r1, r1, #23
 8004018:	d547      	bpl.n	80040aa <_printf_float+0xc2>
 800401a:	189b      	adds	r3, r3, r2
 800401c:	4393      	bics	r3, r2
 800401e:	001a      	movs	r2, r3
 8004020:	3208      	adds	r2, #8
 8004022:	602a      	str	r2, [r5, #0]
 8004024:	681a      	ldr	r2, [r3, #0]
 8004026:	685b      	ldr	r3, [r3, #4]
 8004028:	64a2      	str	r2, [r4, #72]	; 0x48
 800402a:	64e3      	str	r3, [r4, #76]	; 0x4c
 800402c:	2201      	movs	r2, #1
 800402e:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8004030:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 8004032:	006b      	lsls	r3, r5, #1
 8004034:	085b      	lsrs	r3, r3, #1
 8004036:	930f      	str	r3, [sp, #60]	; 0x3c
 8004038:	4252      	negs	r2, r2
 800403a:	4ba7      	ldr	r3, [pc, #668]	; (80042d8 <_printf_float+0x2f0>)
 800403c:	0030      	movs	r0, r6
 800403e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004040:	f7fe f952 	bl	80022e8 <__aeabi_dcmpun>
 8004044:	2800      	cmp	r0, #0
 8004046:	d000      	beq.n	800404a <_printf_float+0x62>
 8004048:	e206      	b.n	8004458 <_printf_float+0x470>
 800404a:	2201      	movs	r2, #1
 800404c:	4ba2      	ldr	r3, [pc, #648]	; (80042d8 <_printf_float+0x2f0>)
 800404e:	4252      	negs	r2, r2
 8004050:	0030      	movs	r0, r6
 8004052:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004054:	f7fc fa0a 	bl	800046c <__aeabi_dcmple>
 8004058:	2800      	cmp	r0, #0
 800405a:	d000      	beq.n	800405e <_printf_float+0x76>
 800405c:	e1fc      	b.n	8004458 <_printf_float+0x470>
 800405e:	2200      	movs	r2, #0
 8004060:	2300      	movs	r3, #0
 8004062:	0030      	movs	r0, r6
 8004064:	0029      	movs	r1, r5
 8004066:	f7fc f9f7 	bl	8000458 <__aeabi_dcmplt>
 800406a:	2800      	cmp	r0, #0
 800406c:	d003      	beq.n	8004076 <_printf_float+0x8e>
 800406e:	0023      	movs	r3, r4
 8004070:	222d      	movs	r2, #45	; 0x2d
 8004072:	3343      	adds	r3, #67	; 0x43
 8004074:	701a      	strb	r2, [r3, #0]
 8004076:	4d99      	ldr	r5, [pc, #612]	; (80042dc <_printf_float+0x2f4>)
 8004078:	2f47      	cmp	r7, #71	; 0x47
 800407a:	d800      	bhi.n	800407e <_printf_float+0x96>
 800407c:	4d98      	ldr	r5, [pc, #608]	; (80042e0 <_printf_float+0x2f8>)
 800407e:	2303      	movs	r3, #3
 8004080:	2600      	movs	r6, #0
 8004082:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004084:	6123      	str	r3, [r4, #16]
 8004086:	3301      	adds	r3, #1
 8004088:	439a      	bics	r2, r3
 800408a:	6022      	str	r2, [r4, #0]
 800408c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800408e:	aa13      	add	r2, sp, #76	; 0x4c
 8004090:	9300      	str	r3, [sp, #0]
 8004092:	0021      	movs	r1, r4
 8004094:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004096:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004098:	f000 f9f2 	bl	8004480 <_printf_common>
 800409c:	1c43      	adds	r3, r0, #1
 800409e:	d000      	beq.n	80040a2 <_printf_float+0xba>
 80040a0:	e09c      	b.n	80041dc <_printf_float+0x1f4>
 80040a2:	2001      	movs	r0, #1
 80040a4:	4240      	negs	r0, r0
 80040a6:	b015      	add	sp, #84	; 0x54
 80040a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80040aa:	3307      	adds	r3, #7
 80040ac:	e7b6      	b.n	800401c <_printf_float+0x34>
 80040ae:	2380      	movs	r3, #128	; 0x80
 80040b0:	6862      	ldr	r2, [r4, #4]
 80040b2:	00db      	lsls	r3, r3, #3
 80040b4:	1c51      	adds	r1, r2, #1
 80040b6:	d145      	bne.n	8004144 <_printf_float+0x15c>
 80040b8:	3207      	adds	r2, #7
 80040ba:	6062      	str	r2, [r4, #4]
 80040bc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80040be:	2100      	movs	r1, #0
 80040c0:	4313      	orrs	r3, r2
 80040c2:	aa12      	add	r2, sp, #72	; 0x48
 80040c4:	9205      	str	r2, [sp, #20]
 80040c6:	aa11      	add	r2, sp, #68	; 0x44
 80040c8:	9203      	str	r2, [sp, #12]
 80040ca:	2223      	movs	r2, #35	; 0x23
 80040cc:	6023      	str	r3, [r4, #0]
 80040ce:	9106      	str	r1, [sp, #24]
 80040d0:	9301      	str	r3, [sp, #4]
 80040d2:	a908      	add	r1, sp, #32
 80040d4:	6863      	ldr	r3, [r4, #4]
 80040d6:	1852      	adds	r2, r2, r1
 80040d8:	9202      	str	r2, [sp, #8]
 80040da:	9300      	str	r3, [sp, #0]
 80040dc:	0032      	movs	r2, r6
 80040de:	002b      	movs	r3, r5
 80040e0:	9704      	str	r7, [sp, #16]
 80040e2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80040e4:	f7ff fee4 	bl	8003eb0 <__cvt>
 80040e8:	2320      	movs	r3, #32
 80040ea:	003a      	movs	r2, r7
 80040ec:	0005      	movs	r5, r0
 80040ee:	439a      	bics	r2, r3
 80040f0:	2a47      	cmp	r2, #71	; 0x47
 80040f2:	d107      	bne.n	8004104 <_printf_float+0x11c>
 80040f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80040f6:	1cda      	adds	r2, r3, #3
 80040f8:	db02      	blt.n	8004100 <_printf_float+0x118>
 80040fa:	6862      	ldr	r2, [r4, #4]
 80040fc:	4293      	cmp	r3, r2
 80040fe:	dd5b      	ble.n	80041b8 <_printf_float+0x1d0>
 8004100:	3f02      	subs	r7, #2
 8004102:	b2ff      	uxtb	r7, r7
 8004104:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004106:	2f65      	cmp	r7, #101	; 0x65
 8004108:	d83b      	bhi.n	8004182 <_printf_float+0x19a>
 800410a:	0020      	movs	r0, r4
 800410c:	3901      	subs	r1, #1
 800410e:	003a      	movs	r2, r7
 8004110:	3050      	adds	r0, #80	; 0x50
 8004112:	9111      	str	r1, [sp, #68]	; 0x44
 8004114:	f7ff ff30 	bl	8003f78 <__exponent>
 8004118:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800411a:	0006      	movs	r6, r0
 800411c:	1883      	adds	r3, r0, r2
 800411e:	6123      	str	r3, [r4, #16]
 8004120:	2a01      	cmp	r2, #1
 8004122:	dc02      	bgt.n	800412a <_printf_float+0x142>
 8004124:	6822      	ldr	r2, [r4, #0]
 8004126:	07d2      	lsls	r2, r2, #31
 8004128:	d501      	bpl.n	800412e <_printf_float+0x146>
 800412a:	3301      	adds	r3, #1
 800412c:	6123      	str	r3, [r4, #16]
 800412e:	2323      	movs	r3, #35	; 0x23
 8004130:	aa08      	add	r2, sp, #32
 8004132:	189b      	adds	r3, r3, r2
 8004134:	781b      	ldrb	r3, [r3, #0]
 8004136:	2b00      	cmp	r3, #0
 8004138:	d0a8      	beq.n	800408c <_printf_float+0xa4>
 800413a:	0023      	movs	r3, r4
 800413c:	222d      	movs	r2, #45	; 0x2d
 800413e:	3343      	adds	r3, #67	; 0x43
 8004140:	701a      	strb	r2, [r3, #0]
 8004142:	e7a3      	b.n	800408c <_printf_float+0xa4>
 8004144:	2f67      	cmp	r7, #103	; 0x67
 8004146:	d001      	beq.n	800414c <_printf_float+0x164>
 8004148:	2f47      	cmp	r7, #71	; 0x47
 800414a:	d1b7      	bne.n	80040bc <_printf_float+0xd4>
 800414c:	2a00      	cmp	r2, #0
 800414e:	d016      	beq.n	800417e <_printf_float+0x196>
 8004150:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004152:	a808      	add	r0, sp, #32
 8004154:	430b      	orrs	r3, r1
 8004156:	2100      	movs	r1, #0
 8004158:	9106      	str	r1, [sp, #24]
 800415a:	a912      	add	r1, sp, #72	; 0x48
 800415c:	9105      	str	r1, [sp, #20]
 800415e:	a911      	add	r1, sp, #68	; 0x44
 8004160:	9103      	str	r1, [sp, #12]
 8004162:	2123      	movs	r1, #35	; 0x23
 8004164:	1809      	adds	r1, r1, r0
 8004166:	6023      	str	r3, [r4, #0]
 8004168:	9301      	str	r3, [sp, #4]
 800416a:	9200      	str	r2, [sp, #0]
 800416c:	002b      	movs	r3, r5
 800416e:	9704      	str	r7, [sp, #16]
 8004170:	9102      	str	r1, [sp, #8]
 8004172:	0032      	movs	r2, r6
 8004174:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004176:	f7ff fe9b 	bl	8003eb0 <__cvt>
 800417a:	0005      	movs	r5, r0
 800417c:	e7ba      	b.n	80040f4 <_printf_float+0x10c>
 800417e:	2201      	movs	r2, #1
 8004180:	e79b      	b.n	80040ba <_printf_float+0xd2>
 8004182:	2f66      	cmp	r7, #102	; 0x66
 8004184:	d119      	bne.n	80041ba <_printf_float+0x1d2>
 8004186:	6863      	ldr	r3, [r4, #4]
 8004188:	2900      	cmp	r1, #0
 800418a:	dd0c      	ble.n	80041a6 <_printf_float+0x1be>
 800418c:	6121      	str	r1, [r4, #16]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d102      	bne.n	8004198 <_printf_float+0x1b0>
 8004192:	6822      	ldr	r2, [r4, #0]
 8004194:	07d2      	lsls	r2, r2, #31
 8004196:	d502      	bpl.n	800419e <_printf_float+0x1b6>
 8004198:	3301      	adds	r3, #1
 800419a:	185b      	adds	r3, r3, r1
 800419c:	6123      	str	r3, [r4, #16]
 800419e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80041a0:	2600      	movs	r6, #0
 80041a2:	65a3      	str	r3, [r4, #88]	; 0x58
 80041a4:	e7c3      	b.n	800412e <_printf_float+0x146>
 80041a6:	2b00      	cmp	r3, #0
 80041a8:	d103      	bne.n	80041b2 <_printf_float+0x1ca>
 80041aa:	2201      	movs	r2, #1
 80041ac:	6821      	ldr	r1, [r4, #0]
 80041ae:	4211      	tst	r1, r2
 80041b0:	d000      	beq.n	80041b4 <_printf_float+0x1cc>
 80041b2:	1c9a      	adds	r2, r3, #2
 80041b4:	6122      	str	r2, [r4, #16]
 80041b6:	e7f2      	b.n	800419e <_printf_float+0x1b6>
 80041b8:	2767      	movs	r7, #103	; 0x67
 80041ba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80041bc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80041be:	4283      	cmp	r3, r0
 80041c0:	db05      	blt.n	80041ce <_printf_float+0x1e6>
 80041c2:	6822      	ldr	r2, [r4, #0]
 80041c4:	6123      	str	r3, [r4, #16]
 80041c6:	07d2      	lsls	r2, r2, #31
 80041c8:	d5e9      	bpl.n	800419e <_printf_float+0x1b6>
 80041ca:	3301      	adds	r3, #1
 80041cc:	e7e6      	b.n	800419c <_printf_float+0x1b4>
 80041ce:	2201      	movs	r2, #1
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	dc01      	bgt.n	80041d8 <_printf_float+0x1f0>
 80041d4:	1892      	adds	r2, r2, r2
 80041d6:	1ad2      	subs	r2, r2, r3
 80041d8:	1812      	adds	r2, r2, r0
 80041da:	e7eb      	b.n	80041b4 <_printf_float+0x1cc>
 80041dc:	6822      	ldr	r2, [r4, #0]
 80041de:	0553      	lsls	r3, r2, #21
 80041e0:	d408      	bmi.n	80041f4 <_printf_float+0x20c>
 80041e2:	6923      	ldr	r3, [r4, #16]
 80041e4:	002a      	movs	r2, r5
 80041e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80041e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80041ea:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80041ec:	47a8      	blx	r5
 80041ee:	1c43      	adds	r3, r0, #1
 80041f0:	d129      	bne.n	8004246 <_printf_float+0x25e>
 80041f2:	e756      	b.n	80040a2 <_printf_float+0xba>
 80041f4:	2f65      	cmp	r7, #101	; 0x65
 80041f6:	d800      	bhi.n	80041fa <_printf_float+0x212>
 80041f8:	e0dc      	b.n	80043b4 <_printf_float+0x3cc>
 80041fa:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80041fc:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80041fe:	2200      	movs	r2, #0
 8004200:	2300      	movs	r3, #0
 8004202:	f7fc f923 	bl	800044c <__aeabi_dcmpeq>
 8004206:	2800      	cmp	r0, #0
 8004208:	d035      	beq.n	8004276 <_printf_float+0x28e>
 800420a:	2301      	movs	r3, #1
 800420c:	4a35      	ldr	r2, [pc, #212]	; (80042e4 <_printf_float+0x2fc>)
 800420e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004210:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004212:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004214:	47a8      	blx	r5
 8004216:	1c43      	adds	r3, r0, #1
 8004218:	d100      	bne.n	800421c <_printf_float+0x234>
 800421a:	e742      	b.n	80040a2 <_printf_float+0xba>
 800421c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800421e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004220:	4293      	cmp	r3, r2
 8004222:	db02      	blt.n	800422a <_printf_float+0x242>
 8004224:	6823      	ldr	r3, [r4, #0]
 8004226:	07db      	lsls	r3, r3, #31
 8004228:	d50d      	bpl.n	8004246 <_printf_float+0x25e>
 800422a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800422c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800422e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004230:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004232:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004234:	47a8      	blx	r5
 8004236:	2500      	movs	r5, #0
 8004238:	1c43      	adds	r3, r0, #1
 800423a:	d100      	bne.n	800423e <_printf_float+0x256>
 800423c:	e731      	b.n	80040a2 <_printf_float+0xba>
 800423e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004240:	3b01      	subs	r3, #1
 8004242:	429d      	cmp	r5, r3
 8004244:	db0b      	blt.n	800425e <_printf_float+0x276>
 8004246:	6823      	ldr	r3, [r4, #0]
 8004248:	2500      	movs	r5, #0
 800424a:	079b      	lsls	r3, r3, #30
 800424c:	d500      	bpl.n	8004250 <_printf_float+0x268>
 800424e:	e0fd      	b.n	800444c <_printf_float+0x464>
 8004250:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004252:	68e0      	ldr	r0, [r4, #12]
 8004254:	4298      	cmp	r0, r3
 8004256:	db00      	blt.n	800425a <_printf_float+0x272>
 8004258:	e725      	b.n	80040a6 <_printf_float+0xbe>
 800425a:	0018      	movs	r0, r3
 800425c:	e723      	b.n	80040a6 <_printf_float+0xbe>
 800425e:	0022      	movs	r2, r4
 8004260:	2301      	movs	r3, #1
 8004262:	321a      	adds	r2, #26
 8004264:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004266:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004268:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800426a:	47b0      	blx	r6
 800426c:	1c43      	adds	r3, r0, #1
 800426e:	d100      	bne.n	8004272 <_printf_float+0x28a>
 8004270:	e717      	b.n	80040a2 <_printf_float+0xba>
 8004272:	3501      	adds	r5, #1
 8004274:	e7e3      	b.n	800423e <_printf_float+0x256>
 8004276:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004278:	2b00      	cmp	r3, #0
 800427a:	dc35      	bgt.n	80042e8 <_printf_float+0x300>
 800427c:	2301      	movs	r3, #1
 800427e:	4a19      	ldr	r2, [pc, #100]	; (80042e4 <_printf_float+0x2fc>)
 8004280:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004282:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004284:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004286:	47b0      	blx	r6
 8004288:	1c43      	adds	r3, r0, #1
 800428a:	d100      	bne.n	800428e <_printf_float+0x2a6>
 800428c:	e709      	b.n	80040a2 <_printf_float+0xba>
 800428e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004290:	2b00      	cmp	r3, #0
 8004292:	d105      	bne.n	80042a0 <_printf_float+0x2b8>
 8004294:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004296:	2b00      	cmp	r3, #0
 8004298:	d102      	bne.n	80042a0 <_printf_float+0x2b8>
 800429a:	6823      	ldr	r3, [r4, #0]
 800429c:	07db      	lsls	r3, r3, #31
 800429e:	d5d2      	bpl.n	8004246 <_printf_float+0x25e>
 80042a0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80042a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80042a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80042a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80042a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042aa:	47b0      	blx	r6
 80042ac:	2600      	movs	r6, #0
 80042ae:	1c43      	adds	r3, r0, #1
 80042b0:	d100      	bne.n	80042b4 <_printf_float+0x2cc>
 80042b2:	e6f6      	b.n	80040a2 <_printf_float+0xba>
 80042b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80042b6:	425b      	negs	r3, r3
 80042b8:	429e      	cmp	r6, r3
 80042ba:	db01      	blt.n	80042c0 <_printf_float+0x2d8>
 80042bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80042be:	e791      	b.n	80041e4 <_printf_float+0x1fc>
 80042c0:	0022      	movs	r2, r4
 80042c2:	2301      	movs	r3, #1
 80042c4:	321a      	adds	r2, #26
 80042c6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80042c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80042ca:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80042cc:	47b8      	blx	r7
 80042ce:	1c43      	adds	r3, r0, #1
 80042d0:	d100      	bne.n	80042d4 <_printf_float+0x2ec>
 80042d2:	e6e6      	b.n	80040a2 <_printf_float+0xba>
 80042d4:	3601      	adds	r6, #1
 80042d6:	e7ed      	b.n	80042b4 <_printf_float+0x2cc>
 80042d8:	7fefffff 	.word	0x7fefffff
 80042dc:	080060fb 	.word	0x080060fb
 80042e0:	080060f7 	.word	0x080060f7
 80042e4:	08006107 	.word	0x08006107
 80042e8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80042ea:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80042ec:	429e      	cmp	r6, r3
 80042ee:	dd00      	ble.n	80042f2 <_printf_float+0x30a>
 80042f0:	001e      	movs	r6, r3
 80042f2:	2e00      	cmp	r6, #0
 80042f4:	dc35      	bgt.n	8004362 <_printf_float+0x37a>
 80042f6:	2300      	movs	r3, #0
 80042f8:	930c      	str	r3, [sp, #48]	; 0x30
 80042fa:	43f3      	mvns	r3, r6
 80042fc:	17db      	asrs	r3, r3, #31
 80042fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8004300:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004302:	6da7      	ldr	r7, [r4, #88]	; 0x58
 8004304:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004306:	4033      	ands	r3, r6
 8004308:	1afb      	subs	r3, r7, r3
 800430a:	429a      	cmp	r2, r3
 800430c:	db32      	blt.n	8004374 <_printf_float+0x38c>
 800430e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004310:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004312:	4293      	cmp	r3, r2
 8004314:	db3c      	blt.n	8004390 <_printf_float+0x3a8>
 8004316:	6823      	ldr	r3, [r4, #0]
 8004318:	07db      	lsls	r3, r3, #31
 800431a:	d439      	bmi.n	8004390 <_printf_float+0x3a8>
 800431c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800431e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004320:	1bf3      	subs	r3, r6, r7
 8004322:	1ab6      	subs	r6, r6, r2
 8004324:	429e      	cmp	r6, r3
 8004326:	dd00      	ble.n	800432a <_printf_float+0x342>
 8004328:	001e      	movs	r6, r3
 800432a:	2e00      	cmp	r6, #0
 800432c:	dc39      	bgt.n	80043a2 <_printf_float+0x3ba>
 800432e:	43f7      	mvns	r7, r6
 8004330:	2500      	movs	r5, #0
 8004332:	17fb      	asrs	r3, r7, #31
 8004334:	930c      	str	r3, [sp, #48]	; 0x30
 8004336:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004338:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800433a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800433c:	1a9b      	subs	r3, r3, r2
 800433e:	0032      	movs	r2, r6
 8004340:	400a      	ands	r2, r1
 8004342:	1a9b      	subs	r3, r3, r2
 8004344:	429d      	cmp	r5, r3
 8004346:	db00      	blt.n	800434a <_printf_float+0x362>
 8004348:	e77d      	b.n	8004246 <_printf_float+0x25e>
 800434a:	0022      	movs	r2, r4
 800434c:	2301      	movs	r3, #1
 800434e:	321a      	adds	r2, #26
 8004350:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004352:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004354:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004356:	47b8      	blx	r7
 8004358:	1c43      	adds	r3, r0, #1
 800435a:	d100      	bne.n	800435e <_printf_float+0x376>
 800435c:	e6a1      	b.n	80040a2 <_printf_float+0xba>
 800435e:	3501      	adds	r5, #1
 8004360:	e7e9      	b.n	8004336 <_printf_float+0x34e>
 8004362:	0033      	movs	r3, r6
 8004364:	002a      	movs	r2, r5
 8004366:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004368:	9809      	ldr	r0, [sp, #36]	; 0x24
 800436a:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 800436c:	47b8      	blx	r7
 800436e:	1c43      	adds	r3, r0, #1
 8004370:	d1c1      	bne.n	80042f6 <_printf_float+0x30e>
 8004372:	e696      	b.n	80040a2 <_printf_float+0xba>
 8004374:	0022      	movs	r2, r4
 8004376:	2301      	movs	r3, #1
 8004378:	321a      	adds	r2, #26
 800437a:	990a      	ldr	r1, [sp, #40]	; 0x28
 800437c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800437e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004380:	47b8      	blx	r7
 8004382:	1c43      	adds	r3, r0, #1
 8004384:	d100      	bne.n	8004388 <_printf_float+0x3a0>
 8004386:	e68c      	b.n	80040a2 <_printf_float+0xba>
 8004388:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800438a:	3301      	adds	r3, #1
 800438c:	930c      	str	r3, [sp, #48]	; 0x30
 800438e:	e7b7      	b.n	8004300 <_printf_float+0x318>
 8004390:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004392:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004394:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004396:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004398:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800439a:	47b0      	blx	r6
 800439c:	1c43      	adds	r3, r0, #1
 800439e:	d1bd      	bne.n	800431c <_printf_float+0x334>
 80043a0:	e67f      	b.n	80040a2 <_printf_float+0xba>
 80043a2:	19ea      	adds	r2, r5, r7
 80043a4:	0033      	movs	r3, r6
 80043a6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043a8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80043ac:	47a8      	blx	r5
 80043ae:	1c43      	adds	r3, r0, #1
 80043b0:	d1bd      	bne.n	800432e <_printf_float+0x346>
 80043b2:	e676      	b.n	80040a2 <_printf_float+0xba>
 80043b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80043b6:	2b01      	cmp	r3, #1
 80043b8:	dc02      	bgt.n	80043c0 <_printf_float+0x3d8>
 80043ba:	2301      	movs	r3, #1
 80043bc:	421a      	tst	r2, r3
 80043be:	d038      	beq.n	8004432 <_printf_float+0x44a>
 80043c0:	2301      	movs	r3, #1
 80043c2:	002a      	movs	r2, r5
 80043c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043c8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80043ca:	47b8      	blx	r7
 80043cc:	1c43      	adds	r3, r0, #1
 80043ce:	d100      	bne.n	80043d2 <_printf_float+0x3ea>
 80043d0:	e667      	b.n	80040a2 <_printf_float+0xba>
 80043d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80043d4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80043d6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80043d8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80043da:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80043dc:	47b8      	blx	r7
 80043de:	1c43      	adds	r3, r0, #1
 80043e0:	d100      	bne.n	80043e4 <_printf_float+0x3fc>
 80043e2:	e65e      	b.n	80040a2 <_printf_float+0xba>
 80043e4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80043e6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80043e8:	2200      	movs	r2, #0
 80043ea:	2300      	movs	r3, #0
 80043ec:	f7fc f82e 	bl	800044c <__aeabi_dcmpeq>
 80043f0:	2800      	cmp	r0, #0
 80043f2:	d008      	beq.n	8004406 <_printf_float+0x41e>
 80043f4:	2500      	movs	r5, #0
 80043f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80043f8:	3b01      	subs	r3, #1
 80043fa:	429d      	cmp	r5, r3
 80043fc:	db0d      	blt.n	800441a <_printf_float+0x432>
 80043fe:	0022      	movs	r2, r4
 8004400:	0033      	movs	r3, r6
 8004402:	3250      	adds	r2, #80	; 0x50
 8004404:	e6ef      	b.n	80041e6 <_printf_float+0x1fe>
 8004406:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004408:	1c6a      	adds	r2, r5, #1
 800440a:	3b01      	subs	r3, #1
 800440c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800440e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004410:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8004412:	47a8      	blx	r5
 8004414:	1c43      	adds	r3, r0, #1
 8004416:	d1f2      	bne.n	80043fe <_printf_float+0x416>
 8004418:	e643      	b.n	80040a2 <_printf_float+0xba>
 800441a:	0022      	movs	r2, r4
 800441c:	2301      	movs	r3, #1
 800441e:	321a      	adds	r2, #26
 8004420:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004422:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004424:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8004426:	47b8      	blx	r7
 8004428:	1c43      	adds	r3, r0, #1
 800442a:	d100      	bne.n	800442e <_printf_float+0x446>
 800442c:	e639      	b.n	80040a2 <_printf_float+0xba>
 800442e:	3501      	adds	r5, #1
 8004430:	e7e1      	b.n	80043f6 <_printf_float+0x40e>
 8004432:	002a      	movs	r2, r5
 8004434:	e7ea      	b.n	800440c <_printf_float+0x424>
 8004436:	0022      	movs	r2, r4
 8004438:	2301      	movs	r3, #1
 800443a:	3219      	adds	r2, #25
 800443c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800443e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004440:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8004442:	47b0      	blx	r6
 8004444:	1c43      	adds	r3, r0, #1
 8004446:	d100      	bne.n	800444a <_printf_float+0x462>
 8004448:	e62b      	b.n	80040a2 <_printf_float+0xba>
 800444a:	3501      	adds	r5, #1
 800444c:	68e3      	ldr	r3, [r4, #12]
 800444e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004450:	1a9b      	subs	r3, r3, r2
 8004452:	429d      	cmp	r5, r3
 8004454:	dbef      	blt.n	8004436 <_printf_float+0x44e>
 8004456:	e6fb      	b.n	8004250 <_printf_float+0x268>
 8004458:	0032      	movs	r2, r6
 800445a:	002b      	movs	r3, r5
 800445c:	0030      	movs	r0, r6
 800445e:	0029      	movs	r1, r5
 8004460:	f7fd ff42 	bl	80022e8 <__aeabi_dcmpun>
 8004464:	2800      	cmp	r0, #0
 8004466:	d100      	bne.n	800446a <_printf_float+0x482>
 8004468:	e621      	b.n	80040ae <_printf_float+0xc6>
 800446a:	4d03      	ldr	r5, [pc, #12]	; (8004478 <_printf_float+0x490>)
 800446c:	2f47      	cmp	r7, #71	; 0x47
 800446e:	d900      	bls.n	8004472 <_printf_float+0x48a>
 8004470:	e605      	b.n	800407e <_printf_float+0x96>
 8004472:	4d02      	ldr	r5, [pc, #8]	; (800447c <_printf_float+0x494>)
 8004474:	e603      	b.n	800407e <_printf_float+0x96>
 8004476:	46c0      	nop			; (mov r8, r8)
 8004478:	08006103 	.word	0x08006103
 800447c:	080060ff 	.word	0x080060ff

08004480 <_printf_common>:
 8004480:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004482:	0015      	movs	r5, r2
 8004484:	9301      	str	r3, [sp, #4]
 8004486:	688a      	ldr	r2, [r1, #8]
 8004488:	690b      	ldr	r3, [r1, #16]
 800448a:	9000      	str	r0, [sp, #0]
 800448c:	000c      	movs	r4, r1
 800448e:	4293      	cmp	r3, r2
 8004490:	da00      	bge.n	8004494 <_printf_common+0x14>
 8004492:	0013      	movs	r3, r2
 8004494:	0022      	movs	r2, r4
 8004496:	602b      	str	r3, [r5, #0]
 8004498:	3243      	adds	r2, #67	; 0x43
 800449a:	7812      	ldrb	r2, [r2, #0]
 800449c:	2a00      	cmp	r2, #0
 800449e:	d001      	beq.n	80044a4 <_printf_common+0x24>
 80044a0:	3301      	adds	r3, #1
 80044a2:	602b      	str	r3, [r5, #0]
 80044a4:	6823      	ldr	r3, [r4, #0]
 80044a6:	069b      	lsls	r3, r3, #26
 80044a8:	d502      	bpl.n	80044b0 <_printf_common+0x30>
 80044aa:	682b      	ldr	r3, [r5, #0]
 80044ac:	3302      	adds	r3, #2
 80044ae:	602b      	str	r3, [r5, #0]
 80044b0:	2706      	movs	r7, #6
 80044b2:	6823      	ldr	r3, [r4, #0]
 80044b4:	401f      	ands	r7, r3
 80044b6:	d027      	beq.n	8004508 <_printf_common+0x88>
 80044b8:	0023      	movs	r3, r4
 80044ba:	3343      	adds	r3, #67	; 0x43
 80044bc:	781b      	ldrb	r3, [r3, #0]
 80044be:	1e5a      	subs	r2, r3, #1
 80044c0:	4193      	sbcs	r3, r2
 80044c2:	6822      	ldr	r2, [r4, #0]
 80044c4:	0692      	lsls	r2, r2, #26
 80044c6:	d430      	bmi.n	800452a <_printf_common+0xaa>
 80044c8:	0022      	movs	r2, r4
 80044ca:	9901      	ldr	r1, [sp, #4]
 80044cc:	3243      	adds	r2, #67	; 0x43
 80044ce:	9800      	ldr	r0, [sp, #0]
 80044d0:	9e08      	ldr	r6, [sp, #32]
 80044d2:	47b0      	blx	r6
 80044d4:	1c43      	adds	r3, r0, #1
 80044d6:	d025      	beq.n	8004524 <_printf_common+0xa4>
 80044d8:	2306      	movs	r3, #6
 80044da:	6820      	ldr	r0, [r4, #0]
 80044dc:	682a      	ldr	r2, [r5, #0]
 80044de:	68e1      	ldr	r1, [r4, #12]
 80044e0:	4003      	ands	r3, r0
 80044e2:	2500      	movs	r5, #0
 80044e4:	2b04      	cmp	r3, #4
 80044e6:	d103      	bne.n	80044f0 <_printf_common+0x70>
 80044e8:	1a8d      	subs	r5, r1, r2
 80044ea:	43eb      	mvns	r3, r5
 80044ec:	17db      	asrs	r3, r3, #31
 80044ee:	401d      	ands	r5, r3
 80044f0:	68a3      	ldr	r3, [r4, #8]
 80044f2:	6922      	ldr	r2, [r4, #16]
 80044f4:	4293      	cmp	r3, r2
 80044f6:	dd01      	ble.n	80044fc <_printf_common+0x7c>
 80044f8:	1a9b      	subs	r3, r3, r2
 80044fa:	18ed      	adds	r5, r5, r3
 80044fc:	2700      	movs	r7, #0
 80044fe:	42bd      	cmp	r5, r7
 8004500:	d120      	bne.n	8004544 <_printf_common+0xc4>
 8004502:	2000      	movs	r0, #0
 8004504:	e010      	b.n	8004528 <_printf_common+0xa8>
 8004506:	3701      	adds	r7, #1
 8004508:	68e3      	ldr	r3, [r4, #12]
 800450a:	682a      	ldr	r2, [r5, #0]
 800450c:	1a9b      	subs	r3, r3, r2
 800450e:	429f      	cmp	r7, r3
 8004510:	dad2      	bge.n	80044b8 <_printf_common+0x38>
 8004512:	0022      	movs	r2, r4
 8004514:	2301      	movs	r3, #1
 8004516:	3219      	adds	r2, #25
 8004518:	9901      	ldr	r1, [sp, #4]
 800451a:	9800      	ldr	r0, [sp, #0]
 800451c:	9e08      	ldr	r6, [sp, #32]
 800451e:	47b0      	blx	r6
 8004520:	1c43      	adds	r3, r0, #1
 8004522:	d1f0      	bne.n	8004506 <_printf_common+0x86>
 8004524:	2001      	movs	r0, #1
 8004526:	4240      	negs	r0, r0
 8004528:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800452a:	2030      	movs	r0, #48	; 0x30
 800452c:	18e1      	adds	r1, r4, r3
 800452e:	3143      	adds	r1, #67	; 0x43
 8004530:	7008      	strb	r0, [r1, #0]
 8004532:	0021      	movs	r1, r4
 8004534:	1c5a      	adds	r2, r3, #1
 8004536:	3145      	adds	r1, #69	; 0x45
 8004538:	7809      	ldrb	r1, [r1, #0]
 800453a:	18a2      	adds	r2, r4, r2
 800453c:	3243      	adds	r2, #67	; 0x43
 800453e:	3302      	adds	r3, #2
 8004540:	7011      	strb	r1, [r2, #0]
 8004542:	e7c1      	b.n	80044c8 <_printf_common+0x48>
 8004544:	0022      	movs	r2, r4
 8004546:	2301      	movs	r3, #1
 8004548:	321a      	adds	r2, #26
 800454a:	9901      	ldr	r1, [sp, #4]
 800454c:	9800      	ldr	r0, [sp, #0]
 800454e:	9e08      	ldr	r6, [sp, #32]
 8004550:	47b0      	blx	r6
 8004552:	1c43      	adds	r3, r0, #1
 8004554:	d0e6      	beq.n	8004524 <_printf_common+0xa4>
 8004556:	3701      	adds	r7, #1
 8004558:	e7d1      	b.n	80044fe <_printf_common+0x7e>
	...

0800455c <_printf_i>:
 800455c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800455e:	b08b      	sub	sp, #44	; 0x2c
 8004560:	9206      	str	r2, [sp, #24]
 8004562:	000a      	movs	r2, r1
 8004564:	3243      	adds	r2, #67	; 0x43
 8004566:	9307      	str	r3, [sp, #28]
 8004568:	9005      	str	r0, [sp, #20]
 800456a:	9204      	str	r2, [sp, #16]
 800456c:	7e0a      	ldrb	r2, [r1, #24]
 800456e:	000c      	movs	r4, r1
 8004570:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004572:	2a6e      	cmp	r2, #110	; 0x6e
 8004574:	d100      	bne.n	8004578 <_printf_i+0x1c>
 8004576:	e08f      	b.n	8004698 <_printf_i+0x13c>
 8004578:	d817      	bhi.n	80045aa <_printf_i+0x4e>
 800457a:	2a63      	cmp	r2, #99	; 0x63
 800457c:	d02c      	beq.n	80045d8 <_printf_i+0x7c>
 800457e:	d808      	bhi.n	8004592 <_printf_i+0x36>
 8004580:	2a00      	cmp	r2, #0
 8004582:	d100      	bne.n	8004586 <_printf_i+0x2a>
 8004584:	e099      	b.n	80046ba <_printf_i+0x15e>
 8004586:	2a58      	cmp	r2, #88	; 0x58
 8004588:	d054      	beq.n	8004634 <_printf_i+0xd8>
 800458a:	0026      	movs	r6, r4
 800458c:	3642      	adds	r6, #66	; 0x42
 800458e:	7032      	strb	r2, [r6, #0]
 8004590:	e029      	b.n	80045e6 <_printf_i+0x8a>
 8004592:	2a64      	cmp	r2, #100	; 0x64
 8004594:	d001      	beq.n	800459a <_printf_i+0x3e>
 8004596:	2a69      	cmp	r2, #105	; 0x69
 8004598:	d1f7      	bne.n	800458a <_printf_i+0x2e>
 800459a:	6821      	ldr	r1, [r4, #0]
 800459c:	681a      	ldr	r2, [r3, #0]
 800459e:	0608      	lsls	r0, r1, #24
 80045a0:	d523      	bpl.n	80045ea <_printf_i+0x8e>
 80045a2:	1d11      	adds	r1, r2, #4
 80045a4:	6019      	str	r1, [r3, #0]
 80045a6:	6815      	ldr	r5, [r2, #0]
 80045a8:	e025      	b.n	80045f6 <_printf_i+0x9a>
 80045aa:	2a73      	cmp	r2, #115	; 0x73
 80045ac:	d100      	bne.n	80045b0 <_printf_i+0x54>
 80045ae:	e088      	b.n	80046c2 <_printf_i+0x166>
 80045b0:	d808      	bhi.n	80045c4 <_printf_i+0x68>
 80045b2:	2a6f      	cmp	r2, #111	; 0x6f
 80045b4:	d029      	beq.n	800460a <_printf_i+0xae>
 80045b6:	2a70      	cmp	r2, #112	; 0x70
 80045b8:	d1e7      	bne.n	800458a <_printf_i+0x2e>
 80045ba:	2220      	movs	r2, #32
 80045bc:	6809      	ldr	r1, [r1, #0]
 80045be:	430a      	orrs	r2, r1
 80045c0:	6022      	str	r2, [r4, #0]
 80045c2:	e003      	b.n	80045cc <_printf_i+0x70>
 80045c4:	2a75      	cmp	r2, #117	; 0x75
 80045c6:	d020      	beq.n	800460a <_printf_i+0xae>
 80045c8:	2a78      	cmp	r2, #120	; 0x78
 80045ca:	d1de      	bne.n	800458a <_printf_i+0x2e>
 80045cc:	0022      	movs	r2, r4
 80045ce:	2178      	movs	r1, #120	; 0x78
 80045d0:	3245      	adds	r2, #69	; 0x45
 80045d2:	7011      	strb	r1, [r2, #0]
 80045d4:	4a6c      	ldr	r2, [pc, #432]	; (8004788 <_printf_i+0x22c>)
 80045d6:	e030      	b.n	800463a <_printf_i+0xde>
 80045d8:	000e      	movs	r6, r1
 80045da:	681a      	ldr	r2, [r3, #0]
 80045dc:	3642      	adds	r6, #66	; 0x42
 80045de:	1d11      	adds	r1, r2, #4
 80045e0:	6019      	str	r1, [r3, #0]
 80045e2:	6813      	ldr	r3, [r2, #0]
 80045e4:	7033      	strb	r3, [r6, #0]
 80045e6:	2301      	movs	r3, #1
 80045e8:	e079      	b.n	80046de <_printf_i+0x182>
 80045ea:	0649      	lsls	r1, r1, #25
 80045ec:	d5d9      	bpl.n	80045a2 <_printf_i+0x46>
 80045ee:	1d11      	adds	r1, r2, #4
 80045f0:	6019      	str	r1, [r3, #0]
 80045f2:	2300      	movs	r3, #0
 80045f4:	5ed5      	ldrsh	r5, [r2, r3]
 80045f6:	2d00      	cmp	r5, #0
 80045f8:	da03      	bge.n	8004602 <_printf_i+0xa6>
 80045fa:	232d      	movs	r3, #45	; 0x2d
 80045fc:	9a04      	ldr	r2, [sp, #16]
 80045fe:	426d      	negs	r5, r5
 8004600:	7013      	strb	r3, [r2, #0]
 8004602:	4b62      	ldr	r3, [pc, #392]	; (800478c <_printf_i+0x230>)
 8004604:	270a      	movs	r7, #10
 8004606:	9303      	str	r3, [sp, #12]
 8004608:	e02f      	b.n	800466a <_printf_i+0x10e>
 800460a:	6820      	ldr	r0, [r4, #0]
 800460c:	6819      	ldr	r1, [r3, #0]
 800460e:	0605      	lsls	r5, r0, #24
 8004610:	d503      	bpl.n	800461a <_printf_i+0xbe>
 8004612:	1d08      	adds	r0, r1, #4
 8004614:	6018      	str	r0, [r3, #0]
 8004616:	680d      	ldr	r5, [r1, #0]
 8004618:	e005      	b.n	8004626 <_printf_i+0xca>
 800461a:	0640      	lsls	r0, r0, #25
 800461c:	d5f9      	bpl.n	8004612 <_printf_i+0xb6>
 800461e:	680d      	ldr	r5, [r1, #0]
 8004620:	1d08      	adds	r0, r1, #4
 8004622:	6018      	str	r0, [r3, #0]
 8004624:	b2ad      	uxth	r5, r5
 8004626:	4b59      	ldr	r3, [pc, #356]	; (800478c <_printf_i+0x230>)
 8004628:	2708      	movs	r7, #8
 800462a:	9303      	str	r3, [sp, #12]
 800462c:	2a6f      	cmp	r2, #111	; 0x6f
 800462e:	d018      	beq.n	8004662 <_printf_i+0x106>
 8004630:	270a      	movs	r7, #10
 8004632:	e016      	b.n	8004662 <_printf_i+0x106>
 8004634:	3145      	adds	r1, #69	; 0x45
 8004636:	700a      	strb	r2, [r1, #0]
 8004638:	4a54      	ldr	r2, [pc, #336]	; (800478c <_printf_i+0x230>)
 800463a:	9203      	str	r2, [sp, #12]
 800463c:	681a      	ldr	r2, [r3, #0]
 800463e:	6821      	ldr	r1, [r4, #0]
 8004640:	1d10      	adds	r0, r2, #4
 8004642:	6018      	str	r0, [r3, #0]
 8004644:	6815      	ldr	r5, [r2, #0]
 8004646:	0608      	lsls	r0, r1, #24
 8004648:	d522      	bpl.n	8004690 <_printf_i+0x134>
 800464a:	07cb      	lsls	r3, r1, #31
 800464c:	d502      	bpl.n	8004654 <_printf_i+0xf8>
 800464e:	2320      	movs	r3, #32
 8004650:	4319      	orrs	r1, r3
 8004652:	6021      	str	r1, [r4, #0]
 8004654:	2710      	movs	r7, #16
 8004656:	2d00      	cmp	r5, #0
 8004658:	d103      	bne.n	8004662 <_printf_i+0x106>
 800465a:	2320      	movs	r3, #32
 800465c:	6822      	ldr	r2, [r4, #0]
 800465e:	439a      	bics	r2, r3
 8004660:	6022      	str	r2, [r4, #0]
 8004662:	0023      	movs	r3, r4
 8004664:	2200      	movs	r2, #0
 8004666:	3343      	adds	r3, #67	; 0x43
 8004668:	701a      	strb	r2, [r3, #0]
 800466a:	6863      	ldr	r3, [r4, #4]
 800466c:	60a3      	str	r3, [r4, #8]
 800466e:	2b00      	cmp	r3, #0
 8004670:	db5c      	blt.n	800472c <_printf_i+0x1d0>
 8004672:	2204      	movs	r2, #4
 8004674:	6821      	ldr	r1, [r4, #0]
 8004676:	4391      	bics	r1, r2
 8004678:	6021      	str	r1, [r4, #0]
 800467a:	2d00      	cmp	r5, #0
 800467c:	d158      	bne.n	8004730 <_printf_i+0x1d4>
 800467e:	9e04      	ldr	r6, [sp, #16]
 8004680:	2b00      	cmp	r3, #0
 8004682:	d064      	beq.n	800474e <_printf_i+0x1f2>
 8004684:	0026      	movs	r6, r4
 8004686:	9b03      	ldr	r3, [sp, #12]
 8004688:	3642      	adds	r6, #66	; 0x42
 800468a:	781b      	ldrb	r3, [r3, #0]
 800468c:	7033      	strb	r3, [r6, #0]
 800468e:	e05e      	b.n	800474e <_printf_i+0x1f2>
 8004690:	0648      	lsls	r0, r1, #25
 8004692:	d5da      	bpl.n	800464a <_printf_i+0xee>
 8004694:	b2ad      	uxth	r5, r5
 8004696:	e7d8      	b.n	800464a <_printf_i+0xee>
 8004698:	6809      	ldr	r1, [r1, #0]
 800469a:	681a      	ldr	r2, [r3, #0]
 800469c:	0608      	lsls	r0, r1, #24
 800469e:	d505      	bpl.n	80046ac <_printf_i+0x150>
 80046a0:	1d11      	adds	r1, r2, #4
 80046a2:	6019      	str	r1, [r3, #0]
 80046a4:	6813      	ldr	r3, [r2, #0]
 80046a6:	6962      	ldr	r2, [r4, #20]
 80046a8:	601a      	str	r2, [r3, #0]
 80046aa:	e006      	b.n	80046ba <_printf_i+0x15e>
 80046ac:	0649      	lsls	r1, r1, #25
 80046ae:	d5f7      	bpl.n	80046a0 <_printf_i+0x144>
 80046b0:	1d11      	adds	r1, r2, #4
 80046b2:	6019      	str	r1, [r3, #0]
 80046b4:	6813      	ldr	r3, [r2, #0]
 80046b6:	8aa2      	ldrh	r2, [r4, #20]
 80046b8:	801a      	strh	r2, [r3, #0]
 80046ba:	2300      	movs	r3, #0
 80046bc:	9e04      	ldr	r6, [sp, #16]
 80046be:	6123      	str	r3, [r4, #16]
 80046c0:	e054      	b.n	800476c <_printf_i+0x210>
 80046c2:	681a      	ldr	r2, [r3, #0]
 80046c4:	1d11      	adds	r1, r2, #4
 80046c6:	6019      	str	r1, [r3, #0]
 80046c8:	6816      	ldr	r6, [r2, #0]
 80046ca:	2100      	movs	r1, #0
 80046cc:	6862      	ldr	r2, [r4, #4]
 80046ce:	0030      	movs	r0, r6
 80046d0:	f000 ff04 	bl	80054dc <memchr>
 80046d4:	2800      	cmp	r0, #0
 80046d6:	d001      	beq.n	80046dc <_printf_i+0x180>
 80046d8:	1b80      	subs	r0, r0, r6
 80046da:	6060      	str	r0, [r4, #4]
 80046dc:	6863      	ldr	r3, [r4, #4]
 80046de:	6123      	str	r3, [r4, #16]
 80046e0:	2300      	movs	r3, #0
 80046e2:	9a04      	ldr	r2, [sp, #16]
 80046e4:	7013      	strb	r3, [r2, #0]
 80046e6:	e041      	b.n	800476c <_printf_i+0x210>
 80046e8:	6923      	ldr	r3, [r4, #16]
 80046ea:	0032      	movs	r2, r6
 80046ec:	9906      	ldr	r1, [sp, #24]
 80046ee:	9805      	ldr	r0, [sp, #20]
 80046f0:	9d07      	ldr	r5, [sp, #28]
 80046f2:	47a8      	blx	r5
 80046f4:	1c43      	adds	r3, r0, #1
 80046f6:	d043      	beq.n	8004780 <_printf_i+0x224>
 80046f8:	6823      	ldr	r3, [r4, #0]
 80046fa:	2500      	movs	r5, #0
 80046fc:	079b      	lsls	r3, r3, #30
 80046fe:	d40f      	bmi.n	8004720 <_printf_i+0x1c4>
 8004700:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004702:	68e0      	ldr	r0, [r4, #12]
 8004704:	4298      	cmp	r0, r3
 8004706:	da3d      	bge.n	8004784 <_printf_i+0x228>
 8004708:	0018      	movs	r0, r3
 800470a:	e03b      	b.n	8004784 <_printf_i+0x228>
 800470c:	0022      	movs	r2, r4
 800470e:	2301      	movs	r3, #1
 8004710:	3219      	adds	r2, #25
 8004712:	9906      	ldr	r1, [sp, #24]
 8004714:	9805      	ldr	r0, [sp, #20]
 8004716:	9e07      	ldr	r6, [sp, #28]
 8004718:	47b0      	blx	r6
 800471a:	1c43      	adds	r3, r0, #1
 800471c:	d030      	beq.n	8004780 <_printf_i+0x224>
 800471e:	3501      	adds	r5, #1
 8004720:	68e3      	ldr	r3, [r4, #12]
 8004722:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004724:	1a9b      	subs	r3, r3, r2
 8004726:	429d      	cmp	r5, r3
 8004728:	dbf0      	blt.n	800470c <_printf_i+0x1b0>
 800472a:	e7e9      	b.n	8004700 <_printf_i+0x1a4>
 800472c:	2d00      	cmp	r5, #0
 800472e:	d0a9      	beq.n	8004684 <_printf_i+0x128>
 8004730:	9e04      	ldr	r6, [sp, #16]
 8004732:	0028      	movs	r0, r5
 8004734:	0039      	movs	r1, r7
 8004736:	f7fb fd89 	bl	800024c <__aeabi_uidivmod>
 800473a:	9b03      	ldr	r3, [sp, #12]
 800473c:	3e01      	subs	r6, #1
 800473e:	5c5b      	ldrb	r3, [r3, r1]
 8004740:	0028      	movs	r0, r5
 8004742:	7033      	strb	r3, [r6, #0]
 8004744:	0039      	movs	r1, r7
 8004746:	f7fb fcfb 	bl	8000140 <__udivsi3>
 800474a:	1e05      	subs	r5, r0, #0
 800474c:	d1f1      	bne.n	8004732 <_printf_i+0x1d6>
 800474e:	2f08      	cmp	r7, #8
 8004750:	d109      	bne.n	8004766 <_printf_i+0x20a>
 8004752:	6823      	ldr	r3, [r4, #0]
 8004754:	07db      	lsls	r3, r3, #31
 8004756:	d506      	bpl.n	8004766 <_printf_i+0x20a>
 8004758:	6863      	ldr	r3, [r4, #4]
 800475a:	6922      	ldr	r2, [r4, #16]
 800475c:	4293      	cmp	r3, r2
 800475e:	dc02      	bgt.n	8004766 <_printf_i+0x20a>
 8004760:	2330      	movs	r3, #48	; 0x30
 8004762:	3e01      	subs	r6, #1
 8004764:	7033      	strb	r3, [r6, #0]
 8004766:	9b04      	ldr	r3, [sp, #16]
 8004768:	1b9b      	subs	r3, r3, r6
 800476a:	6123      	str	r3, [r4, #16]
 800476c:	9b07      	ldr	r3, [sp, #28]
 800476e:	aa09      	add	r2, sp, #36	; 0x24
 8004770:	9300      	str	r3, [sp, #0]
 8004772:	0021      	movs	r1, r4
 8004774:	9b06      	ldr	r3, [sp, #24]
 8004776:	9805      	ldr	r0, [sp, #20]
 8004778:	f7ff fe82 	bl	8004480 <_printf_common>
 800477c:	1c43      	adds	r3, r0, #1
 800477e:	d1b3      	bne.n	80046e8 <_printf_i+0x18c>
 8004780:	2001      	movs	r0, #1
 8004782:	4240      	negs	r0, r0
 8004784:	b00b      	add	sp, #44	; 0x2c
 8004786:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004788:	0800611a 	.word	0x0800611a
 800478c:	08006109 	.word	0x08006109

08004790 <_vsiprintf_r>:
 8004790:	b530      	push	{r4, r5, lr}
 8004792:	b09b      	sub	sp, #108	; 0x6c
 8004794:	9100      	str	r1, [sp, #0]
 8004796:	9104      	str	r1, [sp, #16]
 8004798:	4908      	ldr	r1, [pc, #32]	; (80047bc <_vsiprintf_r+0x2c>)
 800479a:	466d      	mov	r5, sp
 800479c:	9102      	str	r1, [sp, #8]
 800479e:	9105      	str	r1, [sp, #20]
 80047a0:	2101      	movs	r1, #1
 80047a2:	2482      	movs	r4, #130	; 0x82
 80047a4:	4249      	negs	r1, r1
 80047a6:	81e9      	strh	r1, [r5, #14]
 80047a8:	00a4      	lsls	r4, r4, #2
 80047aa:	4669      	mov	r1, sp
 80047ac:	81ac      	strh	r4, [r5, #12]
 80047ae:	f001 faa3 	bl	8005cf8 <_svfiprintf_r>
 80047b2:	2300      	movs	r3, #0
 80047b4:	9a00      	ldr	r2, [sp, #0]
 80047b6:	7013      	strb	r3, [r2, #0]
 80047b8:	b01b      	add	sp, #108	; 0x6c
 80047ba:	bd30      	pop	{r4, r5, pc}
 80047bc:	7fffffff 	.word	0x7fffffff

080047c0 <vsiprintf>:
 80047c0:	b510      	push	{r4, lr}
 80047c2:	0013      	movs	r3, r2
 80047c4:	000a      	movs	r2, r1
 80047c6:	0001      	movs	r1, r0
 80047c8:	4802      	ldr	r0, [pc, #8]	; (80047d4 <vsiprintf+0x14>)
 80047ca:	6800      	ldr	r0, [r0, #0]
 80047cc:	f7ff ffe0 	bl	8004790 <_vsiprintf_r>
 80047d0:	bd10      	pop	{r4, pc}
 80047d2:	46c0      	nop			; (mov r8, r8)
 80047d4:	20000008 	.word	0x20000008

080047d8 <quorem>:
 80047d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047da:	6903      	ldr	r3, [r0, #16]
 80047dc:	690c      	ldr	r4, [r1, #16]
 80047de:	b089      	sub	sp, #36	; 0x24
 80047e0:	0007      	movs	r7, r0
 80047e2:	9105      	str	r1, [sp, #20]
 80047e4:	2600      	movs	r6, #0
 80047e6:	429c      	cmp	r4, r3
 80047e8:	dc6d      	bgt.n	80048c6 <quorem+0xee>
 80047ea:	000b      	movs	r3, r1
 80047ec:	3c01      	subs	r4, #1
 80047ee:	3314      	adds	r3, #20
 80047f0:	00a5      	lsls	r5, r4, #2
 80047f2:	9303      	str	r3, [sp, #12]
 80047f4:	195b      	adds	r3, r3, r5
 80047f6:	9304      	str	r3, [sp, #16]
 80047f8:	0003      	movs	r3, r0
 80047fa:	3314      	adds	r3, #20
 80047fc:	9302      	str	r3, [sp, #8]
 80047fe:	195d      	adds	r5, r3, r5
 8004800:	9b04      	ldr	r3, [sp, #16]
 8004802:	6828      	ldr	r0, [r5, #0]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	1c59      	adds	r1, r3, #1
 8004808:	9301      	str	r3, [sp, #4]
 800480a:	f7fb fc99 	bl	8000140 <__udivsi3>
 800480e:	9001      	str	r0, [sp, #4]
 8004810:	42b0      	cmp	r0, r6
 8004812:	d02d      	beq.n	8004870 <quorem+0x98>
 8004814:	9b03      	ldr	r3, [sp, #12]
 8004816:	9802      	ldr	r0, [sp, #8]
 8004818:	469c      	mov	ip, r3
 800481a:	9606      	str	r6, [sp, #24]
 800481c:	4662      	mov	r2, ip
 800481e:	ca08      	ldmia	r2!, {r3}
 8004820:	4694      	mov	ip, r2
 8004822:	9a01      	ldr	r2, [sp, #4]
 8004824:	b299      	uxth	r1, r3
 8004826:	4351      	muls	r1, r2
 8004828:	0c1b      	lsrs	r3, r3, #16
 800482a:	4353      	muls	r3, r2
 800482c:	1989      	adds	r1, r1, r6
 800482e:	0c0a      	lsrs	r2, r1, #16
 8004830:	189b      	adds	r3, r3, r2
 8004832:	9307      	str	r3, [sp, #28]
 8004834:	8802      	ldrh	r2, [r0, #0]
 8004836:	0c1e      	lsrs	r6, r3, #16
 8004838:	9b06      	ldr	r3, [sp, #24]
 800483a:	b289      	uxth	r1, r1
 800483c:	18d2      	adds	r2, r2, r3
 800483e:	6803      	ldr	r3, [r0, #0]
 8004840:	1a52      	subs	r2, r2, r1
 8004842:	0c19      	lsrs	r1, r3, #16
 8004844:	466b      	mov	r3, sp
 8004846:	8b9b      	ldrh	r3, [r3, #28]
 8004848:	1acb      	subs	r3, r1, r3
 800484a:	1411      	asrs	r1, r2, #16
 800484c:	185b      	adds	r3, r3, r1
 800484e:	1419      	asrs	r1, r3, #16
 8004850:	b292      	uxth	r2, r2
 8004852:	041b      	lsls	r3, r3, #16
 8004854:	431a      	orrs	r2, r3
 8004856:	9b04      	ldr	r3, [sp, #16]
 8004858:	9106      	str	r1, [sp, #24]
 800485a:	c004      	stmia	r0!, {r2}
 800485c:	4563      	cmp	r3, ip
 800485e:	d2dd      	bcs.n	800481c <quorem+0x44>
 8004860:	682b      	ldr	r3, [r5, #0]
 8004862:	2b00      	cmp	r3, #0
 8004864:	d104      	bne.n	8004870 <quorem+0x98>
 8004866:	9b02      	ldr	r3, [sp, #8]
 8004868:	3d04      	subs	r5, #4
 800486a:	42ab      	cmp	r3, r5
 800486c:	d32e      	bcc.n	80048cc <quorem+0xf4>
 800486e:	613c      	str	r4, [r7, #16]
 8004870:	9905      	ldr	r1, [sp, #20]
 8004872:	0038      	movs	r0, r7
 8004874:	f001 f857 	bl	8005926 <__mcmp>
 8004878:	2800      	cmp	r0, #0
 800487a:	db23      	blt.n	80048c4 <quorem+0xec>
 800487c:	2500      	movs	r5, #0
 800487e:	9b01      	ldr	r3, [sp, #4]
 8004880:	9802      	ldr	r0, [sp, #8]
 8004882:	3301      	adds	r3, #1
 8004884:	9903      	ldr	r1, [sp, #12]
 8004886:	9301      	str	r3, [sp, #4]
 8004888:	c908      	ldmia	r1!, {r3}
 800488a:	8802      	ldrh	r2, [r0, #0]
 800488c:	1955      	adds	r5, r2, r5
 800488e:	b29a      	uxth	r2, r3
 8004890:	1aaa      	subs	r2, r5, r2
 8004892:	6805      	ldr	r5, [r0, #0]
 8004894:	0c1b      	lsrs	r3, r3, #16
 8004896:	0c2d      	lsrs	r5, r5, #16
 8004898:	1aeb      	subs	r3, r5, r3
 800489a:	1415      	asrs	r5, r2, #16
 800489c:	195b      	adds	r3, r3, r5
 800489e:	141d      	asrs	r5, r3, #16
 80048a0:	b292      	uxth	r2, r2
 80048a2:	041b      	lsls	r3, r3, #16
 80048a4:	4313      	orrs	r3, r2
 80048a6:	c008      	stmia	r0!, {r3}
 80048a8:	9b04      	ldr	r3, [sp, #16]
 80048aa:	428b      	cmp	r3, r1
 80048ac:	d2ec      	bcs.n	8004888 <quorem+0xb0>
 80048ae:	9a02      	ldr	r2, [sp, #8]
 80048b0:	00a3      	lsls	r3, r4, #2
 80048b2:	18d3      	adds	r3, r2, r3
 80048b4:	681a      	ldr	r2, [r3, #0]
 80048b6:	2a00      	cmp	r2, #0
 80048b8:	d104      	bne.n	80048c4 <quorem+0xec>
 80048ba:	9a02      	ldr	r2, [sp, #8]
 80048bc:	3b04      	subs	r3, #4
 80048be:	429a      	cmp	r2, r3
 80048c0:	d309      	bcc.n	80048d6 <quorem+0xfe>
 80048c2:	613c      	str	r4, [r7, #16]
 80048c4:	9e01      	ldr	r6, [sp, #4]
 80048c6:	0030      	movs	r0, r6
 80048c8:	b009      	add	sp, #36	; 0x24
 80048ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80048cc:	682b      	ldr	r3, [r5, #0]
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d1cd      	bne.n	800486e <quorem+0x96>
 80048d2:	3c01      	subs	r4, #1
 80048d4:	e7c7      	b.n	8004866 <quorem+0x8e>
 80048d6:	681a      	ldr	r2, [r3, #0]
 80048d8:	2a00      	cmp	r2, #0
 80048da:	d1f2      	bne.n	80048c2 <quorem+0xea>
 80048dc:	3c01      	subs	r4, #1
 80048de:	e7ec      	b.n	80048ba <quorem+0xe2>

080048e0 <_dtoa_r>:
 80048e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80048e2:	0016      	movs	r6, r2
 80048e4:	001f      	movs	r7, r3
 80048e6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80048e8:	b09d      	sub	sp, #116	; 0x74
 80048ea:	9004      	str	r0, [sp, #16]
 80048ec:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80048ee:	9606      	str	r6, [sp, #24]
 80048f0:	9707      	str	r7, [sp, #28]
 80048f2:	2c00      	cmp	r4, #0
 80048f4:	d108      	bne.n	8004908 <_dtoa_r+0x28>
 80048f6:	2010      	movs	r0, #16
 80048f8:	f000 fde6 	bl	80054c8 <malloc>
 80048fc:	9b04      	ldr	r3, [sp, #16]
 80048fe:	6258      	str	r0, [r3, #36]	; 0x24
 8004900:	6044      	str	r4, [r0, #4]
 8004902:	6084      	str	r4, [r0, #8]
 8004904:	6004      	str	r4, [r0, #0]
 8004906:	60c4      	str	r4, [r0, #12]
 8004908:	9b04      	ldr	r3, [sp, #16]
 800490a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800490c:	6819      	ldr	r1, [r3, #0]
 800490e:	2900      	cmp	r1, #0
 8004910:	d00b      	beq.n	800492a <_dtoa_r+0x4a>
 8004912:	685a      	ldr	r2, [r3, #4]
 8004914:	2301      	movs	r3, #1
 8004916:	4093      	lsls	r3, r2
 8004918:	604a      	str	r2, [r1, #4]
 800491a:	608b      	str	r3, [r1, #8]
 800491c:	9804      	ldr	r0, [sp, #16]
 800491e:	f000 fe29 	bl	8005574 <_Bfree>
 8004922:	2200      	movs	r2, #0
 8004924:	9b04      	ldr	r3, [sp, #16]
 8004926:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004928:	601a      	str	r2, [r3, #0]
 800492a:	9b07      	ldr	r3, [sp, #28]
 800492c:	2b00      	cmp	r3, #0
 800492e:	da1f      	bge.n	8004970 <_dtoa_r+0x90>
 8004930:	2301      	movs	r3, #1
 8004932:	602b      	str	r3, [r5, #0]
 8004934:	007b      	lsls	r3, r7, #1
 8004936:	085b      	lsrs	r3, r3, #1
 8004938:	9307      	str	r3, [sp, #28]
 800493a:	9c07      	ldr	r4, [sp, #28]
 800493c:	4bb7      	ldr	r3, [pc, #732]	; (8004c1c <_dtoa_r+0x33c>)
 800493e:	0022      	movs	r2, r4
 8004940:	9319      	str	r3, [sp, #100]	; 0x64
 8004942:	401a      	ands	r2, r3
 8004944:	429a      	cmp	r2, r3
 8004946:	d116      	bne.n	8004976 <_dtoa_r+0x96>
 8004948:	4bb5      	ldr	r3, [pc, #724]	; (8004c20 <_dtoa_r+0x340>)
 800494a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800494c:	6013      	str	r3, [r2, #0]
 800494e:	9b06      	ldr	r3, [sp, #24]
 8004950:	2b00      	cmp	r3, #0
 8004952:	d103      	bne.n	800495c <_dtoa_r+0x7c>
 8004954:	0324      	lsls	r4, r4, #12
 8004956:	d101      	bne.n	800495c <_dtoa_r+0x7c>
 8004958:	f000 fd91 	bl	800547e <_dtoa_r+0xb9e>
 800495c:	4bb1      	ldr	r3, [pc, #708]	; (8004c24 <_dtoa_r+0x344>)
 800495e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004960:	930a      	str	r3, [sp, #40]	; 0x28
 8004962:	4bb1      	ldr	r3, [pc, #708]	; (8004c28 <_dtoa_r+0x348>)
 8004964:	2a00      	cmp	r2, #0
 8004966:	d001      	beq.n	800496c <_dtoa_r+0x8c>
 8004968:	f000 fd8f 	bl	800548a <_dtoa_r+0xbaa>
 800496c:	f000 fd8f 	bl	800548e <_dtoa_r+0xbae>
 8004970:	2300      	movs	r3, #0
 8004972:	602b      	str	r3, [r5, #0]
 8004974:	e7e1      	b.n	800493a <_dtoa_r+0x5a>
 8004976:	9e06      	ldr	r6, [sp, #24]
 8004978:	9f07      	ldr	r7, [sp, #28]
 800497a:	2200      	movs	r2, #0
 800497c:	2300      	movs	r3, #0
 800497e:	0030      	movs	r0, r6
 8004980:	0039      	movs	r1, r7
 8004982:	f7fb fd63 	bl	800044c <__aeabi_dcmpeq>
 8004986:	1e05      	subs	r5, r0, #0
 8004988:	d00e      	beq.n	80049a8 <_dtoa_r+0xc8>
 800498a:	2301      	movs	r3, #1
 800498c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800498e:	6013      	str	r3, [r2, #0]
 8004990:	4ba6      	ldr	r3, [pc, #664]	; (8004c2c <_dtoa_r+0x34c>)
 8004992:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004994:	930a      	str	r3, [sp, #40]	; 0x28
 8004996:	2a00      	cmp	r2, #0
 8004998:	d101      	bne.n	800499e <_dtoa_r+0xbe>
 800499a:	f000 fd78 	bl	800548e <_dtoa_r+0xbae>
 800499e:	4aa4      	ldr	r2, [pc, #656]	; (8004c30 <_dtoa_r+0x350>)
 80049a0:	9926      	ldr	r1, [sp, #152]	; 0x98
 80049a2:	600a      	str	r2, [r1, #0]
 80049a4:	f000 fd73 	bl	800548e <_dtoa_r+0xbae>
 80049a8:	ab1a      	add	r3, sp, #104	; 0x68
 80049aa:	9301      	str	r3, [sp, #4]
 80049ac:	ab1b      	add	r3, sp, #108	; 0x6c
 80049ae:	9300      	str	r3, [sp, #0]
 80049b0:	0032      	movs	r2, r6
 80049b2:	003b      	movs	r3, r7
 80049b4:	9804      	ldr	r0, [sp, #16]
 80049b6:	f001 f833 	bl	8005a20 <__d2b>
 80049ba:	0063      	lsls	r3, r4, #1
 80049bc:	9005      	str	r0, [sp, #20]
 80049be:	0d5b      	lsrs	r3, r3, #21
 80049c0:	d100      	bne.n	80049c4 <_dtoa_r+0xe4>
 80049c2:	e07f      	b.n	8004ac4 <_dtoa_r+0x1e4>
 80049c4:	033a      	lsls	r2, r7, #12
 80049c6:	4c9b      	ldr	r4, [pc, #620]	; (8004c34 <_dtoa_r+0x354>)
 80049c8:	0b12      	lsrs	r2, r2, #12
 80049ca:	4314      	orrs	r4, r2
 80049cc:	0021      	movs	r1, r4
 80049ce:	4a9a      	ldr	r2, [pc, #616]	; (8004c38 <_dtoa_r+0x358>)
 80049d0:	0030      	movs	r0, r6
 80049d2:	9518      	str	r5, [sp, #96]	; 0x60
 80049d4:	189e      	adds	r6, r3, r2
 80049d6:	2200      	movs	r2, #0
 80049d8:	4b98      	ldr	r3, [pc, #608]	; (8004c3c <_dtoa_r+0x35c>)
 80049da:	f7fd f96f 	bl	8001cbc <__aeabi_dsub>
 80049de:	4a98      	ldr	r2, [pc, #608]	; (8004c40 <_dtoa_r+0x360>)
 80049e0:	4b98      	ldr	r3, [pc, #608]	; (8004c44 <_dtoa_r+0x364>)
 80049e2:	f7fc feeb 	bl	80017bc <__aeabi_dmul>
 80049e6:	4a98      	ldr	r2, [pc, #608]	; (8004c48 <_dtoa_r+0x368>)
 80049e8:	4b98      	ldr	r3, [pc, #608]	; (8004c4c <_dtoa_r+0x36c>)
 80049ea:	f7fb ffa3 	bl	8000934 <__aeabi_dadd>
 80049ee:	0004      	movs	r4, r0
 80049f0:	0030      	movs	r0, r6
 80049f2:	000d      	movs	r5, r1
 80049f4:	f7fd fccc 	bl	8002390 <__aeabi_i2d>
 80049f8:	4a95      	ldr	r2, [pc, #596]	; (8004c50 <_dtoa_r+0x370>)
 80049fa:	4b96      	ldr	r3, [pc, #600]	; (8004c54 <_dtoa_r+0x374>)
 80049fc:	f7fc fede 	bl	80017bc <__aeabi_dmul>
 8004a00:	0002      	movs	r2, r0
 8004a02:	000b      	movs	r3, r1
 8004a04:	0020      	movs	r0, r4
 8004a06:	0029      	movs	r1, r5
 8004a08:	f7fb ff94 	bl	8000934 <__aeabi_dadd>
 8004a0c:	0004      	movs	r4, r0
 8004a0e:	000d      	movs	r5, r1
 8004a10:	f7fd fc8a 	bl	8002328 <__aeabi_d2iz>
 8004a14:	2200      	movs	r2, #0
 8004a16:	9003      	str	r0, [sp, #12]
 8004a18:	2300      	movs	r3, #0
 8004a1a:	0020      	movs	r0, r4
 8004a1c:	0029      	movs	r1, r5
 8004a1e:	f7fb fd1b 	bl	8000458 <__aeabi_dcmplt>
 8004a22:	2800      	cmp	r0, #0
 8004a24:	d00e      	beq.n	8004a44 <_dtoa_r+0x164>
 8004a26:	9803      	ldr	r0, [sp, #12]
 8004a28:	f7fd fcb2 	bl	8002390 <__aeabi_i2d>
 8004a2c:	000b      	movs	r3, r1
 8004a2e:	0002      	movs	r2, r0
 8004a30:	0029      	movs	r1, r5
 8004a32:	0020      	movs	r0, r4
 8004a34:	f7fb fd0a 	bl	800044c <__aeabi_dcmpeq>
 8004a38:	0003      	movs	r3, r0
 8004a3a:	4258      	negs	r0, r3
 8004a3c:	4158      	adcs	r0, r3
 8004a3e:	9b03      	ldr	r3, [sp, #12]
 8004a40:	1a1b      	subs	r3, r3, r0
 8004a42:	9303      	str	r3, [sp, #12]
 8004a44:	2301      	movs	r3, #1
 8004a46:	9316      	str	r3, [sp, #88]	; 0x58
 8004a48:	9b03      	ldr	r3, [sp, #12]
 8004a4a:	2b16      	cmp	r3, #22
 8004a4c:	d80f      	bhi.n	8004a6e <_dtoa_r+0x18e>
 8004a4e:	4982      	ldr	r1, [pc, #520]	; (8004c58 <_dtoa_r+0x378>)
 8004a50:	00db      	lsls	r3, r3, #3
 8004a52:	18c9      	adds	r1, r1, r3
 8004a54:	6808      	ldr	r0, [r1, #0]
 8004a56:	6849      	ldr	r1, [r1, #4]
 8004a58:	9a06      	ldr	r2, [sp, #24]
 8004a5a:	9b07      	ldr	r3, [sp, #28]
 8004a5c:	f7fb fd10 	bl	8000480 <__aeabi_dcmpgt>
 8004a60:	2800      	cmp	r0, #0
 8004a62:	d04b      	beq.n	8004afc <_dtoa_r+0x21c>
 8004a64:	9b03      	ldr	r3, [sp, #12]
 8004a66:	3b01      	subs	r3, #1
 8004a68:	9303      	str	r3, [sp, #12]
 8004a6a:	2300      	movs	r3, #0
 8004a6c:	9316      	str	r3, [sp, #88]	; 0x58
 8004a6e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004a70:	1b9e      	subs	r6, r3, r6
 8004a72:	2300      	movs	r3, #0
 8004a74:	930b      	str	r3, [sp, #44]	; 0x2c
 8004a76:	0033      	movs	r3, r6
 8004a78:	3b01      	subs	r3, #1
 8004a7a:	930c      	str	r3, [sp, #48]	; 0x30
 8004a7c:	d504      	bpl.n	8004a88 <_dtoa_r+0x1a8>
 8004a7e:	2301      	movs	r3, #1
 8004a80:	1b9b      	subs	r3, r3, r6
 8004a82:	930b      	str	r3, [sp, #44]	; 0x2c
 8004a84:	2300      	movs	r3, #0
 8004a86:	930c      	str	r3, [sp, #48]	; 0x30
 8004a88:	9b03      	ldr	r3, [sp, #12]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	db38      	blt.n	8004b00 <_dtoa_r+0x220>
 8004a8e:	9a03      	ldr	r2, [sp, #12]
 8004a90:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004a92:	4694      	mov	ip, r2
 8004a94:	4463      	add	r3, ip
 8004a96:	930c      	str	r3, [sp, #48]	; 0x30
 8004a98:	2300      	movs	r3, #0
 8004a9a:	920f      	str	r2, [sp, #60]	; 0x3c
 8004a9c:	9308      	str	r3, [sp, #32]
 8004a9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004aa0:	2501      	movs	r5, #1
 8004aa2:	2b09      	cmp	r3, #9
 8004aa4:	d900      	bls.n	8004aa8 <_dtoa_r+0x1c8>
 8004aa6:	e091      	b.n	8004bcc <_dtoa_r+0x2ec>
 8004aa8:	2b05      	cmp	r3, #5
 8004aaa:	dd02      	ble.n	8004ab2 <_dtoa_r+0x1d2>
 8004aac:	2500      	movs	r5, #0
 8004aae:	3b04      	subs	r3, #4
 8004ab0:	9322      	str	r3, [sp, #136]	; 0x88
 8004ab2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004ab4:	1e98      	subs	r0, r3, #2
 8004ab6:	2803      	cmp	r0, #3
 8004ab8:	d900      	bls.n	8004abc <_dtoa_r+0x1dc>
 8004aba:	e091      	b.n	8004be0 <_dtoa_r+0x300>
 8004abc:	f7fb fb2c 	bl	8000118 <__gnu_thumb1_case_uqi>
 8004ac0:	76298482 	.word	0x76298482
 8004ac4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004ac6:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004ac8:	189e      	adds	r6, r3, r2
 8004aca:	4b64      	ldr	r3, [pc, #400]	; (8004c5c <_dtoa_r+0x37c>)
 8004acc:	18f2      	adds	r2, r6, r3
 8004ace:	2a20      	cmp	r2, #32
 8004ad0:	dd0f      	ble.n	8004af2 <_dtoa_r+0x212>
 8004ad2:	4b63      	ldr	r3, [pc, #396]	; (8004c60 <_dtoa_r+0x380>)
 8004ad4:	9806      	ldr	r0, [sp, #24]
 8004ad6:	18f3      	adds	r3, r6, r3
 8004ad8:	40d8      	lsrs	r0, r3
 8004ada:	2340      	movs	r3, #64	; 0x40
 8004adc:	1a9b      	subs	r3, r3, r2
 8004ade:	409c      	lsls	r4, r3
 8004ae0:	4320      	orrs	r0, r4
 8004ae2:	f7fd fc97 	bl	8002414 <__aeabi_ui2d>
 8004ae6:	2301      	movs	r3, #1
 8004ae8:	4c5e      	ldr	r4, [pc, #376]	; (8004c64 <_dtoa_r+0x384>)
 8004aea:	3e01      	subs	r6, #1
 8004aec:	1909      	adds	r1, r1, r4
 8004aee:	9318      	str	r3, [sp, #96]	; 0x60
 8004af0:	e771      	b.n	80049d6 <_dtoa_r+0xf6>
 8004af2:	2320      	movs	r3, #32
 8004af4:	9806      	ldr	r0, [sp, #24]
 8004af6:	1a9b      	subs	r3, r3, r2
 8004af8:	4098      	lsls	r0, r3
 8004afa:	e7f2      	b.n	8004ae2 <_dtoa_r+0x202>
 8004afc:	9016      	str	r0, [sp, #88]	; 0x58
 8004afe:	e7b6      	b.n	8004a6e <_dtoa_r+0x18e>
 8004b00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004b02:	9a03      	ldr	r2, [sp, #12]
 8004b04:	1a9b      	subs	r3, r3, r2
 8004b06:	930b      	str	r3, [sp, #44]	; 0x2c
 8004b08:	4253      	negs	r3, r2
 8004b0a:	9308      	str	r3, [sp, #32]
 8004b0c:	2300      	movs	r3, #0
 8004b0e:	930f      	str	r3, [sp, #60]	; 0x3c
 8004b10:	e7c5      	b.n	8004a9e <_dtoa_r+0x1be>
 8004b12:	2301      	movs	r3, #1
 8004b14:	930e      	str	r3, [sp, #56]	; 0x38
 8004b16:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004b18:	2b00      	cmp	r3, #0
 8004b1a:	dd65      	ble.n	8004be8 <_dtoa_r+0x308>
 8004b1c:	001f      	movs	r7, r3
 8004b1e:	930d      	str	r3, [sp, #52]	; 0x34
 8004b20:	9a04      	ldr	r2, [sp, #16]
 8004b22:	6a54      	ldr	r4, [r2, #36]	; 0x24
 8004b24:	2200      	movs	r2, #0
 8004b26:	6062      	str	r2, [r4, #4]
 8004b28:	3204      	adds	r2, #4
 8004b2a:	0011      	movs	r1, r2
 8004b2c:	3114      	adds	r1, #20
 8004b2e:	4299      	cmp	r1, r3
 8004b30:	d95f      	bls.n	8004bf2 <_dtoa_r+0x312>
 8004b32:	6861      	ldr	r1, [r4, #4]
 8004b34:	9804      	ldr	r0, [sp, #16]
 8004b36:	f000 fce5 	bl	8005504 <_Balloc>
 8004b3a:	9b04      	ldr	r3, [sp, #16]
 8004b3c:	6020      	str	r0, [r4, #0]
 8004b3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	930a      	str	r3, [sp, #40]	; 0x28
 8004b44:	2f0e      	cmp	r7, #14
 8004b46:	d900      	bls.n	8004b4a <_dtoa_r+0x26a>
 8004b48:	e105      	b.n	8004d56 <_dtoa_r+0x476>
 8004b4a:	2d00      	cmp	r5, #0
 8004b4c:	d100      	bne.n	8004b50 <_dtoa_r+0x270>
 8004b4e:	e102      	b.n	8004d56 <_dtoa_r+0x476>
 8004b50:	9b06      	ldr	r3, [sp, #24]
 8004b52:	9c07      	ldr	r4, [sp, #28]
 8004b54:	9314      	str	r3, [sp, #80]	; 0x50
 8004b56:	9415      	str	r4, [sp, #84]	; 0x54
 8004b58:	9b03      	ldr	r3, [sp, #12]
 8004b5a:	2b00      	cmp	r3, #0
 8004b5c:	dc00      	bgt.n	8004b60 <_dtoa_r+0x280>
 8004b5e:	e085      	b.n	8004c6c <_dtoa_r+0x38c>
 8004b60:	001a      	movs	r2, r3
 8004b62:	210f      	movs	r1, #15
 8004b64:	4b3c      	ldr	r3, [pc, #240]	; (8004c58 <_dtoa_r+0x378>)
 8004b66:	400a      	ands	r2, r1
 8004b68:	00d2      	lsls	r2, r2, #3
 8004b6a:	189b      	adds	r3, r3, r2
 8004b6c:	685c      	ldr	r4, [r3, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	9310      	str	r3, [sp, #64]	; 0x40
 8004b72:	9411      	str	r4, [sp, #68]	; 0x44
 8004b74:	9b03      	ldr	r3, [sp, #12]
 8004b76:	2402      	movs	r4, #2
 8004b78:	111d      	asrs	r5, r3, #4
 8004b7a:	06eb      	lsls	r3, r5, #27
 8004b7c:	d50a      	bpl.n	8004b94 <_dtoa_r+0x2b4>
 8004b7e:	4b3a      	ldr	r3, [pc, #232]	; (8004c68 <_dtoa_r+0x388>)
 8004b80:	400d      	ands	r5, r1
 8004b82:	6a1a      	ldr	r2, [r3, #32]
 8004b84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b86:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004b88:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004b8a:	f7fc f9e3 	bl	8000f54 <__aeabi_ddiv>
 8004b8e:	9006      	str	r0, [sp, #24]
 8004b90:	9107      	str	r1, [sp, #28]
 8004b92:	3401      	adds	r4, #1
 8004b94:	4e34      	ldr	r6, [pc, #208]	; (8004c68 <_dtoa_r+0x388>)
 8004b96:	2d00      	cmp	r5, #0
 8004b98:	d130      	bne.n	8004bfc <_dtoa_r+0x31c>
 8004b9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004b9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004b9e:	9806      	ldr	r0, [sp, #24]
 8004ba0:	9907      	ldr	r1, [sp, #28]
 8004ba2:	f7fc f9d7 	bl	8000f54 <__aeabi_ddiv>
 8004ba6:	9006      	str	r0, [sp, #24]
 8004ba8:	9107      	str	r1, [sp, #28]
 8004baa:	e07a      	b.n	8004ca2 <_dtoa_r+0x3c2>
 8004bac:	2301      	movs	r3, #1
 8004bae:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004bb0:	930e      	str	r3, [sp, #56]	; 0x38
 8004bb2:	4694      	mov	ip, r2
 8004bb4:	9b03      	ldr	r3, [sp, #12]
 8004bb6:	4463      	add	r3, ip
 8004bb8:	1c5f      	adds	r7, r3, #1
 8004bba:	930d      	str	r3, [sp, #52]	; 0x34
 8004bbc:	1e3b      	subs	r3, r7, #0
 8004bbe:	dcaf      	bgt.n	8004b20 <_dtoa_r+0x240>
 8004bc0:	2301      	movs	r3, #1
 8004bc2:	e7ad      	b.n	8004b20 <_dtoa_r+0x240>
 8004bc4:	2300      	movs	r3, #0
 8004bc6:	e7a5      	b.n	8004b14 <_dtoa_r+0x234>
 8004bc8:	2300      	movs	r3, #0
 8004bca:	e7f0      	b.n	8004bae <_dtoa_r+0x2ce>
 8004bcc:	2300      	movs	r3, #0
 8004bce:	950e      	str	r5, [sp, #56]	; 0x38
 8004bd0:	9322      	str	r3, [sp, #136]	; 0x88
 8004bd2:	3b01      	subs	r3, #1
 8004bd4:	2200      	movs	r2, #0
 8004bd6:	930d      	str	r3, [sp, #52]	; 0x34
 8004bd8:	001f      	movs	r7, r3
 8004bda:	3313      	adds	r3, #19
 8004bdc:	9223      	str	r2, [sp, #140]	; 0x8c
 8004bde:	e79f      	b.n	8004b20 <_dtoa_r+0x240>
 8004be0:	2301      	movs	r3, #1
 8004be2:	930e      	str	r3, [sp, #56]	; 0x38
 8004be4:	3b02      	subs	r3, #2
 8004be6:	e7f5      	b.n	8004bd4 <_dtoa_r+0x2f4>
 8004be8:	2301      	movs	r3, #1
 8004bea:	930d      	str	r3, [sp, #52]	; 0x34
 8004bec:	001f      	movs	r7, r3
 8004bee:	001a      	movs	r2, r3
 8004bf0:	e7f4      	b.n	8004bdc <_dtoa_r+0x2fc>
 8004bf2:	6861      	ldr	r1, [r4, #4]
 8004bf4:	0052      	lsls	r2, r2, #1
 8004bf6:	3101      	adds	r1, #1
 8004bf8:	6061      	str	r1, [r4, #4]
 8004bfa:	e796      	b.n	8004b2a <_dtoa_r+0x24a>
 8004bfc:	2301      	movs	r3, #1
 8004bfe:	421d      	tst	r5, r3
 8004c00:	d008      	beq.n	8004c14 <_dtoa_r+0x334>
 8004c02:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004c04:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004c06:	18e4      	adds	r4, r4, r3
 8004c08:	6832      	ldr	r2, [r6, #0]
 8004c0a:	6873      	ldr	r3, [r6, #4]
 8004c0c:	f7fc fdd6 	bl	80017bc <__aeabi_dmul>
 8004c10:	9010      	str	r0, [sp, #64]	; 0x40
 8004c12:	9111      	str	r1, [sp, #68]	; 0x44
 8004c14:	106d      	asrs	r5, r5, #1
 8004c16:	3608      	adds	r6, #8
 8004c18:	e7bd      	b.n	8004b96 <_dtoa_r+0x2b6>
 8004c1a:	46c0      	nop			; (mov r8, r8)
 8004c1c:	7ff00000 	.word	0x7ff00000
 8004c20:	0000270f 	.word	0x0000270f
 8004c24:	08006134 	.word	0x08006134
 8004c28:	08006137 	.word	0x08006137
 8004c2c:	08006107 	.word	0x08006107
 8004c30:	08006108 	.word	0x08006108
 8004c34:	3ff00000 	.word	0x3ff00000
 8004c38:	fffffc01 	.word	0xfffffc01
 8004c3c:	3ff80000 	.word	0x3ff80000
 8004c40:	636f4361 	.word	0x636f4361
 8004c44:	3fd287a7 	.word	0x3fd287a7
 8004c48:	8b60c8b3 	.word	0x8b60c8b3
 8004c4c:	3fc68a28 	.word	0x3fc68a28
 8004c50:	509f79fb 	.word	0x509f79fb
 8004c54:	3fd34413 	.word	0x3fd34413
 8004c58:	08006160 	.word	0x08006160
 8004c5c:	00000432 	.word	0x00000432
 8004c60:	00000412 	.word	0x00000412
 8004c64:	fe100000 	.word	0xfe100000
 8004c68:	08006138 	.word	0x08006138
 8004c6c:	9b03      	ldr	r3, [sp, #12]
 8004c6e:	2402      	movs	r4, #2
 8004c70:	2b00      	cmp	r3, #0
 8004c72:	d016      	beq.n	8004ca2 <_dtoa_r+0x3c2>
 8004c74:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004c76:	9915      	ldr	r1, [sp, #84]	; 0x54
 8004c78:	425d      	negs	r5, r3
 8004c7a:	230f      	movs	r3, #15
 8004c7c:	4aca      	ldr	r2, [pc, #808]	; (8004fa8 <_dtoa_r+0x6c8>)
 8004c7e:	402b      	ands	r3, r5
 8004c80:	00db      	lsls	r3, r3, #3
 8004c82:	18d3      	adds	r3, r2, r3
 8004c84:	681a      	ldr	r2, [r3, #0]
 8004c86:	685b      	ldr	r3, [r3, #4]
 8004c88:	f7fc fd98 	bl	80017bc <__aeabi_dmul>
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	9006      	str	r0, [sp, #24]
 8004c90:	9107      	str	r1, [sp, #28]
 8004c92:	4ec6      	ldr	r6, [pc, #792]	; (8004fac <_dtoa_r+0x6cc>)
 8004c94:	112d      	asrs	r5, r5, #4
 8004c96:	2d00      	cmp	r5, #0
 8004c98:	d000      	beq.n	8004c9c <_dtoa_r+0x3bc>
 8004c9a:	e08c      	b.n	8004db6 <_dtoa_r+0x4d6>
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d000      	beq.n	8004ca2 <_dtoa_r+0x3c2>
 8004ca0:	e781      	b.n	8004ba6 <_dtoa_r+0x2c6>
 8004ca2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004ca4:	2b00      	cmp	r3, #0
 8004ca6:	d100      	bne.n	8004caa <_dtoa_r+0x3ca>
 8004ca8:	e091      	b.n	8004dce <_dtoa_r+0x4ee>
 8004caa:	9a06      	ldr	r2, [sp, #24]
 8004cac:	9b07      	ldr	r3, [sp, #28]
 8004cae:	9210      	str	r2, [sp, #64]	; 0x40
 8004cb0:	9311      	str	r3, [sp, #68]	; 0x44
 8004cb2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cb4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004cb6:	2200      	movs	r2, #0
 8004cb8:	4bbd      	ldr	r3, [pc, #756]	; (8004fb0 <_dtoa_r+0x6d0>)
 8004cba:	f7fb fbcd 	bl	8000458 <__aeabi_dcmplt>
 8004cbe:	2800      	cmp	r0, #0
 8004cc0:	d100      	bne.n	8004cc4 <_dtoa_r+0x3e4>
 8004cc2:	e084      	b.n	8004dce <_dtoa_r+0x4ee>
 8004cc4:	2f00      	cmp	r7, #0
 8004cc6:	d100      	bne.n	8004cca <_dtoa_r+0x3ea>
 8004cc8:	e081      	b.n	8004dce <_dtoa_r+0x4ee>
 8004cca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004ccc:	2b00      	cmp	r3, #0
 8004cce:	dd3e      	ble.n	8004d4e <_dtoa_r+0x46e>
 8004cd0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004cd2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004cd4:	9b03      	ldr	r3, [sp, #12]
 8004cd6:	2200      	movs	r2, #0
 8004cd8:	1e5e      	subs	r6, r3, #1
 8004cda:	4bb6      	ldr	r3, [pc, #728]	; (8004fb4 <_dtoa_r+0x6d4>)
 8004cdc:	f7fc fd6e 	bl	80017bc <__aeabi_dmul>
 8004ce0:	9006      	str	r0, [sp, #24]
 8004ce2:	9107      	str	r1, [sp, #28]
 8004ce4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8004ce6:	3401      	adds	r4, #1
 8004ce8:	0020      	movs	r0, r4
 8004cea:	f7fd fb51 	bl	8002390 <__aeabi_i2d>
 8004cee:	9a06      	ldr	r2, [sp, #24]
 8004cf0:	9b07      	ldr	r3, [sp, #28]
 8004cf2:	f7fc fd63 	bl	80017bc <__aeabi_dmul>
 8004cf6:	2200      	movs	r2, #0
 8004cf8:	4baf      	ldr	r3, [pc, #700]	; (8004fb8 <_dtoa_r+0x6d8>)
 8004cfa:	f7fb fe1b 	bl	8000934 <__aeabi_dadd>
 8004cfe:	9012      	str	r0, [sp, #72]	; 0x48
 8004d00:	9113      	str	r1, [sp, #76]	; 0x4c
 8004d02:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8004d06:	4aad      	ldr	r2, [pc, #692]	; (8004fbc <_dtoa_r+0x6dc>)
 8004d08:	9310      	str	r3, [sp, #64]	; 0x40
 8004d0a:	9411      	str	r4, [sp, #68]	; 0x44
 8004d0c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004d0e:	189c      	adds	r4, r3, r2
 8004d10:	9411      	str	r4, [sp, #68]	; 0x44
 8004d12:	2d00      	cmp	r5, #0
 8004d14:	d15e      	bne.n	8004dd4 <_dtoa_r+0x4f4>
 8004d16:	9806      	ldr	r0, [sp, #24]
 8004d18:	9907      	ldr	r1, [sp, #28]
 8004d1a:	2200      	movs	r2, #0
 8004d1c:	4ba8      	ldr	r3, [pc, #672]	; (8004fc0 <_dtoa_r+0x6e0>)
 8004d1e:	f7fc ffcd 	bl	8001cbc <__aeabi_dsub>
 8004d22:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004d24:	0023      	movs	r3, r4
 8004d26:	9006      	str	r0, [sp, #24]
 8004d28:	9107      	str	r1, [sp, #28]
 8004d2a:	f7fb fba9 	bl	8000480 <__aeabi_dcmpgt>
 8004d2e:	2800      	cmp	r0, #0
 8004d30:	d000      	beq.n	8004d34 <_dtoa_r+0x454>
 8004d32:	e301      	b.n	8005338 <_dtoa_r+0xa58>
 8004d34:	48a3      	ldr	r0, [pc, #652]	; (8004fc4 <_dtoa_r+0x6e4>)
 8004d36:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004d38:	4684      	mov	ip, r0
 8004d3a:	4461      	add	r1, ip
 8004d3c:	000b      	movs	r3, r1
 8004d3e:	9806      	ldr	r0, [sp, #24]
 8004d40:	9907      	ldr	r1, [sp, #28]
 8004d42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004d44:	f7fb fb88 	bl	8000458 <__aeabi_dcmplt>
 8004d48:	2800      	cmp	r0, #0
 8004d4a:	d000      	beq.n	8004d4e <_dtoa_r+0x46e>
 8004d4c:	e2e8      	b.n	8005320 <_dtoa_r+0xa40>
 8004d4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004d50:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8004d52:	9306      	str	r3, [sp, #24]
 8004d54:	9407      	str	r4, [sp, #28]
 8004d56:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004d58:	2b00      	cmp	r3, #0
 8004d5a:	da00      	bge.n	8004d5e <_dtoa_r+0x47e>
 8004d5c:	e157      	b.n	800500e <_dtoa_r+0x72e>
 8004d5e:	9a03      	ldr	r2, [sp, #12]
 8004d60:	2a0e      	cmp	r2, #14
 8004d62:	dd00      	ble.n	8004d66 <_dtoa_r+0x486>
 8004d64:	e153      	b.n	800500e <_dtoa_r+0x72e>
 8004d66:	4b90      	ldr	r3, [pc, #576]	; (8004fa8 <_dtoa_r+0x6c8>)
 8004d68:	00d2      	lsls	r2, r2, #3
 8004d6a:	189b      	adds	r3, r3, r2
 8004d6c:	685c      	ldr	r4, [r3, #4]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	9308      	str	r3, [sp, #32]
 8004d72:	9409      	str	r4, [sp, #36]	; 0x24
 8004d74:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	db00      	blt.n	8004d7c <_dtoa_r+0x49c>
 8004d7a:	e0ce      	b.n	8004f1a <_dtoa_r+0x63a>
 8004d7c:	2f00      	cmp	r7, #0
 8004d7e:	dd00      	ble.n	8004d82 <_dtoa_r+0x4a2>
 8004d80:	e0cb      	b.n	8004f1a <_dtoa_r+0x63a>
 8004d82:	d000      	beq.n	8004d86 <_dtoa_r+0x4a6>
 8004d84:	e2cf      	b.n	8005326 <_dtoa_r+0xa46>
 8004d86:	9808      	ldr	r0, [sp, #32]
 8004d88:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004d8a:	2200      	movs	r2, #0
 8004d8c:	4b8c      	ldr	r3, [pc, #560]	; (8004fc0 <_dtoa_r+0x6e0>)
 8004d8e:	f7fc fd15 	bl	80017bc <__aeabi_dmul>
 8004d92:	9a06      	ldr	r2, [sp, #24]
 8004d94:	9b07      	ldr	r3, [sp, #28]
 8004d96:	f7fb fb7d 	bl	8000494 <__aeabi_dcmpge>
 8004d9a:	003e      	movs	r6, r7
 8004d9c:	9708      	str	r7, [sp, #32]
 8004d9e:	2800      	cmp	r0, #0
 8004da0:	d000      	beq.n	8004da4 <_dtoa_r+0x4c4>
 8004da2:	e2a4      	b.n	80052ee <_dtoa_r+0xa0e>
 8004da4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004da6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004da8:	1c5d      	adds	r5, r3, #1
 8004daa:	2331      	movs	r3, #49	; 0x31
 8004dac:	7013      	strb	r3, [r2, #0]
 8004dae:	9b03      	ldr	r3, [sp, #12]
 8004db0:	3301      	adds	r3, #1
 8004db2:	9303      	str	r3, [sp, #12]
 8004db4:	e29f      	b.n	80052f6 <_dtoa_r+0xa16>
 8004db6:	2201      	movs	r2, #1
 8004db8:	4215      	tst	r5, r2
 8004dba:	d005      	beq.n	8004dc8 <_dtoa_r+0x4e8>
 8004dbc:	18a4      	adds	r4, r4, r2
 8004dbe:	6832      	ldr	r2, [r6, #0]
 8004dc0:	6873      	ldr	r3, [r6, #4]
 8004dc2:	f7fc fcfb 	bl	80017bc <__aeabi_dmul>
 8004dc6:	2301      	movs	r3, #1
 8004dc8:	106d      	asrs	r5, r5, #1
 8004dca:	3608      	adds	r6, #8
 8004dcc:	e763      	b.n	8004c96 <_dtoa_r+0x3b6>
 8004dce:	9e03      	ldr	r6, [sp, #12]
 8004dd0:	003d      	movs	r5, r7
 8004dd2:	e789      	b.n	8004ce8 <_dtoa_r+0x408>
 8004dd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004dd6:	1e69      	subs	r1, r5, #1
 8004dd8:	1952      	adds	r2, r2, r5
 8004dda:	9217      	str	r2, [sp, #92]	; 0x5c
 8004ddc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8004dde:	4b72      	ldr	r3, [pc, #456]	; (8004fa8 <_dtoa_r+0x6c8>)
 8004de0:	00c9      	lsls	r1, r1, #3
 8004de2:	2a00      	cmp	r2, #0
 8004de4:	d04a      	beq.n	8004e7c <_dtoa_r+0x59c>
 8004de6:	185b      	adds	r3, r3, r1
 8004de8:	681a      	ldr	r2, [r3, #0]
 8004dea:	685b      	ldr	r3, [r3, #4]
 8004dec:	2000      	movs	r0, #0
 8004dee:	4976      	ldr	r1, [pc, #472]	; (8004fc8 <_dtoa_r+0x6e8>)
 8004df0:	f7fc f8b0 	bl	8000f54 <__aeabi_ddiv>
 8004df4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004df6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004df8:	f7fc ff60 	bl	8001cbc <__aeabi_dsub>
 8004dfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dfe:	9010      	str	r0, [sp, #64]	; 0x40
 8004e00:	9111      	str	r1, [sp, #68]	; 0x44
 8004e02:	9312      	str	r3, [sp, #72]	; 0x48
 8004e04:	9806      	ldr	r0, [sp, #24]
 8004e06:	9907      	ldr	r1, [sp, #28]
 8004e08:	f7fd fa8e 	bl	8002328 <__aeabi_d2iz>
 8004e0c:	0004      	movs	r4, r0
 8004e0e:	f7fd fabf 	bl	8002390 <__aeabi_i2d>
 8004e12:	0002      	movs	r2, r0
 8004e14:	000b      	movs	r3, r1
 8004e16:	9806      	ldr	r0, [sp, #24]
 8004e18:	9907      	ldr	r1, [sp, #28]
 8004e1a:	f7fc ff4f 	bl	8001cbc <__aeabi_dsub>
 8004e1e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004e20:	3430      	adds	r4, #48	; 0x30
 8004e22:	1c5d      	adds	r5, r3, #1
 8004e24:	701c      	strb	r4, [r3, #0]
 8004e26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004e28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e2a:	9006      	str	r0, [sp, #24]
 8004e2c:	9107      	str	r1, [sp, #28]
 8004e2e:	f7fb fb13 	bl	8000458 <__aeabi_dcmplt>
 8004e32:	2800      	cmp	r0, #0
 8004e34:	d165      	bne.n	8004f02 <_dtoa_r+0x622>
 8004e36:	9a06      	ldr	r2, [sp, #24]
 8004e38:	9b07      	ldr	r3, [sp, #28]
 8004e3a:	2000      	movs	r0, #0
 8004e3c:	495c      	ldr	r1, [pc, #368]	; (8004fb0 <_dtoa_r+0x6d0>)
 8004e3e:	f7fc ff3d 	bl	8001cbc <__aeabi_dsub>
 8004e42:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004e44:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e46:	f7fb fb07 	bl	8000458 <__aeabi_dcmplt>
 8004e4a:	2800      	cmp	r0, #0
 8004e4c:	d000      	beq.n	8004e50 <_dtoa_r+0x570>
 8004e4e:	e0be      	b.n	8004fce <_dtoa_r+0x6ee>
 8004e50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004e52:	429d      	cmp	r5, r3
 8004e54:	d100      	bne.n	8004e58 <_dtoa_r+0x578>
 8004e56:	e77a      	b.n	8004d4e <_dtoa_r+0x46e>
 8004e58:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004e5a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004e5c:	2200      	movs	r2, #0
 8004e5e:	4b55      	ldr	r3, [pc, #340]	; (8004fb4 <_dtoa_r+0x6d4>)
 8004e60:	f7fc fcac 	bl	80017bc <__aeabi_dmul>
 8004e64:	2200      	movs	r2, #0
 8004e66:	9010      	str	r0, [sp, #64]	; 0x40
 8004e68:	9111      	str	r1, [sp, #68]	; 0x44
 8004e6a:	9806      	ldr	r0, [sp, #24]
 8004e6c:	9907      	ldr	r1, [sp, #28]
 8004e6e:	4b51      	ldr	r3, [pc, #324]	; (8004fb4 <_dtoa_r+0x6d4>)
 8004e70:	f7fc fca4 	bl	80017bc <__aeabi_dmul>
 8004e74:	9512      	str	r5, [sp, #72]	; 0x48
 8004e76:	9006      	str	r0, [sp, #24]
 8004e78:	9107      	str	r1, [sp, #28]
 8004e7a:	e7c3      	b.n	8004e04 <_dtoa_r+0x524>
 8004e7c:	1859      	adds	r1, r3, r1
 8004e7e:	6808      	ldr	r0, [r1, #0]
 8004e80:	6849      	ldr	r1, [r1, #4]
 8004e82:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004e84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004e86:	f7fc fc99 	bl	80017bc <__aeabi_dmul>
 8004e8a:	9010      	str	r0, [sp, #64]	; 0x40
 8004e8c:	9111      	str	r1, [sp, #68]	; 0x44
 8004e8e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004e90:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8004e92:	9806      	ldr	r0, [sp, #24]
 8004e94:	9907      	ldr	r1, [sp, #28]
 8004e96:	f7fd fa47 	bl	8002328 <__aeabi_d2iz>
 8004e9a:	9012      	str	r0, [sp, #72]	; 0x48
 8004e9c:	f7fd fa78 	bl	8002390 <__aeabi_i2d>
 8004ea0:	0002      	movs	r2, r0
 8004ea2:	000b      	movs	r3, r1
 8004ea4:	9806      	ldr	r0, [sp, #24]
 8004ea6:	9907      	ldr	r1, [sp, #28]
 8004ea8:	f7fc ff08 	bl	8001cbc <__aeabi_dsub>
 8004eac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004eae:	9006      	str	r0, [sp, #24]
 8004eb0:	9107      	str	r1, [sp, #28]
 8004eb2:	3330      	adds	r3, #48	; 0x30
 8004eb4:	7023      	strb	r3, [r4, #0]
 8004eb6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004eb8:	3401      	adds	r4, #1
 8004eba:	2200      	movs	r2, #0
 8004ebc:	42a3      	cmp	r3, r4
 8004ebe:	d124      	bne.n	8004f0a <_dtoa_r+0x62a>
 8004ec0:	4b41      	ldr	r3, [pc, #260]	; (8004fc8 <_dtoa_r+0x6e8>)
 8004ec2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004ec4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004ec6:	f7fb fd35 	bl	8000934 <__aeabi_dadd>
 8004eca:	0002      	movs	r2, r0
 8004ecc:	000b      	movs	r3, r1
 8004ece:	9806      	ldr	r0, [sp, #24]
 8004ed0:	9907      	ldr	r1, [sp, #28]
 8004ed2:	f7fb fad5 	bl	8000480 <__aeabi_dcmpgt>
 8004ed6:	2800      	cmp	r0, #0
 8004ed8:	d000      	beq.n	8004edc <_dtoa_r+0x5fc>
 8004eda:	e078      	b.n	8004fce <_dtoa_r+0x6ee>
 8004edc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004ede:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004ee0:	2000      	movs	r0, #0
 8004ee2:	4939      	ldr	r1, [pc, #228]	; (8004fc8 <_dtoa_r+0x6e8>)
 8004ee4:	f7fc feea 	bl	8001cbc <__aeabi_dsub>
 8004ee8:	0002      	movs	r2, r0
 8004eea:	000b      	movs	r3, r1
 8004eec:	9806      	ldr	r0, [sp, #24]
 8004eee:	9907      	ldr	r1, [sp, #28]
 8004ef0:	f7fb fab2 	bl	8000458 <__aeabi_dcmplt>
 8004ef4:	2800      	cmp	r0, #0
 8004ef6:	d100      	bne.n	8004efa <_dtoa_r+0x61a>
 8004ef8:	e729      	b.n	8004d4e <_dtoa_r+0x46e>
 8004efa:	1e6b      	subs	r3, r5, #1
 8004efc:	781a      	ldrb	r2, [r3, #0]
 8004efe:	2a30      	cmp	r2, #48	; 0x30
 8004f00:	d001      	beq.n	8004f06 <_dtoa_r+0x626>
 8004f02:	9603      	str	r6, [sp, #12]
 8004f04:	e03f      	b.n	8004f86 <_dtoa_r+0x6a6>
 8004f06:	001d      	movs	r5, r3
 8004f08:	e7f7      	b.n	8004efa <_dtoa_r+0x61a>
 8004f0a:	9806      	ldr	r0, [sp, #24]
 8004f0c:	9907      	ldr	r1, [sp, #28]
 8004f0e:	4b29      	ldr	r3, [pc, #164]	; (8004fb4 <_dtoa_r+0x6d4>)
 8004f10:	f7fc fc54 	bl	80017bc <__aeabi_dmul>
 8004f14:	9006      	str	r0, [sp, #24]
 8004f16:	9107      	str	r1, [sp, #28]
 8004f18:	e7bb      	b.n	8004e92 <_dtoa_r+0x5b2>
 8004f1a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8004f1c:	9a08      	ldr	r2, [sp, #32]
 8004f1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f20:	9806      	ldr	r0, [sp, #24]
 8004f22:	9907      	ldr	r1, [sp, #28]
 8004f24:	f7fc f816 	bl	8000f54 <__aeabi_ddiv>
 8004f28:	f7fd f9fe 	bl	8002328 <__aeabi_d2iz>
 8004f2c:	0004      	movs	r4, r0
 8004f2e:	f7fd fa2f 	bl	8002390 <__aeabi_i2d>
 8004f32:	9a08      	ldr	r2, [sp, #32]
 8004f34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f36:	f7fc fc41 	bl	80017bc <__aeabi_dmul>
 8004f3a:	000b      	movs	r3, r1
 8004f3c:	0002      	movs	r2, r0
 8004f3e:	9806      	ldr	r0, [sp, #24]
 8004f40:	9907      	ldr	r1, [sp, #28]
 8004f42:	f7fc febb 	bl	8001cbc <__aeabi_dsub>
 8004f46:	0023      	movs	r3, r4
 8004f48:	3330      	adds	r3, #48	; 0x30
 8004f4a:	7033      	strb	r3, [r6, #0]
 8004f4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004f4e:	1c75      	adds	r5, r6, #1
 8004f50:	1aeb      	subs	r3, r5, r3
 8004f52:	429f      	cmp	r7, r3
 8004f54:	d14c      	bne.n	8004ff0 <_dtoa_r+0x710>
 8004f56:	0002      	movs	r2, r0
 8004f58:	000b      	movs	r3, r1
 8004f5a:	f7fb fceb 	bl	8000934 <__aeabi_dadd>
 8004f5e:	0006      	movs	r6, r0
 8004f60:	000f      	movs	r7, r1
 8004f62:	0002      	movs	r2, r0
 8004f64:	000b      	movs	r3, r1
 8004f66:	9808      	ldr	r0, [sp, #32]
 8004f68:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004f6a:	f7fb fa75 	bl	8000458 <__aeabi_dcmplt>
 8004f6e:	2800      	cmp	r0, #0
 8004f70:	d12c      	bne.n	8004fcc <_dtoa_r+0x6ec>
 8004f72:	9808      	ldr	r0, [sp, #32]
 8004f74:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004f76:	0032      	movs	r2, r6
 8004f78:	003b      	movs	r3, r7
 8004f7a:	f7fb fa67 	bl	800044c <__aeabi_dcmpeq>
 8004f7e:	2800      	cmp	r0, #0
 8004f80:	d001      	beq.n	8004f86 <_dtoa_r+0x6a6>
 8004f82:	07e3      	lsls	r3, r4, #31
 8004f84:	d422      	bmi.n	8004fcc <_dtoa_r+0x6ec>
 8004f86:	9905      	ldr	r1, [sp, #20]
 8004f88:	9804      	ldr	r0, [sp, #16]
 8004f8a:	f000 faf3 	bl	8005574 <_Bfree>
 8004f8e:	2300      	movs	r3, #0
 8004f90:	702b      	strb	r3, [r5, #0]
 8004f92:	9b03      	ldr	r3, [sp, #12]
 8004f94:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004f96:	3301      	adds	r3, #1
 8004f98:	6013      	str	r3, [r2, #0]
 8004f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d100      	bne.n	8004fa2 <_dtoa_r+0x6c2>
 8004fa0:	e275      	b.n	800548e <_dtoa_r+0xbae>
 8004fa2:	601d      	str	r5, [r3, #0]
 8004fa4:	e273      	b.n	800548e <_dtoa_r+0xbae>
 8004fa6:	46c0      	nop			; (mov r8, r8)
 8004fa8:	08006160 	.word	0x08006160
 8004fac:	08006138 	.word	0x08006138
 8004fb0:	3ff00000 	.word	0x3ff00000
 8004fb4:	40240000 	.word	0x40240000
 8004fb8:	401c0000 	.word	0x401c0000
 8004fbc:	fcc00000 	.word	0xfcc00000
 8004fc0:	40140000 	.word	0x40140000
 8004fc4:	7cc00000 	.word	0x7cc00000
 8004fc8:	3fe00000 	.word	0x3fe00000
 8004fcc:	9e03      	ldr	r6, [sp, #12]
 8004fce:	1e6b      	subs	r3, r5, #1
 8004fd0:	781a      	ldrb	r2, [r3, #0]
 8004fd2:	2a39      	cmp	r2, #57	; 0x39
 8004fd4:	d106      	bne.n	8004fe4 <_dtoa_r+0x704>
 8004fd6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004fd8:	429a      	cmp	r2, r3
 8004fda:	d107      	bne.n	8004fec <_dtoa_r+0x70c>
 8004fdc:	2330      	movs	r3, #48	; 0x30
 8004fde:	7013      	strb	r3, [r2, #0]
 8004fe0:	0013      	movs	r3, r2
 8004fe2:	3601      	adds	r6, #1
 8004fe4:	781a      	ldrb	r2, [r3, #0]
 8004fe6:	3201      	adds	r2, #1
 8004fe8:	701a      	strb	r2, [r3, #0]
 8004fea:	e78a      	b.n	8004f02 <_dtoa_r+0x622>
 8004fec:	001d      	movs	r5, r3
 8004fee:	e7ee      	b.n	8004fce <_dtoa_r+0x6ee>
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	4bcf      	ldr	r3, [pc, #828]	; (8005330 <_dtoa_r+0xa50>)
 8004ff4:	f7fc fbe2 	bl	80017bc <__aeabi_dmul>
 8004ff8:	2200      	movs	r2, #0
 8004ffa:	2300      	movs	r3, #0
 8004ffc:	9006      	str	r0, [sp, #24]
 8004ffe:	9107      	str	r1, [sp, #28]
 8005000:	002e      	movs	r6, r5
 8005002:	f7fb fa23 	bl	800044c <__aeabi_dcmpeq>
 8005006:	2800      	cmp	r0, #0
 8005008:	d100      	bne.n	800500c <_dtoa_r+0x72c>
 800500a:	e787      	b.n	8004f1c <_dtoa_r+0x63c>
 800500c:	e7bb      	b.n	8004f86 <_dtoa_r+0x6a6>
 800500e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005010:	2a00      	cmp	r2, #0
 8005012:	d100      	bne.n	8005016 <_dtoa_r+0x736>
 8005014:	e087      	b.n	8005126 <_dtoa_r+0x846>
 8005016:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005018:	2a01      	cmp	r2, #1
 800501a:	dc6e      	bgt.n	80050fa <_dtoa_r+0x81a>
 800501c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800501e:	2a00      	cmp	r2, #0
 8005020:	d067      	beq.n	80050f2 <_dtoa_r+0x812>
 8005022:	4ac4      	ldr	r2, [pc, #784]	; (8005334 <_dtoa_r+0xa54>)
 8005024:	189b      	adds	r3, r3, r2
 8005026:	9d08      	ldr	r5, [sp, #32]
 8005028:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800502a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800502c:	2101      	movs	r1, #1
 800502e:	18d2      	adds	r2, r2, r3
 8005030:	920b      	str	r2, [sp, #44]	; 0x2c
 8005032:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005034:	9804      	ldr	r0, [sp, #16]
 8005036:	18d3      	adds	r3, r2, r3
 8005038:	930c      	str	r3, [sp, #48]	; 0x30
 800503a:	f000 fb39 	bl	80056b0 <__i2b>
 800503e:	0006      	movs	r6, r0
 8005040:	2c00      	cmp	r4, #0
 8005042:	dd0e      	ble.n	8005062 <_dtoa_r+0x782>
 8005044:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005046:	2b00      	cmp	r3, #0
 8005048:	dd0b      	ble.n	8005062 <_dtoa_r+0x782>
 800504a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800504c:	0023      	movs	r3, r4
 800504e:	4294      	cmp	r4, r2
 8005050:	dd00      	ble.n	8005054 <_dtoa_r+0x774>
 8005052:	0013      	movs	r3, r2
 8005054:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005056:	1ae4      	subs	r4, r4, r3
 8005058:	1ad2      	subs	r2, r2, r3
 800505a:	920b      	str	r2, [sp, #44]	; 0x2c
 800505c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800505e:	1ad3      	subs	r3, r2, r3
 8005060:	930c      	str	r3, [sp, #48]	; 0x30
 8005062:	9b08      	ldr	r3, [sp, #32]
 8005064:	2b00      	cmp	r3, #0
 8005066:	d01e      	beq.n	80050a6 <_dtoa_r+0x7c6>
 8005068:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800506a:	2b00      	cmp	r3, #0
 800506c:	d05f      	beq.n	800512e <_dtoa_r+0x84e>
 800506e:	2d00      	cmp	r5, #0
 8005070:	dd11      	ble.n	8005096 <_dtoa_r+0x7b6>
 8005072:	0031      	movs	r1, r6
 8005074:	002a      	movs	r2, r5
 8005076:	9804      	ldr	r0, [sp, #16]
 8005078:	f000 fbb2 	bl	80057e0 <__pow5mult>
 800507c:	9a05      	ldr	r2, [sp, #20]
 800507e:	0001      	movs	r1, r0
 8005080:	0006      	movs	r6, r0
 8005082:	9804      	ldr	r0, [sp, #16]
 8005084:	f000 fb1d 	bl	80056c2 <__multiply>
 8005088:	9905      	ldr	r1, [sp, #20]
 800508a:	9010      	str	r0, [sp, #64]	; 0x40
 800508c:	9804      	ldr	r0, [sp, #16]
 800508e:	f000 fa71 	bl	8005574 <_Bfree>
 8005092:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005094:	9305      	str	r3, [sp, #20]
 8005096:	9b08      	ldr	r3, [sp, #32]
 8005098:	1b5a      	subs	r2, r3, r5
 800509a:	d004      	beq.n	80050a6 <_dtoa_r+0x7c6>
 800509c:	9905      	ldr	r1, [sp, #20]
 800509e:	9804      	ldr	r0, [sp, #16]
 80050a0:	f000 fb9e 	bl	80057e0 <__pow5mult>
 80050a4:	9005      	str	r0, [sp, #20]
 80050a6:	2101      	movs	r1, #1
 80050a8:	9804      	ldr	r0, [sp, #16]
 80050aa:	f000 fb01 	bl	80056b0 <__i2b>
 80050ae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80050b0:	9008      	str	r0, [sp, #32]
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	dd3d      	ble.n	8005132 <_dtoa_r+0x852>
 80050b6:	001a      	movs	r2, r3
 80050b8:	0001      	movs	r1, r0
 80050ba:	9804      	ldr	r0, [sp, #16]
 80050bc:	f000 fb90 	bl	80057e0 <__pow5mult>
 80050c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80050c2:	9008      	str	r0, [sp, #32]
 80050c4:	2500      	movs	r5, #0
 80050c6:	2b01      	cmp	r3, #1
 80050c8:	dc3b      	bgt.n	8005142 <_dtoa_r+0x862>
 80050ca:	2500      	movs	r5, #0
 80050cc:	9b06      	ldr	r3, [sp, #24]
 80050ce:	42ab      	cmp	r3, r5
 80050d0:	d133      	bne.n	800513a <_dtoa_r+0x85a>
 80050d2:	9b07      	ldr	r3, [sp, #28]
 80050d4:	031b      	lsls	r3, r3, #12
 80050d6:	42ab      	cmp	r3, r5
 80050d8:	d12f      	bne.n	800513a <_dtoa_r+0x85a>
 80050da:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80050dc:	9a07      	ldr	r2, [sp, #28]
 80050de:	4213      	tst	r3, r2
 80050e0:	d02b      	beq.n	800513a <_dtoa_r+0x85a>
 80050e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80050e4:	3501      	adds	r5, #1
 80050e6:	3301      	adds	r3, #1
 80050e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80050ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80050ec:	3301      	adds	r3, #1
 80050ee:	930c      	str	r3, [sp, #48]	; 0x30
 80050f0:	e023      	b.n	800513a <_dtoa_r+0x85a>
 80050f2:	2336      	movs	r3, #54	; 0x36
 80050f4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80050f6:	1a9b      	subs	r3, r3, r2
 80050f8:	e795      	b.n	8005026 <_dtoa_r+0x746>
 80050fa:	9b08      	ldr	r3, [sp, #32]
 80050fc:	1e7d      	subs	r5, r7, #1
 80050fe:	42ab      	cmp	r3, r5
 8005100:	db06      	blt.n	8005110 <_dtoa_r+0x830>
 8005102:	1b5d      	subs	r5, r3, r5
 8005104:	2f00      	cmp	r7, #0
 8005106:	da0b      	bge.n	8005120 <_dtoa_r+0x840>
 8005108:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800510a:	1bdc      	subs	r4, r3, r7
 800510c:	2300      	movs	r3, #0
 800510e:	e78c      	b.n	800502a <_dtoa_r+0x74a>
 8005110:	9b08      	ldr	r3, [sp, #32]
 8005112:	9508      	str	r5, [sp, #32]
 8005114:	1aea      	subs	r2, r5, r3
 8005116:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005118:	2500      	movs	r5, #0
 800511a:	189b      	adds	r3, r3, r2
 800511c:	930f      	str	r3, [sp, #60]	; 0x3c
 800511e:	e7f1      	b.n	8005104 <_dtoa_r+0x824>
 8005120:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005122:	003b      	movs	r3, r7
 8005124:	e781      	b.n	800502a <_dtoa_r+0x74a>
 8005126:	9d08      	ldr	r5, [sp, #32]
 8005128:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800512a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800512c:	e788      	b.n	8005040 <_dtoa_r+0x760>
 800512e:	9a08      	ldr	r2, [sp, #32]
 8005130:	e7b4      	b.n	800509c <_dtoa_r+0x7bc>
 8005132:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005134:	2500      	movs	r5, #0
 8005136:	2b01      	cmp	r3, #1
 8005138:	ddc7      	ble.n	80050ca <_dtoa_r+0x7ea>
 800513a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800513c:	2001      	movs	r0, #1
 800513e:	2b00      	cmp	r3, #0
 8005140:	d00b      	beq.n	800515a <_dtoa_r+0x87a>
 8005142:	9b08      	ldr	r3, [sp, #32]
 8005144:	9a08      	ldr	r2, [sp, #32]
 8005146:	691b      	ldr	r3, [r3, #16]
 8005148:	930f      	str	r3, [sp, #60]	; 0x3c
 800514a:	3303      	adds	r3, #3
 800514c:	009b      	lsls	r3, r3, #2
 800514e:	18d3      	adds	r3, r2, r3
 8005150:	6858      	ldr	r0, [r3, #4]
 8005152:	f000 fa64 	bl	800561e <__hi0bits>
 8005156:	2320      	movs	r3, #32
 8005158:	1a18      	subs	r0, r3, r0
 800515a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800515c:	18c0      	adds	r0, r0, r3
 800515e:	231f      	movs	r3, #31
 8005160:	4018      	ands	r0, r3
 8005162:	d100      	bne.n	8005166 <_dtoa_r+0x886>
 8005164:	e0ab      	b.n	80052be <_dtoa_r+0x9de>
 8005166:	3301      	adds	r3, #1
 8005168:	1a1b      	subs	r3, r3, r0
 800516a:	2b04      	cmp	r3, #4
 800516c:	dc00      	bgt.n	8005170 <_dtoa_r+0x890>
 800516e:	e09b      	b.n	80052a8 <_dtoa_r+0x9c8>
 8005170:	231c      	movs	r3, #28
 8005172:	1a18      	subs	r0, r3, r0
 8005174:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005176:	1824      	adds	r4, r4, r0
 8005178:	181b      	adds	r3, r3, r0
 800517a:	930b      	str	r3, [sp, #44]	; 0x2c
 800517c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800517e:	181b      	adds	r3, r3, r0
 8005180:	930c      	str	r3, [sp, #48]	; 0x30
 8005182:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005184:	2b00      	cmp	r3, #0
 8005186:	dd05      	ble.n	8005194 <_dtoa_r+0x8b4>
 8005188:	001a      	movs	r2, r3
 800518a:	9905      	ldr	r1, [sp, #20]
 800518c:	9804      	ldr	r0, [sp, #16]
 800518e:	f000 fb79 	bl	8005884 <__lshift>
 8005192:	9005      	str	r0, [sp, #20]
 8005194:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005196:	2b00      	cmp	r3, #0
 8005198:	dd05      	ble.n	80051a6 <_dtoa_r+0x8c6>
 800519a:	001a      	movs	r2, r3
 800519c:	9908      	ldr	r1, [sp, #32]
 800519e:	9804      	ldr	r0, [sp, #16]
 80051a0:	f000 fb70 	bl	8005884 <__lshift>
 80051a4:	9008      	str	r0, [sp, #32]
 80051a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d100      	bne.n	80051ae <_dtoa_r+0x8ce>
 80051ac:	e089      	b.n	80052c2 <_dtoa_r+0x9e2>
 80051ae:	9908      	ldr	r1, [sp, #32]
 80051b0:	9805      	ldr	r0, [sp, #20]
 80051b2:	f000 fbb8 	bl	8005926 <__mcmp>
 80051b6:	2800      	cmp	r0, #0
 80051b8:	db00      	blt.n	80051bc <_dtoa_r+0x8dc>
 80051ba:	e082      	b.n	80052c2 <_dtoa_r+0x9e2>
 80051bc:	9b03      	ldr	r3, [sp, #12]
 80051be:	220a      	movs	r2, #10
 80051c0:	3b01      	subs	r3, #1
 80051c2:	9303      	str	r3, [sp, #12]
 80051c4:	9905      	ldr	r1, [sp, #20]
 80051c6:	2300      	movs	r3, #0
 80051c8:	9804      	ldr	r0, [sp, #16]
 80051ca:	f000 f9ec 	bl	80055a6 <__multadd>
 80051ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80051d0:	9005      	str	r0, [sp, #20]
 80051d2:	2b00      	cmp	r3, #0
 80051d4:	d100      	bne.n	80051d8 <_dtoa_r+0x8f8>
 80051d6:	e15d      	b.n	8005494 <_dtoa_r+0xbb4>
 80051d8:	2300      	movs	r3, #0
 80051da:	0031      	movs	r1, r6
 80051dc:	220a      	movs	r2, #10
 80051de:	9804      	ldr	r0, [sp, #16]
 80051e0:	f000 f9e1 	bl	80055a6 <__multadd>
 80051e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80051e6:	0006      	movs	r6, r0
 80051e8:	2b00      	cmp	r3, #0
 80051ea:	dc02      	bgt.n	80051f2 <_dtoa_r+0x912>
 80051ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80051ee:	2b02      	cmp	r3, #2
 80051f0:	dc6d      	bgt.n	80052ce <_dtoa_r+0x9ee>
 80051f2:	2c00      	cmp	r4, #0
 80051f4:	dd05      	ble.n	8005202 <_dtoa_r+0x922>
 80051f6:	0031      	movs	r1, r6
 80051f8:	0022      	movs	r2, r4
 80051fa:	9804      	ldr	r0, [sp, #16]
 80051fc:	f000 fb42 	bl	8005884 <__lshift>
 8005200:	0006      	movs	r6, r0
 8005202:	0030      	movs	r0, r6
 8005204:	2d00      	cmp	r5, #0
 8005206:	d011      	beq.n	800522c <_dtoa_r+0x94c>
 8005208:	6871      	ldr	r1, [r6, #4]
 800520a:	9804      	ldr	r0, [sp, #16]
 800520c:	f000 f97a 	bl	8005504 <_Balloc>
 8005210:	0031      	movs	r1, r6
 8005212:	0004      	movs	r4, r0
 8005214:	6933      	ldr	r3, [r6, #16]
 8005216:	310c      	adds	r1, #12
 8005218:	1c9a      	adds	r2, r3, #2
 800521a:	0092      	lsls	r2, r2, #2
 800521c:	300c      	adds	r0, #12
 800521e:	f000 f968 	bl	80054f2 <memcpy>
 8005222:	2201      	movs	r2, #1
 8005224:	0021      	movs	r1, r4
 8005226:	9804      	ldr	r0, [sp, #16]
 8005228:	f000 fb2c 	bl	8005884 <__lshift>
 800522c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800522e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005230:	3f01      	subs	r7, #1
 8005232:	930b      	str	r3, [sp, #44]	; 0x2c
 8005234:	19db      	adds	r3, r3, r7
 8005236:	0037      	movs	r7, r6
 8005238:	0006      	movs	r6, r0
 800523a:	930f      	str	r3, [sp, #60]	; 0x3c
 800523c:	9908      	ldr	r1, [sp, #32]
 800523e:	9805      	ldr	r0, [sp, #20]
 8005240:	f7ff faca 	bl	80047d8 <quorem>
 8005244:	0039      	movs	r1, r7
 8005246:	900d      	str	r0, [sp, #52]	; 0x34
 8005248:	0004      	movs	r4, r0
 800524a:	9805      	ldr	r0, [sp, #20]
 800524c:	f000 fb6b 	bl	8005926 <__mcmp>
 8005250:	0032      	movs	r2, r6
 8005252:	900e      	str	r0, [sp, #56]	; 0x38
 8005254:	9908      	ldr	r1, [sp, #32]
 8005256:	9804      	ldr	r0, [sp, #16]
 8005258:	f000 fb7e 	bl	8005958 <__mdiff>
 800525c:	2301      	movs	r3, #1
 800525e:	930c      	str	r3, [sp, #48]	; 0x30
 8005260:	68c3      	ldr	r3, [r0, #12]
 8005262:	3430      	adds	r4, #48	; 0x30
 8005264:	0005      	movs	r5, r0
 8005266:	2b00      	cmp	r3, #0
 8005268:	d104      	bne.n	8005274 <_dtoa_r+0x994>
 800526a:	0001      	movs	r1, r0
 800526c:	9805      	ldr	r0, [sp, #20]
 800526e:	f000 fb5a 	bl	8005926 <__mcmp>
 8005272:	900c      	str	r0, [sp, #48]	; 0x30
 8005274:	0029      	movs	r1, r5
 8005276:	9804      	ldr	r0, [sp, #16]
 8005278:	f000 f97c 	bl	8005574 <_Bfree>
 800527c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800527e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8005280:	4313      	orrs	r3, r2
 8005282:	d000      	beq.n	8005286 <_dtoa_r+0x9a6>
 8005284:	e089      	b.n	800539a <_dtoa_r+0xaba>
 8005286:	9a06      	ldr	r2, [sp, #24]
 8005288:	3301      	adds	r3, #1
 800528a:	4213      	tst	r3, r2
 800528c:	d000      	beq.n	8005290 <_dtoa_r+0x9b0>
 800528e:	e084      	b.n	800539a <_dtoa_r+0xaba>
 8005290:	2c39      	cmp	r4, #57	; 0x39
 8005292:	d100      	bne.n	8005296 <_dtoa_r+0x9b6>
 8005294:	e0a3      	b.n	80053de <_dtoa_r+0xafe>
 8005296:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005298:	2b00      	cmp	r3, #0
 800529a:	dd01      	ble.n	80052a0 <_dtoa_r+0x9c0>
 800529c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800529e:	3431      	adds	r4, #49	; 0x31
 80052a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80052a2:	1c5d      	adds	r5, r3, #1
 80052a4:	701c      	strb	r4, [r3, #0]
 80052a6:	e027      	b.n	80052f8 <_dtoa_r+0xa18>
 80052a8:	2b04      	cmp	r3, #4
 80052aa:	d100      	bne.n	80052ae <_dtoa_r+0x9ce>
 80052ac:	e769      	b.n	8005182 <_dtoa_r+0x8a2>
 80052ae:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80052b0:	331c      	adds	r3, #28
 80052b2:	18d2      	adds	r2, r2, r3
 80052b4:	920b      	str	r2, [sp, #44]	; 0x2c
 80052b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80052b8:	18e4      	adds	r4, r4, r3
 80052ba:	18d3      	adds	r3, r2, r3
 80052bc:	e760      	b.n	8005180 <_dtoa_r+0x8a0>
 80052be:	0003      	movs	r3, r0
 80052c0:	e7f5      	b.n	80052ae <_dtoa_r+0x9ce>
 80052c2:	2f00      	cmp	r7, #0
 80052c4:	dc3c      	bgt.n	8005340 <_dtoa_r+0xa60>
 80052c6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80052c8:	2b02      	cmp	r3, #2
 80052ca:	dd39      	ble.n	8005340 <_dtoa_r+0xa60>
 80052cc:	970d      	str	r7, [sp, #52]	; 0x34
 80052ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d10c      	bne.n	80052ee <_dtoa_r+0xa0e>
 80052d4:	9908      	ldr	r1, [sp, #32]
 80052d6:	2205      	movs	r2, #5
 80052d8:	9804      	ldr	r0, [sp, #16]
 80052da:	f000 f964 	bl	80055a6 <__multadd>
 80052de:	9008      	str	r0, [sp, #32]
 80052e0:	0001      	movs	r1, r0
 80052e2:	9805      	ldr	r0, [sp, #20]
 80052e4:	f000 fb1f 	bl	8005926 <__mcmp>
 80052e8:	2800      	cmp	r0, #0
 80052ea:	dd00      	ble.n	80052ee <_dtoa_r+0xa0e>
 80052ec:	e55a      	b.n	8004da4 <_dtoa_r+0x4c4>
 80052ee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80052f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80052f2:	43db      	mvns	r3, r3
 80052f4:	9303      	str	r3, [sp, #12]
 80052f6:	2700      	movs	r7, #0
 80052f8:	9908      	ldr	r1, [sp, #32]
 80052fa:	9804      	ldr	r0, [sp, #16]
 80052fc:	f000 f93a 	bl	8005574 <_Bfree>
 8005300:	2e00      	cmp	r6, #0
 8005302:	d100      	bne.n	8005306 <_dtoa_r+0xa26>
 8005304:	e63f      	b.n	8004f86 <_dtoa_r+0x6a6>
 8005306:	2f00      	cmp	r7, #0
 8005308:	d005      	beq.n	8005316 <_dtoa_r+0xa36>
 800530a:	42b7      	cmp	r7, r6
 800530c:	d003      	beq.n	8005316 <_dtoa_r+0xa36>
 800530e:	0039      	movs	r1, r7
 8005310:	9804      	ldr	r0, [sp, #16]
 8005312:	f000 f92f 	bl	8005574 <_Bfree>
 8005316:	0031      	movs	r1, r6
 8005318:	9804      	ldr	r0, [sp, #16]
 800531a:	f000 f92b 	bl	8005574 <_Bfree>
 800531e:	e632      	b.n	8004f86 <_dtoa_r+0x6a6>
 8005320:	9508      	str	r5, [sp, #32]
 8005322:	002e      	movs	r6, r5
 8005324:	e7e3      	b.n	80052ee <_dtoa_r+0xa0e>
 8005326:	2300      	movs	r3, #0
 8005328:	9308      	str	r3, [sp, #32]
 800532a:	001e      	movs	r6, r3
 800532c:	e7df      	b.n	80052ee <_dtoa_r+0xa0e>
 800532e:	46c0      	nop			; (mov r8, r8)
 8005330:	40240000 	.word	0x40240000
 8005334:	00000433 	.word	0x00000433
 8005338:	9603      	str	r6, [sp, #12]
 800533a:	9508      	str	r5, [sp, #32]
 800533c:	002e      	movs	r6, r5
 800533e:	e531      	b.n	8004da4 <_dtoa_r+0x4c4>
 8005340:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005342:	970d      	str	r7, [sp, #52]	; 0x34
 8005344:	2b00      	cmp	r3, #0
 8005346:	d000      	beq.n	800534a <_dtoa_r+0xa6a>
 8005348:	e753      	b.n	80051f2 <_dtoa_r+0x912>
 800534a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800534c:	9908      	ldr	r1, [sp, #32]
 800534e:	9805      	ldr	r0, [sp, #20]
 8005350:	f7ff fa42 	bl	80047d8 <quorem>
 8005354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005356:	3030      	adds	r0, #48	; 0x30
 8005358:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800535a:	7028      	strb	r0, [r5, #0]
 800535c:	3501      	adds	r5, #1
 800535e:	0004      	movs	r4, r0
 8005360:	1aeb      	subs	r3, r5, r3
 8005362:	429a      	cmp	r2, r3
 8005364:	dc78      	bgt.n	8005458 <_dtoa_r+0xb78>
 8005366:	1e15      	subs	r5, r2, #0
 8005368:	dc00      	bgt.n	800536c <_dtoa_r+0xa8c>
 800536a:	2501      	movs	r5, #1
 800536c:	2700      	movs	r7, #0
 800536e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005370:	195d      	adds	r5, r3, r5
 8005372:	9905      	ldr	r1, [sp, #20]
 8005374:	2201      	movs	r2, #1
 8005376:	9804      	ldr	r0, [sp, #16]
 8005378:	f000 fa84 	bl	8005884 <__lshift>
 800537c:	9908      	ldr	r1, [sp, #32]
 800537e:	9005      	str	r0, [sp, #20]
 8005380:	f000 fad1 	bl	8005926 <__mcmp>
 8005384:	2800      	cmp	r0, #0
 8005386:	dc2f      	bgt.n	80053e8 <_dtoa_r+0xb08>
 8005388:	d101      	bne.n	800538e <_dtoa_r+0xaae>
 800538a:	07e3      	lsls	r3, r4, #31
 800538c:	d42c      	bmi.n	80053e8 <_dtoa_r+0xb08>
 800538e:	1e6b      	subs	r3, r5, #1
 8005390:	781a      	ldrb	r2, [r3, #0]
 8005392:	2a30      	cmp	r2, #48	; 0x30
 8005394:	d1b0      	bne.n	80052f8 <_dtoa_r+0xa18>
 8005396:	001d      	movs	r5, r3
 8005398:	e7f9      	b.n	800538e <_dtoa_r+0xaae>
 800539a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800539c:	2b00      	cmp	r3, #0
 800539e:	db07      	blt.n	80053b0 <_dtoa_r+0xad0>
 80053a0:	001d      	movs	r5, r3
 80053a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80053a4:	431d      	orrs	r5, r3
 80053a6:	d126      	bne.n	80053f6 <_dtoa_r+0xb16>
 80053a8:	2301      	movs	r3, #1
 80053aa:	9a06      	ldr	r2, [sp, #24]
 80053ac:	4213      	tst	r3, r2
 80053ae:	d122      	bne.n	80053f6 <_dtoa_r+0xb16>
 80053b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	dc00      	bgt.n	80053b8 <_dtoa_r+0xad8>
 80053b6:	e773      	b.n	80052a0 <_dtoa_r+0x9c0>
 80053b8:	9905      	ldr	r1, [sp, #20]
 80053ba:	2201      	movs	r2, #1
 80053bc:	9804      	ldr	r0, [sp, #16]
 80053be:	f000 fa61 	bl	8005884 <__lshift>
 80053c2:	9908      	ldr	r1, [sp, #32]
 80053c4:	9005      	str	r0, [sp, #20]
 80053c6:	f000 faae 	bl	8005926 <__mcmp>
 80053ca:	2800      	cmp	r0, #0
 80053cc:	dc04      	bgt.n	80053d8 <_dtoa_r+0xaf8>
 80053ce:	d000      	beq.n	80053d2 <_dtoa_r+0xaf2>
 80053d0:	e766      	b.n	80052a0 <_dtoa_r+0x9c0>
 80053d2:	07e3      	lsls	r3, r4, #31
 80053d4:	d400      	bmi.n	80053d8 <_dtoa_r+0xaf8>
 80053d6:	e763      	b.n	80052a0 <_dtoa_r+0x9c0>
 80053d8:	2c39      	cmp	r4, #57	; 0x39
 80053da:	d000      	beq.n	80053de <_dtoa_r+0xafe>
 80053dc:	e75e      	b.n	800529c <_dtoa_r+0x9bc>
 80053de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80053e0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80053e2:	1c5d      	adds	r5, r3, #1
 80053e4:	2339      	movs	r3, #57	; 0x39
 80053e6:	7013      	strb	r3, [r2, #0]
 80053e8:	1e6b      	subs	r3, r5, #1
 80053ea:	781a      	ldrb	r2, [r3, #0]
 80053ec:	2a39      	cmp	r2, #57	; 0x39
 80053ee:	d03b      	beq.n	8005468 <_dtoa_r+0xb88>
 80053f0:	3201      	adds	r2, #1
 80053f2:	701a      	strb	r2, [r3, #0]
 80053f4:	e780      	b.n	80052f8 <_dtoa_r+0xa18>
 80053f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80053f8:	3301      	adds	r3, #1
 80053fa:	930d      	str	r3, [sp, #52]	; 0x34
 80053fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053fe:	2b00      	cmp	r3, #0
 8005400:	dd05      	ble.n	800540e <_dtoa_r+0xb2e>
 8005402:	2c39      	cmp	r4, #57	; 0x39
 8005404:	d0eb      	beq.n	80053de <_dtoa_r+0xafe>
 8005406:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8005408:	3401      	adds	r4, #1
 800540a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800540c:	e74a      	b.n	80052a4 <_dtoa_r+0x9c4>
 800540e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005410:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005412:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8005414:	701c      	strb	r4, [r3, #0]
 8005416:	4293      	cmp	r3, r2
 8005418:	d0ab      	beq.n	8005372 <_dtoa_r+0xa92>
 800541a:	2300      	movs	r3, #0
 800541c:	220a      	movs	r2, #10
 800541e:	9905      	ldr	r1, [sp, #20]
 8005420:	9804      	ldr	r0, [sp, #16]
 8005422:	f000 f8c0 	bl	80055a6 <__multadd>
 8005426:	2300      	movs	r3, #0
 8005428:	9005      	str	r0, [sp, #20]
 800542a:	220a      	movs	r2, #10
 800542c:	0039      	movs	r1, r7
 800542e:	9804      	ldr	r0, [sp, #16]
 8005430:	42b7      	cmp	r7, r6
 8005432:	d106      	bne.n	8005442 <_dtoa_r+0xb62>
 8005434:	f000 f8b7 	bl	80055a6 <__multadd>
 8005438:	0007      	movs	r7, r0
 800543a:	0006      	movs	r6, r0
 800543c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800543e:	930b      	str	r3, [sp, #44]	; 0x2c
 8005440:	e6fc      	b.n	800523c <_dtoa_r+0x95c>
 8005442:	f000 f8b0 	bl	80055a6 <__multadd>
 8005446:	0031      	movs	r1, r6
 8005448:	0007      	movs	r7, r0
 800544a:	2300      	movs	r3, #0
 800544c:	220a      	movs	r2, #10
 800544e:	9804      	ldr	r0, [sp, #16]
 8005450:	f000 f8a9 	bl	80055a6 <__multadd>
 8005454:	0006      	movs	r6, r0
 8005456:	e7f1      	b.n	800543c <_dtoa_r+0xb5c>
 8005458:	2300      	movs	r3, #0
 800545a:	220a      	movs	r2, #10
 800545c:	9905      	ldr	r1, [sp, #20]
 800545e:	9804      	ldr	r0, [sp, #16]
 8005460:	f000 f8a1 	bl	80055a6 <__multadd>
 8005464:	9005      	str	r0, [sp, #20]
 8005466:	e771      	b.n	800534c <_dtoa_r+0xa6c>
 8005468:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800546a:	429a      	cmp	r2, r3
 800546c:	d105      	bne.n	800547a <_dtoa_r+0xb9a>
 800546e:	9b03      	ldr	r3, [sp, #12]
 8005470:	3301      	adds	r3, #1
 8005472:	9303      	str	r3, [sp, #12]
 8005474:	2331      	movs	r3, #49	; 0x31
 8005476:	7013      	strb	r3, [r2, #0]
 8005478:	e73e      	b.n	80052f8 <_dtoa_r+0xa18>
 800547a:	001d      	movs	r5, r3
 800547c:	e7b4      	b.n	80053e8 <_dtoa_r+0xb08>
 800547e:	4b0a      	ldr	r3, [pc, #40]	; (80054a8 <_dtoa_r+0xbc8>)
 8005480:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005482:	930a      	str	r3, [sp, #40]	; 0x28
 8005484:	4b09      	ldr	r3, [pc, #36]	; (80054ac <_dtoa_r+0xbcc>)
 8005486:	2a00      	cmp	r2, #0
 8005488:	d001      	beq.n	800548e <_dtoa_r+0xbae>
 800548a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800548c:	6013      	str	r3, [r2, #0]
 800548e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005490:	b01d      	add	sp, #116	; 0x74
 8005492:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005494:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005496:	2b00      	cmp	r3, #0
 8005498:	dd00      	ble.n	800549c <_dtoa_r+0xbbc>
 800549a:	e756      	b.n	800534a <_dtoa_r+0xa6a>
 800549c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800549e:	2b02      	cmp	r3, #2
 80054a0:	dc00      	bgt.n	80054a4 <_dtoa_r+0xbc4>
 80054a2:	e752      	b.n	800534a <_dtoa_r+0xa6a>
 80054a4:	e713      	b.n	80052ce <_dtoa_r+0x9ee>
 80054a6:	46c0      	nop			; (mov r8, r8)
 80054a8:	0800612b 	.word	0x0800612b
 80054ac:	08006133 	.word	0x08006133

080054b0 <_localeconv_r>:
 80054b0:	4b03      	ldr	r3, [pc, #12]	; (80054c0 <_localeconv_r+0x10>)
 80054b2:	681b      	ldr	r3, [r3, #0]
 80054b4:	6a18      	ldr	r0, [r3, #32]
 80054b6:	2800      	cmp	r0, #0
 80054b8:	d100      	bne.n	80054bc <_localeconv_r+0xc>
 80054ba:	4802      	ldr	r0, [pc, #8]	; (80054c4 <_localeconv_r+0x14>)
 80054bc:	30f0      	adds	r0, #240	; 0xf0
 80054be:	4770      	bx	lr
 80054c0:	20000008 	.word	0x20000008
 80054c4:	2000006c 	.word	0x2000006c

080054c8 <malloc>:
 80054c8:	b510      	push	{r4, lr}
 80054ca:	4b03      	ldr	r3, [pc, #12]	; (80054d8 <malloc+0x10>)
 80054cc:	0001      	movs	r1, r0
 80054ce:	6818      	ldr	r0, [r3, #0]
 80054d0:	f000 fb52 	bl	8005b78 <_malloc_r>
 80054d4:	bd10      	pop	{r4, pc}
 80054d6:	46c0      	nop			; (mov r8, r8)
 80054d8:	20000008 	.word	0x20000008

080054dc <memchr>:
 80054dc:	b2c9      	uxtb	r1, r1
 80054de:	1882      	adds	r2, r0, r2
 80054e0:	4290      	cmp	r0, r2
 80054e2:	d101      	bne.n	80054e8 <memchr+0xc>
 80054e4:	2000      	movs	r0, #0
 80054e6:	4770      	bx	lr
 80054e8:	7803      	ldrb	r3, [r0, #0]
 80054ea:	428b      	cmp	r3, r1
 80054ec:	d0fb      	beq.n	80054e6 <memchr+0xa>
 80054ee:	3001      	adds	r0, #1
 80054f0:	e7f6      	b.n	80054e0 <memchr+0x4>

080054f2 <memcpy>:
 80054f2:	2300      	movs	r3, #0
 80054f4:	b510      	push	{r4, lr}
 80054f6:	429a      	cmp	r2, r3
 80054f8:	d100      	bne.n	80054fc <memcpy+0xa>
 80054fa:	bd10      	pop	{r4, pc}
 80054fc:	5ccc      	ldrb	r4, [r1, r3]
 80054fe:	54c4      	strb	r4, [r0, r3]
 8005500:	3301      	adds	r3, #1
 8005502:	e7f8      	b.n	80054f6 <memcpy+0x4>

08005504 <_Balloc>:
 8005504:	b570      	push	{r4, r5, r6, lr}
 8005506:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005508:	0004      	movs	r4, r0
 800550a:	000d      	movs	r5, r1
 800550c:	2e00      	cmp	r6, #0
 800550e:	d107      	bne.n	8005520 <_Balloc+0x1c>
 8005510:	2010      	movs	r0, #16
 8005512:	f7ff ffd9 	bl	80054c8 <malloc>
 8005516:	6260      	str	r0, [r4, #36]	; 0x24
 8005518:	6046      	str	r6, [r0, #4]
 800551a:	6086      	str	r6, [r0, #8]
 800551c:	6006      	str	r6, [r0, #0]
 800551e:	60c6      	str	r6, [r0, #12]
 8005520:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8005522:	68f3      	ldr	r3, [r6, #12]
 8005524:	2b00      	cmp	r3, #0
 8005526:	d013      	beq.n	8005550 <_Balloc+0x4c>
 8005528:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800552a:	00aa      	lsls	r2, r5, #2
 800552c:	68db      	ldr	r3, [r3, #12]
 800552e:	189b      	adds	r3, r3, r2
 8005530:	6818      	ldr	r0, [r3, #0]
 8005532:	2800      	cmp	r0, #0
 8005534:	d118      	bne.n	8005568 <_Balloc+0x64>
 8005536:	2101      	movs	r1, #1
 8005538:	000e      	movs	r6, r1
 800553a:	40ae      	lsls	r6, r5
 800553c:	1d72      	adds	r2, r6, #5
 800553e:	0092      	lsls	r2, r2, #2
 8005540:	0020      	movs	r0, r4
 8005542:	f000 fac1 	bl	8005ac8 <_calloc_r>
 8005546:	2800      	cmp	r0, #0
 8005548:	d00c      	beq.n	8005564 <_Balloc+0x60>
 800554a:	6045      	str	r5, [r0, #4]
 800554c:	6086      	str	r6, [r0, #8]
 800554e:	e00d      	b.n	800556c <_Balloc+0x68>
 8005550:	2221      	movs	r2, #33	; 0x21
 8005552:	2104      	movs	r1, #4
 8005554:	0020      	movs	r0, r4
 8005556:	f000 fab7 	bl	8005ac8 <_calloc_r>
 800555a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800555c:	60f0      	str	r0, [r6, #12]
 800555e:	68db      	ldr	r3, [r3, #12]
 8005560:	2b00      	cmp	r3, #0
 8005562:	d1e1      	bne.n	8005528 <_Balloc+0x24>
 8005564:	2000      	movs	r0, #0
 8005566:	bd70      	pop	{r4, r5, r6, pc}
 8005568:	6802      	ldr	r2, [r0, #0]
 800556a:	601a      	str	r2, [r3, #0]
 800556c:	2300      	movs	r3, #0
 800556e:	6103      	str	r3, [r0, #16]
 8005570:	60c3      	str	r3, [r0, #12]
 8005572:	e7f8      	b.n	8005566 <_Balloc+0x62>

08005574 <_Bfree>:
 8005574:	b570      	push	{r4, r5, r6, lr}
 8005576:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005578:	0006      	movs	r6, r0
 800557a:	000d      	movs	r5, r1
 800557c:	2c00      	cmp	r4, #0
 800557e:	d107      	bne.n	8005590 <_Bfree+0x1c>
 8005580:	2010      	movs	r0, #16
 8005582:	f7ff ffa1 	bl	80054c8 <malloc>
 8005586:	6270      	str	r0, [r6, #36]	; 0x24
 8005588:	6044      	str	r4, [r0, #4]
 800558a:	6084      	str	r4, [r0, #8]
 800558c:	6004      	str	r4, [r0, #0]
 800558e:	60c4      	str	r4, [r0, #12]
 8005590:	2d00      	cmp	r5, #0
 8005592:	d007      	beq.n	80055a4 <_Bfree+0x30>
 8005594:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005596:	686a      	ldr	r2, [r5, #4]
 8005598:	68db      	ldr	r3, [r3, #12]
 800559a:	0092      	lsls	r2, r2, #2
 800559c:	189b      	adds	r3, r3, r2
 800559e:	681a      	ldr	r2, [r3, #0]
 80055a0:	602a      	str	r2, [r5, #0]
 80055a2:	601d      	str	r5, [r3, #0]
 80055a4:	bd70      	pop	{r4, r5, r6, pc}

080055a6 <__multadd>:
 80055a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80055a8:	001e      	movs	r6, r3
 80055aa:	2314      	movs	r3, #20
 80055ac:	469c      	mov	ip, r3
 80055ae:	0007      	movs	r7, r0
 80055b0:	000c      	movs	r4, r1
 80055b2:	2000      	movs	r0, #0
 80055b4:	690d      	ldr	r5, [r1, #16]
 80055b6:	448c      	add	ip, r1
 80055b8:	4663      	mov	r3, ip
 80055ba:	8819      	ldrh	r1, [r3, #0]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	4351      	muls	r1, r2
 80055c0:	0c1b      	lsrs	r3, r3, #16
 80055c2:	4353      	muls	r3, r2
 80055c4:	1989      	adds	r1, r1, r6
 80055c6:	0c0e      	lsrs	r6, r1, #16
 80055c8:	199b      	adds	r3, r3, r6
 80055ca:	b289      	uxth	r1, r1
 80055cc:	0c1e      	lsrs	r6, r3, #16
 80055ce:	041b      	lsls	r3, r3, #16
 80055d0:	185b      	adds	r3, r3, r1
 80055d2:	4661      	mov	r1, ip
 80055d4:	3001      	adds	r0, #1
 80055d6:	c108      	stmia	r1!, {r3}
 80055d8:	468c      	mov	ip, r1
 80055da:	4285      	cmp	r5, r0
 80055dc:	dcec      	bgt.n	80055b8 <__multadd+0x12>
 80055de:	2e00      	cmp	r6, #0
 80055e0:	d01b      	beq.n	800561a <__multadd+0x74>
 80055e2:	68a3      	ldr	r3, [r4, #8]
 80055e4:	429d      	cmp	r5, r3
 80055e6:	db12      	blt.n	800560e <__multadd+0x68>
 80055e8:	6863      	ldr	r3, [r4, #4]
 80055ea:	0038      	movs	r0, r7
 80055ec:	1c59      	adds	r1, r3, #1
 80055ee:	f7ff ff89 	bl	8005504 <_Balloc>
 80055f2:	0021      	movs	r1, r4
 80055f4:	6923      	ldr	r3, [r4, #16]
 80055f6:	9001      	str	r0, [sp, #4]
 80055f8:	1c9a      	adds	r2, r3, #2
 80055fa:	0092      	lsls	r2, r2, #2
 80055fc:	310c      	adds	r1, #12
 80055fe:	300c      	adds	r0, #12
 8005600:	f7ff ff77 	bl	80054f2 <memcpy>
 8005604:	0021      	movs	r1, r4
 8005606:	0038      	movs	r0, r7
 8005608:	f7ff ffb4 	bl	8005574 <_Bfree>
 800560c:	9c01      	ldr	r4, [sp, #4]
 800560e:	1d2b      	adds	r3, r5, #4
 8005610:	009b      	lsls	r3, r3, #2
 8005612:	18e3      	adds	r3, r4, r3
 8005614:	3501      	adds	r5, #1
 8005616:	605e      	str	r6, [r3, #4]
 8005618:	6125      	str	r5, [r4, #16]
 800561a:	0020      	movs	r0, r4
 800561c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0800561e <__hi0bits>:
 800561e:	0003      	movs	r3, r0
 8005620:	0c02      	lsrs	r2, r0, #16
 8005622:	2000      	movs	r0, #0
 8005624:	4282      	cmp	r2, r0
 8005626:	d101      	bne.n	800562c <__hi0bits+0xe>
 8005628:	041b      	lsls	r3, r3, #16
 800562a:	3010      	adds	r0, #16
 800562c:	0e1a      	lsrs	r2, r3, #24
 800562e:	d101      	bne.n	8005634 <__hi0bits+0x16>
 8005630:	3008      	adds	r0, #8
 8005632:	021b      	lsls	r3, r3, #8
 8005634:	0f1a      	lsrs	r2, r3, #28
 8005636:	d101      	bne.n	800563c <__hi0bits+0x1e>
 8005638:	3004      	adds	r0, #4
 800563a:	011b      	lsls	r3, r3, #4
 800563c:	0f9a      	lsrs	r2, r3, #30
 800563e:	d101      	bne.n	8005644 <__hi0bits+0x26>
 8005640:	3002      	adds	r0, #2
 8005642:	009b      	lsls	r3, r3, #2
 8005644:	2b00      	cmp	r3, #0
 8005646:	db03      	blt.n	8005650 <__hi0bits+0x32>
 8005648:	3001      	adds	r0, #1
 800564a:	005b      	lsls	r3, r3, #1
 800564c:	d400      	bmi.n	8005650 <__hi0bits+0x32>
 800564e:	2020      	movs	r0, #32
 8005650:	4770      	bx	lr

08005652 <__lo0bits>:
 8005652:	2207      	movs	r2, #7
 8005654:	6803      	ldr	r3, [r0, #0]
 8005656:	b510      	push	{r4, lr}
 8005658:	0001      	movs	r1, r0
 800565a:	401a      	ands	r2, r3
 800565c:	d00d      	beq.n	800567a <__lo0bits+0x28>
 800565e:	2401      	movs	r4, #1
 8005660:	2000      	movs	r0, #0
 8005662:	4223      	tst	r3, r4
 8005664:	d105      	bne.n	8005672 <__lo0bits+0x20>
 8005666:	3002      	adds	r0, #2
 8005668:	4203      	tst	r3, r0
 800566a:	d003      	beq.n	8005674 <__lo0bits+0x22>
 800566c:	40e3      	lsrs	r3, r4
 800566e:	0020      	movs	r0, r4
 8005670:	600b      	str	r3, [r1, #0]
 8005672:	bd10      	pop	{r4, pc}
 8005674:	089b      	lsrs	r3, r3, #2
 8005676:	600b      	str	r3, [r1, #0]
 8005678:	e7fb      	b.n	8005672 <__lo0bits+0x20>
 800567a:	b29c      	uxth	r4, r3
 800567c:	0010      	movs	r0, r2
 800567e:	2c00      	cmp	r4, #0
 8005680:	d101      	bne.n	8005686 <__lo0bits+0x34>
 8005682:	2010      	movs	r0, #16
 8005684:	0c1b      	lsrs	r3, r3, #16
 8005686:	b2da      	uxtb	r2, r3
 8005688:	2a00      	cmp	r2, #0
 800568a:	d101      	bne.n	8005690 <__lo0bits+0x3e>
 800568c:	3008      	adds	r0, #8
 800568e:	0a1b      	lsrs	r3, r3, #8
 8005690:	071a      	lsls	r2, r3, #28
 8005692:	d101      	bne.n	8005698 <__lo0bits+0x46>
 8005694:	3004      	adds	r0, #4
 8005696:	091b      	lsrs	r3, r3, #4
 8005698:	079a      	lsls	r2, r3, #30
 800569a:	d101      	bne.n	80056a0 <__lo0bits+0x4e>
 800569c:	3002      	adds	r0, #2
 800569e:	089b      	lsrs	r3, r3, #2
 80056a0:	07da      	lsls	r2, r3, #31
 80056a2:	d4e8      	bmi.n	8005676 <__lo0bits+0x24>
 80056a4:	085b      	lsrs	r3, r3, #1
 80056a6:	d001      	beq.n	80056ac <__lo0bits+0x5a>
 80056a8:	3001      	adds	r0, #1
 80056aa:	e7e4      	b.n	8005676 <__lo0bits+0x24>
 80056ac:	2020      	movs	r0, #32
 80056ae:	e7e0      	b.n	8005672 <__lo0bits+0x20>

080056b0 <__i2b>:
 80056b0:	b510      	push	{r4, lr}
 80056b2:	000c      	movs	r4, r1
 80056b4:	2101      	movs	r1, #1
 80056b6:	f7ff ff25 	bl	8005504 <_Balloc>
 80056ba:	2301      	movs	r3, #1
 80056bc:	6144      	str	r4, [r0, #20]
 80056be:	6103      	str	r3, [r0, #16]
 80056c0:	bd10      	pop	{r4, pc}

080056c2 <__multiply>:
 80056c2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80056c4:	690b      	ldr	r3, [r1, #16]
 80056c6:	0015      	movs	r5, r2
 80056c8:	6912      	ldr	r2, [r2, #16]
 80056ca:	b089      	sub	sp, #36	; 0x24
 80056cc:	000c      	movs	r4, r1
 80056ce:	4293      	cmp	r3, r2
 80056d0:	da01      	bge.n	80056d6 <__multiply+0x14>
 80056d2:	002c      	movs	r4, r5
 80056d4:	000d      	movs	r5, r1
 80056d6:	6927      	ldr	r7, [r4, #16]
 80056d8:	692e      	ldr	r6, [r5, #16]
 80056da:	68a2      	ldr	r2, [r4, #8]
 80056dc:	19bb      	adds	r3, r7, r6
 80056de:	6861      	ldr	r1, [r4, #4]
 80056e0:	9301      	str	r3, [sp, #4]
 80056e2:	4293      	cmp	r3, r2
 80056e4:	dd00      	ble.n	80056e8 <__multiply+0x26>
 80056e6:	3101      	adds	r1, #1
 80056e8:	f7ff ff0c 	bl	8005504 <_Balloc>
 80056ec:	0003      	movs	r3, r0
 80056ee:	3314      	adds	r3, #20
 80056f0:	9300      	str	r3, [sp, #0]
 80056f2:	9a00      	ldr	r2, [sp, #0]
 80056f4:	19bb      	adds	r3, r7, r6
 80056f6:	4694      	mov	ip, r2
 80056f8:	009b      	lsls	r3, r3, #2
 80056fa:	449c      	add	ip, r3
 80056fc:	0013      	movs	r3, r2
 80056fe:	2200      	movs	r2, #0
 8005700:	9004      	str	r0, [sp, #16]
 8005702:	4563      	cmp	r3, ip
 8005704:	d31c      	bcc.n	8005740 <__multiply+0x7e>
 8005706:	002a      	movs	r2, r5
 8005708:	3414      	adds	r4, #20
 800570a:	00bf      	lsls	r7, r7, #2
 800570c:	19e3      	adds	r3, r4, r7
 800570e:	3214      	adds	r2, #20
 8005710:	00b6      	lsls	r6, r6, #2
 8005712:	9305      	str	r3, [sp, #20]
 8005714:	1993      	adds	r3, r2, r6
 8005716:	9402      	str	r4, [sp, #8]
 8005718:	9306      	str	r3, [sp, #24]
 800571a:	9b06      	ldr	r3, [sp, #24]
 800571c:	429a      	cmp	r2, r3
 800571e:	d311      	bcc.n	8005744 <__multiply+0x82>
 8005720:	9b01      	ldr	r3, [sp, #4]
 8005722:	2b00      	cmp	r3, #0
 8005724:	dd06      	ble.n	8005734 <__multiply+0x72>
 8005726:	2304      	movs	r3, #4
 8005728:	425b      	negs	r3, r3
 800572a:	449c      	add	ip, r3
 800572c:	4663      	mov	r3, ip
 800572e:	681b      	ldr	r3, [r3, #0]
 8005730:	2b00      	cmp	r3, #0
 8005732:	d051      	beq.n	80057d8 <__multiply+0x116>
 8005734:	9b04      	ldr	r3, [sp, #16]
 8005736:	9a01      	ldr	r2, [sp, #4]
 8005738:	0018      	movs	r0, r3
 800573a:	611a      	str	r2, [r3, #16]
 800573c:	b009      	add	sp, #36	; 0x24
 800573e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005740:	c304      	stmia	r3!, {r2}
 8005742:	e7de      	b.n	8005702 <__multiply+0x40>
 8005744:	8814      	ldrh	r4, [r2, #0]
 8005746:	2c00      	cmp	r4, #0
 8005748:	d01e      	beq.n	8005788 <__multiply+0xc6>
 800574a:	2600      	movs	r6, #0
 800574c:	9d00      	ldr	r5, [sp, #0]
 800574e:	9f02      	ldr	r7, [sp, #8]
 8005750:	cf01      	ldmia	r7!, {r0}
 8005752:	9507      	str	r5, [sp, #28]
 8005754:	cd08      	ldmia	r5!, {r3}
 8005756:	9303      	str	r3, [sp, #12]
 8005758:	b283      	uxth	r3, r0
 800575a:	4363      	muls	r3, r4
 800575c:	0019      	movs	r1, r3
 800575e:	466b      	mov	r3, sp
 8005760:	0c00      	lsrs	r0, r0, #16
 8005762:	899b      	ldrh	r3, [r3, #12]
 8005764:	4360      	muls	r0, r4
 8005766:	18cb      	adds	r3, r1, r3
 8005768:	9903      	ldr	r1, [sp, #12]
 800576a:	199b      	adds	r3, r3, r6
 800576c:	0c09      	lsrs	r1, r1, #16
 800576e:	1841      	adds	r1, r0, r1
 8005770:	0c18      	lsrs	r0, r3, #16
 8005772:	1809      	adds	r1, r1, r0
 8005774:	0c0e      	lsrs	r6, r1, #16
 8005776:	b29b      	uxth	r3, r3
 8005778:	0409      	lsls	r1, r1, #16
 800577a:	430b      	orrs	r3, r1
 800577c:	9907      	ldr	r1, [sp, #28]
 800577e:	600b      	str	r3, [r1, #0]
 8005780:	9b05      	ldr	r3, [sp, #20]
 8005782:	42bb      	cmp	r3, r7
 8005784:	d8e4      	bhi.n	8005750 <__multiply+0x8e>
 8005786:	602e      	str	r6, [r5, #0]
 8005788:	6813      	ldr	r3, [r2, #0]
 800578a:	0c1b      	lsrs	r3, r3, #16
 800578c:	9303      	str	r3, [sp, #12]
 800578e:	d01e      	beq.n	80057ce <__multiply+0x10c>
 8005790:	2600      	movs	r6, #0
 8005792:	9b00      	ldr	r3, [sp, #0]
 8005794:	9c02      	ldr	r4, [sp, #8]
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	9800      	ldr	r0, [sp, #0]
 800579a:	0007      	movs	r7, r0
 800579c:	8821      	ldrh	r1, [r4, #0]
 800579e:	9d03      	ldr	r5, [sp, #12]
 80057a0:	b29b      	uxth	r3, r3
 80057a2:	4369      	muls	r1, r5
 80057a4:	c820      	ldmia	r0!, {r5}
 80057a6:	0c2d      	lsrs	r5, r5, #16
 80057a8:	1949      	adds	r1, r1, r5
 80057aa:	198e      	adds	r6, r1, r6
 80057ac:	0431      	lsls	r1, r6, #16
 80057ae:	430b      	orrs	r3, r1
 80057b0:	603b      	str	r3, [r7, #0]
 80057b2:	cc08      	ldmia	r4!, {r3}
 80057b4:	9903      	ldr	r1, [sp, #12]
 80057b6:	0c1b      	lsrs	r3, r3, #16
 80057b8:	434b      	muls	r3, r1
 80057ba:	6879      	ldr	r1, [r7, #4]
 80057bc:	0c36      	lsrs	r6, r6, #16
 80057be:	b289      	uxth	r1, r1
 80057c0:	185b      	adds	r3, r3, r1
 80057c2:	9905      	ldr	r1, [sp, #20]
 80057c4:	199b      	adds	r3, r3, r6
 80057c6:	0c1e      	lsrs	r6, r3, #16
 80057c8:	42a1      	cmp	r1, r4
 80057ca:	d8e6      	bhi.n	800579a <__multiply+0xd8>
 80057cc:	6003      	str	r3, [r0, #0]
 80057ce:	9b00      	ldr	r3, [sp, #0]
 80057d0:	3204      	adds	r2, #4
 80057d2:	3304      	adds	r3, #4
 80057d4:	9300      	str	r3, [sp, #0]
 80057d6:	e7a0      	b.n	800571a <__multiply+0x58>
 80057d8:	9b01      	ldr	r3, [sp, #4]
 80057da:	3b01      	subs	r3, #1
 80057dc:	9301      	str	r3, [sp, #4]
 80057de:	e79f      	b.n	8005720 <__multiply+0x5e>

080057e0 <__pow5mult>:
 80057e0:	2303      	movs	r3, #3
 80057e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80057e4:	4013      	ands	r3, r2
 80057e6:	0005      	movs	r5, r0
 80057e8:	000e      	movs	r6, r1
 80057ea:	0014      	movs	r4, r2
 80057ec:	2b00      	cmp	r3, #0
 80057ee:	d008      	beq.n	8005802 <__pow5mult+0x22>
 80057f0:	4922      	ldr	r1, [pc, #136]	; (800587c <__pow5mult+0x9c>)
 80057f2:	3b01      	subs	r3, #1
 80057f4:	009a      	lsls	r2, r3, #2
 80057f6:	5852      	ldr	r2, [r2, r1]
 80057f8:	2300      	movs	r3, #0
 80057fa:	0031      	movs	r1, r6
 80057fc:	f7ff fed3 	bl	80055a6 <__multadd>
 8005800:	0006      	movs	r6, r0
 8005802:	10a3      	asrs	r3, r4, #2
 8005804:	9301      	str	r3, [sp, #4]
 8005806:	d036      	beq.n	8005876 <__pow5mult+0x96>
 8005808:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 800580a:	2c00      	cmp	r4, #0
 800580c:	d107      	bne.n	800581e <__pow5mult+0x3e>
 800580e:	2010      	movs	r0, #16
 8005810:	f7ff fe5a 	bl	80054c8 <malloc>
 8005814:	6268      	str	r0, [r5, #36]	; 0x24
 8005816:	6044      	str	r4, [r0, #4]
 8005818:	6084      	str	r4, [r0, #8]
 800581a:	6004      	str	r4, [r0, #0]
 800581c:	60c4      	str	r4, [r0, #12]
 800581e:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 8005820:	68bc      	ldr	r4, [r7, #8]
 8005822:	2c00      	cmp	r4, #0
 8005824:	d107      	bne.n	8005836 <__pow5mult+0x56>
 8005826:	4916      	ldr	r1, [pc, #88]	; (8005880 <__pow5mult+0xa0>)
 8005828:	0028      	movs	r0, r5
 800582a:	f7ff ff41 	bl	80056b0 <__i2b>
 800582e:	2300      	movs	r3, #0
 8005830:	0004      	movs	r4, r0
 8005832:	60b8      	str	r0, [r7, #8]
 8005834:	6003      	str	r3, [r0, #0]
 8005836:	2201      	movs	r2, #1
 8005838:	9b01      	ldr	r3, [sp, #4]
 800583a:	4213      	tst	r3, r2
 800583c:	d00a      	beq.n	8005854 <__pow5mult+0x74>
 800583e:	0031      	movs	r1, r6
 8005840:	0022      	movs	r2, r4
 8005842:	0028      	movs	r0, r5
 8005844:	f7ff ff3d 	bl	80056c2 <__multiply>
 8005848:	0007      	movs	r7, r0
 800584a:	0031      	movs	r1, r6
 800584c:	0028      	movs	r0, r5
 800584e:	f7ff fe91 	bl	8005574 <_Bfree>
 8005852:	003e      	movs	r6, r7
 8005854:	9b01      	ldr	r3, [sp, #4]
 8005856:	105b      	asrs	r3, r3, #1
 8005858:	9301      	str	r3, [sp, #4]
 800585a:	d00c      	beq.n	8005876 <__pow5mult+0x96>
 800585c:	6820      	ldr	r0, [r4, #0]
 800585e:	2800      	cmp	r0, #0
 8005860:	d107      	bne.n	8005872 <__pow5mult+0x92>
 8005862:	0022      	movs	r2, r4
 8005864:	0021      	movs	r1, r4
 8005866:	0028      	movs	r0, r5
 8005868:	f7ff ff2b 	bl	80056c2 <__multiply>
 800586c:	2300      	movs	r3, #0
 800586e:	6020      	str	r0, [r4, #0]
 8005870:	6003      	str	r3, [r0, #0]
 8005872:	0004      	movs	r4, r0
 8005874:	e7df      	b.n	8005836 <__pow5mult+0x56>
 8005876:	0030      	movs	r0, r6
 8005878:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800587a:	46c0      	nop			; (mov r8, r8)
 800587c:	08006228 	.word	0x08006228
 8005880:	00000271 	.word	0x00000271

08005884 <__lshift>:
 8005884:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005886:	000d      	movs	r5, r1
 8005888:	0017      	movs	r7, r2
 800588a:	692b      	ldr	r3, [r5, #16]
 800588c:	1154      	asrs	r4, r2, #5
 800588e:	b085      	sub	sp, #20
 8005890:	18e3      	adds	r3, r4, r3
 8005892:	9302      	str	r3, [sp, #8]
 8005894:	3301      	adds	r3, #1
 8005896:	9301      	str	r3, [sp, #4]
 8005898:	6849      	ldr	r1, [r1, #4]
 800589a:	68ab      	ldr	r3, [r5, #8]
 800589c:	9003      	str	r0, [sp, #12]
 800589e:	9a01      	ldr	r2, [sp, #4]
 80058a0:	4293      	cmp	r3, r2
 80058a2:	db34      	blt.n	800590e <__lshift+0x8a>
 80058a4:	9803      	ldr	r0, [sp, #12]
 80058a6:	f7ff fe2d 	bl	8005504 <_Balloc>
 80058aa:	2300      	movs	r3, #0
 80058ac:	0002      	movs	r2, r0
 80058ae:	0006      	movs	r6, r0
 80058b0:	0019      	movs	r1, r3
 80058b2:	3214      	adds	r2, #20
 80058b4:	42a3      	cmp	r3, r4
 80058b6:	db2d      	blt.n	8005914 <__lshift+0x90>
 80058b8:	43e3      	mvns	r3, r4
 80058ba:	17db      	asrs	r3, r3, #31
 80058bc:	401c      	ands	r4, r3
 80058be:	002b      	movs	r3, r5
 80058c0:	211f      	movs	r1, #31
 80058c2:	00a4      	lsls	r4, r4, #2
 80058c4:	1914      	adds	r4, r2, r4
 80058c6:	692a      	ldr	r2, [r5, #16]
 80058c8:	3314      	adds	r3, #20
 80058ca:	0092      	lsls	r2, r2, #2
 80058cc:	189a      	adds	r2, r3, r2
 80058ce:	400f      	ands	r7, r1
 80058d0:	d024      	beq.n	800591c <__lshift+0x98>
 80058d2:	3101      	adds	r1, #1
 80058d4:	1bc9      	subs	r1, r1, r7
 80058d6:	468c      	mov	ip, r1
 80058d8:	2100      	movs	r1, #0
 80058da:	6818      	ldr	r0, [r3, #0]
 80058dc:	40b8      	lsls	r0, r7
 80058de:	4301      	orrs	r1, r0
 80058e0:	4660      	mov	r0, ip
 80058e2:	6021      	str	r1, [r4, #0]
 80058e4:	cb02      	ldmia	r3!, {r1}
 80058e6:	3404      	adds	r4, #4
 80058e8:	40c1      	lsrs	r1, r0
 80058ea:	429a      	cmp	r2, r3
 80058ec:	d8f5      	bhi.n	80058da <__lshift+0x56>
 80058ee:	6021      	str	r1, [r4, #0]
 80058f0:	2900      	cmp	r1, #0
 80058f2:	d002      	beq.n	80058fa <__lshift+0x76>
 80058f4:	9b02      	ldr	r3, [sp, #8]
 80058f6:	3302      	adds	r3, #2
 80058f8:	9301      	str	r3, [sp, #4]
 80058fa:	9b01      	ldr	r3, [sp, #4]
 80058fc:	9803      	ldr	r0, [sp, #12]
 80058fe:	3b01      	subs	r3, #1
 8005900:	6133      	str	r3, [r6, #16]
 8005902:	0029      	movs	r1, r5
 8005904:	f7ff fe36 	bl	8005574 <_Bfree>
 8005908:	0030      	movs	r0, r6
 800590a:	b005      	add	sp, #20
 800590c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800590e:	3101      	adds	r1, #1
 8005910:	005b      	lsls	r3, r3, #1
 8005912:	e7c4      	b.n	800589e <__lshift+0x1a>
 8005914:	0098      	lsls	r0, r3, #2
 8005916:	5011      	str	r1, [r2, r0]
 8005918:	3301      	adds	r3, #1
 800591a:	e7cb      	b.n	80058b4 <__lshift+0x30>
 800591c:	cb02      	ldmia	r3!, {r1}
 800591e:	c402      	stmia	r4!, {r1}
 8005920:	429a      	cmp	r2, r3
 8005922:	d8fb      	bhi.n	800591c <__lshift+0x98>
 8005924:	e7e9      	b.n	80058fa <__lshift+0x76>

08005926 <__mcmp>:
 8005926:	690a      	ldr	r2, [r1, #16]
 8005928:	6903      	ldr	r3, [r0, #16]
 800592a:	b530      	push	{r4, r5, lr}
 800592c:	1a9b      	subs	r3, r3, r2
 800592e:	d10e      	bne.n	800594e <__mcmp+0x28>
 8005930:	0092      	lsls	r2, r2, #2
 8005932:	3014      	adds	r0, #20
 8005934:	3114      	adds	r1, #20
 8005936:	1884      	adds	r4, r0, r2
 8005938:	1889      	adds	r1, r1, r2
 800593a:	3c04      	subs	r4, #4
 800593c:	3904      	subs	r1, #4
 800593e:	6822      	ldr	r2, [r4, #0]
 8005940:	680d      	ldr	r5, [r1, #0]
 8005942:	42aa      	cmp	r2, r5
 8005944:	d005      	beq.n	8005952 <__mcmp+0x2c>
 8005946:	42aa      	cmp	r2, r5
 8005948:	4192      	sbcs	r2, r2
 800594a:	2301      	movs	r3, #1
 800594c:	4313      	orrs	r3, r2
 800594e:	0018      	movs	r0, r3
 8005950:	bd30      	pop	{r4, r5, pc}
 8005952:	42a0      	cmp	r0, r4
 8005954:	d3f1      	bcc.n	800593a <__mcmp+0x14>
 8005956:	e7fa      	b.n	800594e <__mcmp+0x28>

08005958 <__mdiff>:
 8005958:	b5f0      	push	{r4, r5, r6, r7, lr}
 800595a:	000d      	movs	r5, r1
 800595c:	b085      	sub	sp, #20
 800595e:	0007      	movs	r7, r0
 8005960:	0011      	movs	r1, r2
 8005962:	0028      	movs	r0, r5
 8005964:	0014      	movs	r4, r2
 8005966:	f7ff ffde 	bl	8005926 <__mcmp>
 800596a:	1e06      	subs	r6, r0, #0
 800596c:	d108      	bne.n	8005980 <__mdiff+0x28>
 800596e:	0001      	movs	r1, r0
 8005970:	0038      	movs	r0, r7
 8005972:	f7ff fdc7 	bl	8005504 <_Balloc>
 8005976:	2301      	movs	r3, #1
 8005978:	6146      	str	r6, [r0, #20]
 800597a:	6103      	str	r3, [r0, #16]
 800597c:	b005      	add	sp, #20
 800597e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005980:	2301      	movs	r3, #1
 8005982:	9301      	str	r3, [sp, #4]
 8005984:	2800      	cmp	r0, #0
 8005986:	db04      	blt.n	8005992 <__mdiff+0x3a>
 8005988:	0023      	movs	r3, r4
 800598a:	002c      	movs	r4, r5
 800598c:	001d      	movs	r5, r3
 800598e:	2300      	movs	r3, #0
 8005990:	9301      	str	r3, [sp, #4]
 8005992:	6861      	ldr	r1, [r4, #4]
 8005994:	0038      	movs	r0, r7
 8005996:	f7ff fdb5 	bl	8005504 <_Balloc>
 800599a:	002f      	movs	r7, r5
 800599c:	2200      	movs	r2, #0
 800599e:	9b01      	ldr	r3, [sp, #4]
 80059a0:	6926      	ldr	r6, [r4, #16]
 80059a2:	60c3      	str	r3, [r0, #12]
 80059a4:	3414      	adds	r4, #20
 80059a6:	00b3      	lsls	r3, r6, #2
 80059a8:	18e3      	adds	r3, r4, r3
 80059aa:	9302      	str	r3, [sp, #8]
 80059ac:	692b      	ldr	r3, [r5, #16]
 80059ae:	3714      	adds	r7, #20
 80059b0:	009b      	lsls	r3, r3, #2
 80059b2:	18fb      	adds	r3, r7, r3
 80059b4:	9303      	str	r3, [sp, #12]
 80059b6:	0003      	movs	r3, r0
 80059b8:	4694      	mov	ip, r2
 80059ba:	3314      	adds	r3, #20
 80059bc:	cc20      	ldmia	r4!, {r5}
 80059be:	cf04      	ldmia	r7!, {r2}
 80059c0:	9201      	str	r2, [sp, #4]
 80059c2:	b2aa      	uxth	r2, r5
 80059c4:	4494      	add	ip, r2
 80059c6:	466a      	mov	r2, sp
 80059c8:	4661      	mov	r1, ip
 80059ca:	8892      	ldrh	r2, [r2, #4]
 80059cc:	0c2d      	lsrs	r5, r5, #16
 80059ce:	1a8a      	subs	r2, r1, r2
 80059d0:	9901      	ldr	r1, [sp, #4]
 80059d2:	0c09      	lsrs	r1, r1, #16
 80059d4:	1a69      	subs	r1, r5, r1
 80059d6:	1415      	asrs	r5, r2, #16
 80059d8:	1949      	adds	r1, r1, r5
 80059da:	140d      	asrs	r5, r1, #16
 80059dc:	b292      	uxth	r2, r2
 80059de:	0409      	lsls	r1, r1, #16
 80059e0:	430a      	orrs	r2, r1
 80059e2:	601a      	str	r2, [r3, #0]
 80059e4:	9a03      	ldr	r2, [sp, #12]
 80059e6:	46ac      	mov	ip, r5
 80059e8:	3304      	adds	r3, #4
 80059ea:	42ba      	cmp	r2, r7
 80059ec:	d8e6      	bhi.n	80059bc <__mdiff+0x64>
 80059ee:	9902      	ldr	r1, [sp, #8]
 80059f0:	001a      	movs	r2, r3
 80059f2:	428c      	cmp	r4, r1
 80059f4:	d305      	bcc.n	8005a02 <__mdiff+0xaa>
 80059f6:	3a04      	subs	r2, #4
 80059f8:	6813      	ldr	r3, [r2, #0]
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d00e      	beq.n	8005a1c <__mdiff+0xc4>
 80059fe:	6106      	str	r6, [r0, #16]
 8005a00:	e7bc      	b.n	800597c <__mdiff+0x24>
 8005a02:	cc04      	ldmia	r4!, {r2}
 8005a04:	b291      	uxth	r1, r2
 8005a06:	4461      	add	r1, ip
 8005a08:	140d      	asrs	r5, r1, #16
 8005a0a:	0c12      	lsrs	r2, r2, #16
 8005a0c:	1952      	adds	r2, r2, r5
 8005a0e:	1415      	asrs	r5, r2, #16
 8005a10:	b289      	uxth	r1, r1
 8005a12:	0412      	lsls	r2, r2, #16
 8005a14:	430a      	orrs	r2, r1
 8005a16:	46ac      	mov	ip, r5
 8005a18:	c304      	stmia	r3!, {r2}
 8005a1a:	e7e8      	b.n	80059ee <__mdiff+0x96>
 8005a1c:	3e01      	subs	r6, #1
 8005a1e:	e7ea      	b.n	80059f6 <__mdiff+0x9e>

08005a20 <__d2b>:
 8005a20:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a22:	001d      	movs	r5, r3
 8005a24:	2101      	movs	r1, #1
 8005a26:	9f08      	ldr	r7, [sp, #32]
 8005a28:	0014      	movs	r4, r2
 8005a2a:	f7ff fd6b 	bl	8005504 <_Balloc>
 8005a2e:	032b      	lsls	r3, r5, #12
 8005a30:	006d      	lsls	r5, r5, #1
 8005a32:	0006      	movs	r6, r0
 8005a34:	0b1b      	lsrs	r3, r3, #12
 8005a36:	0d6d      	lsrs	r5, r5, #21
 8005a38:	d124      	bne.n	8005a84 <__d2b+0x64>
 8005a3a:	9301      	str	r3, [sp, #4]
 8005a3c:	2c00      	cmp	r4, #0
 8005a3e:	d027      	beq.n	8005a90 <__d2b+0x70>
 8005a40:	4668      	mov	r0, sp
 8005a42:	9400      	str	r4, [sp, #0]
 8005a44:	f7ff fe05 	bl	8005652 <__lo0bits>
 8005a48:	9c00      	ldr	r4, [sp, #0]
 8005a4a:	2800      	cmp	r0, #0
 8005a4c:	d01e      	beq.n	8005a8c <__d2b+0x6c>
 8005a4e:	9b01      	ldr	r3, [sp, #4]
 8005a50:	2120      	movs	r1, #32
 8005a52:	001a      	movs	r2, r3
 8005a54:	1a09      	subs	r1, r1, r0
 8005a56:	408a      	lsls	r2, r1
 8005a58:	40c3      	lsrs	r3, r0
 8005a5a:	4322      	orrs	r2, r4
 8005a5c:	6172      	str	r2, [r6, #20]
 8005a5e:	9301      	str	r3, [sp, #4]
 8005a60:	9c01      	ldr	r4, [sp, #4]
 8005a62:	61b4      	str	r4, [r6, #24]
 8005a64:	1e63      	subs	r3, r4, #1
 8005a66:	419c      	sbcs	r4, r3
 8005a68:	3401      	adds	r4, #1
 8005a6a:	6134      	str	r4, [r6, #16]
 8005a6c:	2d00      	cmp	r5, #0
 8005a6e:	d018      	beq.n	8005aa2 <__d2b+0x82>
 8005a70:	4b12      	ldr	r3, [pc, #72]	; (8005abc <__d2b+0x9c>)
 8005a72:	18ed      	adds	r5, r5, r3
 8005a74:	2335      	movs	r3, #53	; 0x35
 8005a76:	182d      	adds	r5, r5, r0
 8005a78:	603d      	str	r5, [r7, #0]
 8005a7a:	1a18      	subs	r0, r3, r0
 8005a7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005a7e:	6018      	str	r0, [r3, #0]
 8005a80:	0030      	movs	r0, r6
 8005a82:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005a84:	2280      	movs	r2, #128	; 0x80
 8005a86:	0352      	lsls	r2, r2, #13
 8005a88:	4313      	orrs	r3, r2
 8005a8a:	e7d6      	b.n	8005a3a <__d2b+0x1a>
 8005a8c:	6174      	str	r4, [r6, #20]
 8005a8e:	e7e7      	b.n	8005a60 <__d2b+0x40>
 8005a90:	a801      	add	r0, sp, #4
 8005a92:	f7ff fdde 	bl	8005652 <__lo0bits>
 8005a96:	2401      	movs	r4, #1
 8005a98:	9b01      	ldr	r3, [sp, #4]
 8005a9a:	6134      	str	r4, [r6, #16]
 8005a9c:	6173      	str	r3, [r6, #20]
 8005a9e:	3020      	adds	r0, #32
 8005aa0:	e7e4      	b.n	8005a6c <__d2b+0x4c>
 8005aa2:	4b07      	ldr	r3, [pc, #28]	; (8005ac0 <__d2b+0xa0>)
 8005aa4:	18c0      	adds	r0, r0, r3
 8005aa6:	4b07      	ldr	r3, [pc, #28]	; (8005ac4 <__d2b+0xa4>)
 8005aa8:	6038      	str	r0, [r7, #0]
 8005aaa:	18e3      	adds	r3, r4, r3
 8005aac:	009b      	lsls	r3, r3, #2
 8005aae:	18f3      	adds	r3, r6, r3
 8005ab0:	6958      	ldr	r0, [r3, #20]
 8005ab2:	f7ff fdb4 	bl	800561e <__hi0bits>
 8005ab6:	0164      	lsls	r4, r4, #5
 8005ab8:	1a20      	subs	r0, r4, r0
 8005aba:	e7df      	b.n	8005a7c <__d2b+0x5c>
 8005abc:	fffffbcd 	.word	0xfffffbcd
 8005ac0:	fffffbce 	.word	0xfffffbce
 8005ac4:	3fffffff 	.word	0x3fffffff

08005ac8 <_calloc_r>:
 8005ac8:	434a      	muls	r2, r1
 8005aca:	b570      	push	{r4, r5, r6, lr}
 8005acc:	0011      	movs	r1, r2
 8005ace:	0014      	movs	r4, r2
 8005ad0:	f000 f852 	bl	8005b78 <_malloc_r>
 8005ad4:	1e05      	subs	r5, r0, #0
 8005ad6:	d003      	beq.n	8005ae0 <_calloc_r+0x18>
 8005ad8:	0022      	movs	r2, r4
 8005ada:	2100      	movs	r1, #0
 8005adc:	f7fe f9e0 	bl	8003ea0 <memset>
 8005ae0:	0028      	movs	r0, r5
 8005ae2:	bd70      	pop	{r4, r5, r6, pc}

08005ae4 <_free_r>:
 8005ae4:	b570      	push	{r4, r5, r6, lr}
 8005ae6:	0005      	movs	r5, r0
 8005ae8:	2900      	cmp	r1, #0
 8005aea:	d010      	beq.n	8005b0e <_free_r+0x2a>
 8005aec:	1f0c      	subs	r4, r1, #4
 8005aee:	6823      	ldr	r3, [r4, #0]
 8005af0:	2b00      	cmp	r3, #0
 8005af2:	da00      	bge.n	8005af6 <_free_r+0x12>
 8005af4:	18e4      	adds	r4, r4, r3
 8005af6:	0028      	movs	r0, r5
 8005af8:	f000 fa38 	bl	8005f6c <__malloc_lock>
 8005afc:	4a1d      	ldr	r2, [pc, #116]	; (8005b74 <_free_r+0x90>)
 8005afe:	6813      	ldr	r3, [r2, #0]
 8005b00:	2b00      	cmp	r3, #0
 8005b02:	d105      	bne.n	8005b10 <_free_r+0x2c>
 8005b04:	6063      	str	r3, [r4, #4]
 8005b06:	6014      	str	r4, [r2, #0]
 8005b08:	0028      	movs	r0, r5
 8005b0a:	f000 fa30 	bl	8005f6e <__malloc_unlock>
 8005b0e:	bd70      	pop	{r4, r5, r6, pc}
 8005b10:	42a3      	cmp	r3, r4
 8005b12:	d909      	bls.n	8005b28 <_free_r+0x44>
 8005b14:	6821      	ldr	r1, [r4, #0]
 8005b16:	1860      	adds	r0, r4, r1
 8005b18:	4283      	cmp	r3, r0
 8005b1a:	d1f3      	bne.n	8005b04 <_free_r+0x20>
 8005b1c:	6818      	ldr	r0, [r3, #0]
 8005b1e:	685b      	ldr	r3, [r3, #4]
 8005b20:	1841      	adds	r1, r0, r1
 8005b22:	6021      	str	r1, [r4, #0]
 8005b24:	e7ee      	b.n	8005b04 <_free_r+0x20>
 8005b26:	0013      	movs	r3, r2
 8005b28:	685a      	ldr	r2, [r3, #4]
 8005b2a:	2a00      	cmp	r2, #0
 8005b2c:	d001      	beq.n	8005b32 <_free_r+0x4e>
 8005b2e:	42a2      	cmp	r2, r4
 8005b30:	d9f9      	bls.n	8005b26 <_free_r+0x42>
 8005b32:	6819      	ldr	r1, [r3, #0]
 8005b34:	1858      	adds	r0, r3, r1
 8005b36:	42a0      	cmp	r0, r4
 8005b38:	d10b      	bne.n	8005b52 <_free_r+0x6e>
 8005b3a:	6820      	ldr	r0, [r4, #0]
 8005b3c:	1809      	adds	r1, r1, r0
 8005b3e:	1858      	adds	r0, r3, r1
 8005b40:	6019      	str	r1, [r3, #0]
 8005b42:	4282      	cmp	r2, r0
 8005b44:	d1e0      	bne.n	8005b08 <_free_r+0x24>
 8005b46:	6810      	ldr	r0, [r2, #0]
 8005b48:	6852      	ldr	r2, [r2, #4]
 8005b4a:	1841      	adds	r1, r0, r1
 8005b4c:	6019      	str	r1, [r3, #0]
 8005b4e:	605a      	str	r2, [r3, #4]
 8005b50:	e7da      	b.n	8005b08 <_free_r+0x24>
 8005b52:	42a0      	cmp	r0, r4
 8005b54:	d902      	bls.n	8005b5c <_free_r+0x78>
 8005b56:	230c      	movs	r3, #12
 8005b58:	602b      	str	r3, [r5, #0]
 8005b5a:	e7d5      	b.n	8005b08 <_free_r+0x24>
 8005b5c:	6821      	ldr	r1, [r4, #0]
 8005b5e:	1860      	adds	r0, r4, r1
 8005b60:	4282      	cmp	r2, r0
 8005b62:	d103      	bne.n	8005b6c <_free_r+0x88>
 8005b64:	6810      	ldr	r0, [r2, #0]
 8005b66:	6852      	ldr	r2, [r2, #4]
 8005b68:	1841      	adds	r1, r0, r1
 8005b6a:	6021      	str	r1, [r4, #0]
 8005b6c:	6062      	str	r2, [r4, #4]
 8005b6e:	605c      	str	r4, [r3, #4]
 8005b70:	e7ca      	b.n	8005b08 <_free_r+0x24>
 8005b72:	46c0      	nop			; (mov r8, r8)
 8005b74:	200001f8 	.word	0x200001f8

08005b78 <_malloc_r>:
 8005b78:	2303      	movs	r3, #3
 8005b7a:	b570      	push	{r4, r5, r6, lr}
 8005b7c:	1ccd      	adds	r5, r1, #3
 8005b7e:	439d      	bics	r5, r3
 8005b80:	3508      	adds	r5, #8
 8005b82:	0006      	movs	r6, r0
 8005b84:	2d0c      	cmp	r5, #12
 8005b86:	d21e      	bcs.n	8005bc6 <_malloc_r+0x4e>
 8005b88:	250c      	movs	r5, #12
 8005b8a:	42a9      	cmp	r1, r5
 8005b8c:	d81d      	bhi.n	8005bca <_malloc_r+0x52>
 8005b8e:	0030      	movs	r0, r6
 8005b90:	f000 f9ec 	bl	8005f6c <__malloc_lock>
 8005b94:	4a25      	ldr	r2, [pc, #148]	; (8005c2c <_malloc_r+0xb4>)
 8005b96:	6814      	ldr	r4, [r2, #0]
 8005b98:	0021      	movs	r1, r4
 8005b9a:	2900      	cmp	r1, #0
 8005b9c:	d119      	bne.n	8005bd2 <_malloc_r+0x5a>
 8005b9e:	4c24      	ldr	r4, [pc, #144]	; (8005c30 <_malloc_r+0xb8>)
 8005ba0:	6823      	ldr	r3, [r4, #0]
 8005ba2:	2b00      	cmp	r3, #0
 8005ba4:	d103      	bne.n	8005bae <_malloc_r+0x36>
 8005ba6:	0030      	movs	r0, r6
 8005ba8:	f000 f9aa 	bl	8005f00 <_sbrk_r>
 8005bac:	6020      	str	r0, [r4, #0]
 8005bae:	0029      	movs	r1, r5
 8005bb0:	0030      	movs	r0, r6
 8005bb2:	f000 f9a5 	bl	8005f00 <_sbrk_r>
 8005bb6:	1c43      	adds	r3, r0, #1
 8005bb8:	d12c      	bne.n	8005c14 <_malloc_r+0x9c>
 8005bba:	230c      	movs	r3, #12
 8005bbc:	0030      	movs	r0, r6
 8005bbe:	6033      	str	r3, [r6, #0]
 8005bc0:	f000 f9d5 	bl	8005f6e <__malloc_unlock>
 8005bc4:	e003      	b.n	8005bce <_malloc_r+0x56>
 8005bc6:	2d00      	cmp	r5, #0
 8005bc8:	dadf      	bge.n	8005b8a <_malloc_r+0x12>
 8005bca:	230c      	movs	r3, #12
 8005bcc:	6033      	str	r3, [r6, #0]
 8005bce:	2000      	movs	r0, #0
 8005bd0:	bd70      	pop	{r4, r5, r6, pc}
 8005bd2:	680b      	ldr	r3, [r1, #0]
 8005bd4:	1b5b      	subs	r3, r3, r5
 8005bd6:	d41a      	bmi.n	8005c0e <_malloc_r+0x96>
 8005bd8:	2b0b      	cmp	r3, #11
 8005bda:	d903      	bls.n	8005be4 <_malloc_r+0x6c>
 8005bdc:	600b      	str	r3, [r1, #0]
 8005bde:	18cc      	adds	r4, r1, r3
 8005be0:	6025      	str	r5, [r4, #0]
 8005be2:	e003      	b.n	8005bec <_malloc_r+0x74>
 8005be4:	428c      	cmp	r4, r1
 8005be6:	d10e      	bne.n	8005c06 <_malloc_r+0x8e>
 8005be8:	6863      	ldr	r3, [r4, #4]
 8005bea:	6013      	str	r3, [r2, #0]
 8005bec:	0030      	movs	r0, r6
 8005bee:	f000 f9be 	bl	8005f6e <__malloc_unlock>
 8005bf2:	0020      	movs	r0, r4
 8005bf4:	2207      	movs	r2, #7
 8005bf6:	300b      	adds	r0, #11
 8005bf8:	1d23      	adds	r3, r4, #4
 8005bfa:	4390      	bics	r0, r2
 8005bfc:	1ac3      	subs	r3, r0, r3
 8005bfe:	d0e7      	beq.n	8005bd0 <_malloc_r+0x58>
 8005c00:	425a      	negs	r2, r3
 8005c02:	50e2      	str	r2, [r4, r3]
 8005c04:	e7e4      	b.n	8005bd0 <_malloc_r+0x58>
 8005c06:	684b      	ldr	r3, [r1, #4]
 8005c08:	6063      	str	r3, [r4, #4]
 8005c0a:	000c      	movs	r4, r1
 8005c0c:	e7ee      	b.n	8005bec <_malloc_r+0x74>
 8005c0e:	000c      	movs	r4, r1
 8005c10:	6849      	ldr	r1, [r1, #4]
 8005c12:	e7c2      	b.n	8005b9a <_malloc_r+0x22>
 8005c14:	2303      	movs	r3, #3
 8005c16:	1cc4      	adds	r4, r0, #3
 8005c18:	439c      	bics	r4, r3
 8005c1a:	42a0      	cmp	r0, r4
 8005c1c:	d0e0      	beq.n	8005be0 <_malloc_r+0x68>
 8005c1e:	1a21      	subs	r1, r4, r0
 8005c20:	0030      	movs	r0, r6
 8005c22:	f000 f96d 	bl	8005f00 <_sbrk_r>
 8005c26:	1c43      	adds	r3, r0, #1
 8005c28:	d1da      	bne.n	8005be0 <_malloc_r+0x68>
 8005c2a:	e7c6      	b.n	8005bba <_malloc_r+0x42>
 8005c2c:	200001f8 	.word	0x200001f8
 8005c30:	200001fc 	.word	0x200001fc

08005c34 <__ssputs_r>:
 8005c34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c36:	688e      	ldr	r6, [r1, #8]
 8005c38:	b085      	sub	sp, #20
 8005c3a:	0007      	movs	r7, r0
 8005c3c:	000c      	movs	r4, r1
 8005c3e:	9203      	str	r2, [sp, #12]
 8005c40:	9301      	str	r3, [sp, #4]
 8005c42:	429e      	cmp	r6, r3
 8005c44:	d839      	bhi.n	8005cba <__ssputs_r+0x86>
 8005c46:	2390      	movs	r3, #144	; 0x90
 8005c48:	898a      	ldrh	r2, [r1, #12]
 8005c4a:	00db      	lsls	r3, r3, #3
 8005c4c:	421a      	tst	r2, r3
 8005c4e:	d034      	beq.n	8005cba <__ssputs_r+0x86>
 8005c50:	2503      	movs	r5, #3
 8005c52:	6909      	ldr	r1, [r1, #16]
 8005c54:	6823      	ldr	r3, [r4, #0]
 8005c56:	1a5b      	subs	r3, r3, r1
 8005c58:	9302      	str	r3, [sp, #8]
 8005c5a:	6963      	ldr	r3, [r4, #20]
 8005c5c:	9802      	ldr	r0, [sp, #8]
 8005c5e:	435d      	muls	r5, r3
 8005c60:	0feb      	lsrs	r3, r5, #31
 8005c62:	195d      	adds	r5, r3, r5
 8005c64:	9b01      	ldr	r3, [sp, #4]
 8005c66:	106d      	asrs	r5, r5, #1
 8005c68:	3301      	adds	r3, #1
 8005c6a:	181b      	adds	r3, r3, r0
 8005c6c:	42ab      	cmp	r3, r5
 8005c6e:	d900      	bls.n	8005c72 <__ssputs_r+0x3e>
 8005c70:	001d      	movs	r5, r3
 8005c72:	0553      	lsls	r3, r2, #21
 8005c74:	d532      	bpl.n	8005cdc <__ssputs_r+0xa8>
 8005c76:	0029      	movs	r1, r5
 8005c78:	0038      	movs	r0, r7
 8005c7a:	f7ff ff7d 	bl	8005b78 <_malloc_r>
 8005c7e:	1e06      	subs	r6, r0, #0
 8005c80:	d109      	bne.n	8005c96 <__ssputs_r+0x62>
 8005c82:	230c      	movs	r3, #12
 8005c84:	603b      	str	r3, [r7, #0]
 8005c86:	2340      	movs	r3, #64	; 0x40
 8005c88:	2001      	movs	r0, #1
 8005c8a:	89a2      	ldrh	r2, [r4, #12]
 8005c8c:	4240      	negs	r0, r0
 8005c8e:	4313      	orrs	r3, r2
 8005c90:	81a3      	strh	r3, [r4, #12]
 8005c92:	b005      	add	sp, #20
 8005c94:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c96:	9a02      	ldr	r2, [sp, #8]
 8005c98:	6921      	ldr	r1, [r4, #16]
 8005c9a:	f7ff fc2a 	bl	80054f2 <memcpy>
 8005c9e:	89a3      	ldrh	r3, [r4, #12]
 8005ca0:	4a14      	ldr	r2, [pc, #80]	; (8005cf4 <__ssputs_r+0xc0>)
 8005ca2:	401a      	ands	r2, r3
 8005ca4:	2380      	movs	r3, #128	; 0x80
 8005ca6:	4313      	orrs	r3, r2
 8005ca8:	81a3      	strh	r3, [r4, #12]
 8005caa:	9b02      	ldr	r3, [sp, #8]
 8005cac:	6126      	str	r6, [r4, #16]
 8005cae:	18f6      	adds	r6, r6, r3
 8005cb0:	6026      	str	r6, [r4, #0]
 8005cb2:	6165      	str	r5, [r4, #20]
 8005cb4:	9e01      	ldr	r6, [sp, #4]
 8005cb6:	1aed      	subs	r5, r5, r3
 8005cb8:	60a5      	str	r5, [r4, #8]
 8005cba:	9b01      	ldr	r3, [sp, #4]
 8005cbc:	42b3      	cmp	r3, r6
 8005cbe:	d200      	bcs.n	8005cc2 <__ssputs_r+0x8e>
 8005cc0:	001e      	movs	r6, r3
 8005cc2:	0032      	movs	r2, r6
 8005cc4:	9903      	ldr	r1, [sp, #12]
 8005cc6:	6820      	ldr	r0, [r4, #0]
 8005cc8:	f000 f93e 	bl	8005f48 <memmove>
 8005ccc:	68a3      	ldr	r3, [r4, #8]
 8005cce:	2000      	movs	r0, #0
 8005cd0:	1b9b      	subs	r3, r3, r6
 8005cd2:	60a3      	str	r3, [r4, #8]
 8005cd4:	6823      	ldr	r3, [r4, #0]
 8005cd6:	199e      	adds	r6, r3, r6
 8005cd8:	6026      	str	r6, [r4, #0]
 8005cda:	e7da      	b.n	8005c92 <__ssputs_r+0x5e>
 8005cdc:	002a      	movs	r2, r5
 8005cde:	0038      	movs	r0, r7
 8005ce0:	f000 f946 	bl	8005f70 <_realloc_r>
 8005ce4:	1e06      	subs	r6, r0, #0
 8005ce6:	d1e0      	bne.n	8005caa <__ssputs_r+0x76>
 8005ce8:	6921      	ldr	r1, [r4, #16]
 8005cea:	0038      	movs	r0, r7
 8005cec:	f7ff fefa 	bl	8005ae4 <_free_r>
 8005cf0:	e7c7      	b.n	8005c82 <__ssputs_r+0x4e>
 8005cf2:	46c0      	nop			; (mov r8, r8)
 8005cf4:	fffffb7f 	.word	0xfffffb7f

08005cf8 <_svfiprintf_r>:
 8005cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005cfa:	b09f      	sub	sp, #124	; 0x7c
 8005cfc:	9002      	str	r0, [sp, #8]
 8005cfe:	9305      	str	r3, [sp, #20]
 8005d00:	898b      	ldrh	r3, [r1, #12]
 8005d02:	000f      	movs	r7, r1
 8005d04:	0016      	movs	r6, r2
 8005d06:	061b      	lsls	r3, r3, #24
 8005d08:	d511      	bpl.n	8005d2e <_svfiprintf_r+0x36>
 8005d0a:	690b      	ldr	r3, [r1, #16]
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	d10e      	bne.n	8005d2e <_svfiprintf_r+0x36>
 8005d10:	2140      	movs	r1, #64	; 0x40
 8005d12:	f7ff ff31 	bl	8005b78 <_malloc_r>
 8005d16:	6038      	str	r0, [r7, #0]
 8005d18:	6138      	str	r0, [r7, #16]
 8005d1a:	2800      	cmp	r0, #0
 8005d1c:	d105      	bne.n	8005d2a <_svfiprintf_r+0x32>
 8005d1e:	230c      	movs	r3, #12
 8005d20:	9a02      	ldr	r2, [sp, #8]
 8005d22:	3801      	subs	r0, #1
 8005d24:	6013      	str	r3, [r2, #0]
 8005d26:	b01f      	add	sp, #124	; 0x7c
 8005d28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005d2a:	2340      	movs	r3, #64	; 0x40
 8005d2c:	617b      	str	r3, [r7, #20]
 8005d2e:	2300      	movs	r3, #0
 8005d30:	ad06      	add	r5, sp, #24
 8005d32:	616b      	str	r3, [r5, #20]
 8005d34:	3320      	adds	r3, #32
 8005d36:	766b      	strb	r3, [r5, #25]
 8005d38:	3310      	adds	r3, #16
 8005d3a:	76ab      	strb	r3, [r5, #26]
 8005d3c:	0034      	movs	r4, r6
 8005d3e:	7823      	ldrb	r3, [r4, #0]
 8005d40:	2b00      	cmp	r3, #0
 8005d42:	d147      	bne.n	8005dd4 <_svfiprintf_r+0xdc>
 8005d44:	1ba3      	subs	r3, r4, r6
 8005d46:	9304      	str	r3, [sp, #16]
 8005d48:	d00d      	beq.n	8005d66 <_svfiprintf_r+0x6e>
 8005d4a:	1ba3      	subs	r3, r4, r6
 8005d4c:	0032      	movs	r2, r6
 8005d4e:	0039      	movs	r1, r7
 8005d50:	9802      	ldr	r0, [sp, #8]
 8005d52:	f7ff ff6f 	bl	8005c34 <__ssputs_r>
 8005d56:	1c43      	adds	r3, r0, #1
 8005d58:	d100      	bne.n	8005d5c <_svfiprintf_r+0x64>
 8005d5a:	e0b5      	b.n	8005ec8 <_svfiprintf_r+0x1d0>
 8005d5c:	696a      	ldr	r2, [r5, #20]
 8005d5e:	9b04      	ldr	r3, [sp, #16]
 8005d60:	4694      	mov	ip, r2
 8005d62:	4463      	add	r3, ip
 8005d64:	616b      	str	r3, [r5, #20]
 8005d66:	7823      	ldrb	r3, [r4, #0]
 8005d68:	2b00      	cmp	r3, #0
 8005d6a:	d100      	bne.n	8005d6e <_svfiprintf_r+0x76>
 8005d6c:	e0ac      	b.n	8005ec8 <_svfiprintf_r+0x1d0>
 8005d6e:	2201      	movs	r2, #1
 8005d70:	2300      	movs	r3, #0
 8005d72:	4252      	negs	r2, r2
 8005d74:	606a      	str	r2, [r5, #4]
 8005d76:	a902      	add	r1, sp, #8
 8005d78:	3254      	adds	r2, #84	; 0x54
 8005d7a:	1852      	adds	r2, r2, r1
 8005d7c:	3401      	adds	r4, #1
 8005d7e:	602b      	str	r3, [r5, #0]
 8005d80:	60eb      	str	r3, [r5, #12]
 8005d82:	60ab      	str	r3, [r5, #8]
 8005d84:	7013      	strb	r3, [r2, #0]
 8005d86:	65ab      	str	r3, [r5, #88]	; 0x58
 8005d88:	4e58      	ldr	r6, [pc, #352]	; (8005eec <_svfiprintf_r+0x1f4>)
 8005d8a:	2205      	movs	r2, #5
 8005d8c:	7821      	ldrb	r1, [r4, #0]
 8005d8e:	0030      	movs	r0, r6
 8005d90:	f7ff fba4 	bl	80054dc <memchr>
 8005d94:	1c62      	adds	r2, r4, #1
 8005d96:	2800      	cmp	r0, #0
 8005d98:	d120      	bne.n	8005ddc <_svfiprintf_r+0xe4>
 8005d9a:	6829      	ldr	r1, [r5, #0]
 8005d9c:	06cb      	lsls	r3, r1, #27
 8005d9e:	d504      	bpl.n	8005daa <_svfiprintf_r+0xb2>
 8005da0:	2353      	movs	r3, #83	; 0x53
 8005da2:	ae02      	add	r6, sp, #8
 8005da4:	3020      	adds	r0, #32
 8005da6:	199b      	adds	r3, r3, r6
 8005da8:	7018      	strb	r0, [r3, #0]
 8005daa:	070b      	lsls	r3, r1, #28
 8005dac:	d504      	bpl.n	8005db8 <_svfiprintf_r+0xc0>
 8005dae:	2353      	movs	r3, #83	; 0x53
 8005db0:	202b      	movs	r0, #43	; 0x2b
 8005db2:	ae02      	add	r6, sp, #8
 8005db4:	199b      	adds	r3, r3, r6
 8005db6:	7018      	strb	r0, [r3, #0]
 8005db8:	7823      	ldrb	r3, [r4, #0]
 8005dba:	2b2a      	cmp	r3, #42	; 0x2a
 8005dbc:	d016      	beq.n	8005dec <_svfiprintf_r+0xf4>
 8005dbe:	2000      	movs	r0, #0
 8005dc0:	210a      	movs	r1, #10
 8005dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005dc4:	7822      	ldrb	r2, [r4, #0]
 8005dc6:	3a30      	subs	r2, #48	; 0x30
 8005dc8:	2a09      	cmp	r2, #9
 8005dca:	d955      	bls.n	8005e78 <_svfiprintf_r+0x180>
 8005dcc:	2800      	cmp	r0, #0
 8005dce:	d015      	beq.n	8005dfc <_svfiprintf_r+0x104>
 8005dd0:	9309      	str	r3, [sp, #36]	; 0x24
 8005dd2:	e013      	b.n	8005dfc <_svfiprintf_r+0x104>
 8005dd4:	2b25      	cmp	r3, #37	; 0x25
 8005dd6:	d0b5      	beq.n	8005d44 <_svfiprintf_r+0x4c>
 8005dd8:	3401      	adds	r4, #1
 8005dda:	e7b0      	b.n	8005d3e <_svfiprintf_r+0x46>
 8005ddc:	2301      	movs	r3, #1
 8005dde:	1b80      	subs	r0, r0, r6
 8005de0:	4083      	lsls	r3, r0
 8005de2:	6829      	ldr	r1, [r5, #0]
 8005de4:	0014      	movs	r4, r2
 8005de6:	430b      	orrs	r3, r1
 8005de8:	602b      	str	r3, [r5, #0]
 8005dea:	e7cd      	b.n	8005d88 <_svfiprintf_r+0x90>
 8005dec:	9b05      	ldr	r3, [sp, #20]
 8005dee:	1d18      	adds	r0, r3, #4
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	9005      	str	r0, [sp, #20]
 8005df4:	2b00      	cmp	r3, #0
 8005df6:	db39      	blt.n	8005e6c <_svfiprintf_r+0x174>
 8005df8:	9309      	str	r3, [sp, #36]	; 0x24
 8005dfa:	0014      	movs	r4, r2
 8005dfc:	7823      	ldrb	r3, [r4, #0]
 8005dfe:	2b2e      	cmp	r3, #46	; 0x2e
 8005e00:	d10b      	bne.n	8005e1a <_svfiprintf_r+0x122>
 8005e02:	7863      	ldrb	r3, [r4, #1]
 8005e04:	1c62      	adds	r2, r4, #1
 8005e06:	2b2a      	cmp	r3, #42	; 0x2a
 8005e08:	d13e      	bne.n	8005e88 <_svfiprintf_r+0x190>
 8005e0a:	9b05      	ldr	r3, [sp, #20]
 8005e0c:	3402      	adds	r4, #2
 8005e0e:	1d1a      	adds	r2, r3, #4
 8005e10:	681b      	ldr	r3, [r3, #0]
 8005e12:	9205      	str	r2, [sp, #20]
 8005e14:	2b00      	cmp	r3, #0
 8005e16:	db34      	blt.n	8005e82 <_svfiprintf_r+0x18a>
 8005e18:	9307      	str	r3, [sp, #28]
 8005e1a:	4e35      	ldr	r6, [pc, #212]	; (8005ef0 <_svfiprintf_r+0x1f8>)
 8005e1c:	7821      	ldrb	r1, [r4, #0]
 8005e1e:	2203      	movs	r2, #3
 8005e20:	0030      	movs	r0, r6
 8005e22:	f7ff fb5b 	bl	80054dc <memchr>
 8005e26:	2800      	cmp	r0, #0
 8005e28:	d006      	beq.n	8005e38 <_svfiprintf_r+0x140>
 8005e2a:	2340      	movs	r3, #64	; 0x40
 8005e2c:	1b80      	subs	r0, r0, r6
 8005e2e:	4083      	lsls	r3, r0
 8005e30:	682a      	ldr	r2, [r5, #0]
 8005e32:	3401      	adds	r4, #1
 8005e34:	4313      	orrs	r3, r2
 8005e36:	602b      	str	r3, [r5, #0]
 8005e38:	7821      	ldrb	r1, [r4, #0]
 8005e3a:	2206      	movs	r2, #6
 8005e3c:	482d      	ldr	r0, [pc, #180]	; (8005ef4 <_svfiprintf_r+0x1fc>)
 8005e3e:	1c66      	adds	r6, r4, #1
 8005e40:	7629      	strb	r1, [r5, #24]
 8005e42:	f7ff fb4b 	bl	80054dc <memchr>
 8005e46:	2800      	cmp	r0, #0
 8005e48:	d046      	beq.n	8005ed8 <_svfiprintf_r+0x1e0>
 8005e4a:	4b2b      	ldr	r3, [pc, #172]	; (8005ef8 <_svfiprintf_r+0x200>)
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d12f      	bne.n	8005eb0 <_svfiprintf_r+0x1b8>
 8005e50:	6829      	ldr	r1, [r5, #0]
 8005e52:	9b05      	ldr	r3, [sp, #20]
 8005e54:	2207      	movs	r2, #7
 8005e56:	05c9      	lsls	r1, r1, #23
 8005e58:	d528      	bpl.n	8005eac <_svfiprintf_r+0x1b4>
 8005e5a:	189b      	adds	r3, r3, r2
 8005e5c:	4393      	bics	r3, r2
 8005e5e:	3308      	adds	r3, #8
 8005e60:	9305      	str	r3, [sp, #20]
 8005e62:	696b      	ldr	r3, [r5, #20]
 8005e64:	9a03      	ldr	r2, [sp, #12]
 8005e66:	189b      	adds	r3, r3, r2
 8005e68:	616b      	str	r3, [r5, #20]
 8005e6a:	e767      	b.n	8005d3c <_svfiprintf_r+0x44>
 8005e6c:	425b      	negs	r3, r3
 8005e6e:	60eb      	str	r3, [r5, #12]
 8005e70:	2302      	movs	r3, #2
 8005e72:	430b      	orrs	r3, r1
 8005e74:	602b      	str	r3, [r5, #0]
 8005e76:	e7c0      	b.n	8005dfa <_svfiprintf_r+0x102>
 8005e78:	434b      	muls	r3, r1
 8005e7a:	3401      	adds	r4, #1
 8005e7c:	189b      	adds	r3, r3, r2
 8005e7e:	2001      	movs	r0, #1
 8005e80:	e7a0      	b.n	8005dc4 <_svfiprintf_r+0xcc>
 8005e82:	2301      	movs	r3, #1
 8005e84:	425b      	negs	r3, r3
 8005e86:	e7c7      	b.n	8005e18 <_svfiprintf_r+0x120>
 8005e88:	2300      	movs	r3, #0
 8005e8a:	0014      	movs	r4, r2
 8005e8c:	200a      	movs	r0, #10
 8005e8e:	001a      	movs	r2, r3
 8005e90:	606b      	str	r3, [r5, #4]
 8005e92:	7821      	ldrb	r1, [r4, #0]
 8005e94:	3930      	subs	r1, #48	; 0x30
 8005e96:	2909      	cmp	r1, #9
 8005e98:	d903      	bls.n	8005ea2 <_svfiprintf_r+0x1aa>
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d0bd      	beq.n	8005e1a <_svfiprintf_r+0x122>
 8005e9e:	9207      	str	r2, [sp, #28]
 8005ea0:	e7bb      	b.n	8005e1a <_svfiprintf_r+0x122>
 8005ea2:	4342      	muls	r2, r0
 8005ea4:	3401      	adds	r4, #1
 8005ea6:	1852      	adds	r2, r2, r1
 8005ea8:	2301      	movs	r3, #1
 8005eaa:	e7f2      	b.n	8005e92 <_svfiprintf_r+0x19a>
 8005eac:	3307      	adds	r3, #7
 8005eae:	e7d5      	b.n	8005e5c <_svfiprintf_r+0x164>
 8005eb0:	ab05      	add	r3, sp, #20
 8005eb2:	9300      	str	r3, [sp, #0]
 8005eb4:	003a      	movs	r2, r7
 8005eb6:	4b11      	ldr	r3, [pc, #68]	; (8005efc <_svfiprintf_r+0x204>)
 8005eb8:	0029      	movs	r1, r5
 8005eba:	9802      	ldr	r0, [sp, #8]
 8005ebc:	f7fe f894 	bl	8003fe8 <_printf_float>
 8005ec0:	9003      	str	r0, [sp, #12]
 8005ec2:	9b03      	ldr	r3, [sp, #12]
 8005ec4:	3301      	adds	r3, #1
 8005ec6:	d1cc      	bne.n	8005e62 <_svfiprintf_r+0x16a>
 8005ec8:	89bb      	ldrh	r3, [r7, #12]
 8005eca:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005ecc:	065b      	lsls	r3, r3, #25
 8005ece:	d400      	bmi.n	8005ed2 <_svfiprintf_r+0x1da>
 8005ed0:	e729      	b.n	8005d26 <_svfiprintf_r+0x2e>
 8005ed2:	2001      	movs	r0, #1
 8005ed4:	4240      	negs	r0, r0
 8005ed6:	e726      	b.n	8005d26 <_svfiprintf_r+0x2e>
 8005ed8:	ab05      	add	r3, sp, #20
 8005eda:	9300      	str	r3, [sp, #0]
 8005edc:	003a      	movs	r2, r7
 8005ede:	4b07      	ldr	r3, [pc, #28]	; (8005efc <_svfiprintf_r+0x204>)
 8005ee0:	0029      	movs	r1, r5
 8005ee2:	9802      	ldr	r0, [sp, #8]
 8005ee4:	f7fe fb3a 	bl	800455c <_printf_i>
 8005ee8:	e7ea      	b.n	8005ec0 <_svfiprintf_r+0x1c8>
 8005eea:	46c0      	nop			; (mov r8, r8)
 8005eec:	08006234 	.word	0x08006234
 8005ef0:	0800623a 	.word	0x0800623a
 8005ef4:	0800623e 	.word	0x0800623e
 8005ef8:	08003fe9 	.word	0x08003fe9
 8005efc:	08005c35 	.word	0x08005c35

08005f00 <_sbrk_r>:
 8005f00:	2300      	movs	r3, #0
 8005f02:	b570      	push	{r4, r5, r6, lr}
 8005f04:	4c06      	ldr	r4, [pc, #24]	; (8005f20 <_sbrk_r+0x20>)
 8005f06:	0005      	movs	r5, r0
 8005f08:	0008      	movs	r0, r1
 8005f0a:	6023      	str	r3, [r4, #0]
 8005f0c:	f7fd ff2c 	bl	8003d68 <_sbrk>
 8005f10:	1c43      	adds	r3, r0, #1
 8005f12:	d103      	bne.n	8005f1c <_sbrk_r+0x1c>
 8005f14:	6823      	ldr	r3, [r4, #0]
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d000      	beq.n	8005f1c <_sbrk_r+0x1c>
 8005f1a:	602b      	str	r3, [r5, #0]
 8005f1c:	bd70      	pop	{r4, r5, r6, pc}
 8005f1e:	46c0      	nop			; (mov r8, r8)
 8005f20:	200002e0 	.word	0x200002e0

08005f24 <__ascii_mbtowc>:
 8005f24:	b082      	sub	sp, #8
 8005f26:	2900      	cmp	r1, #0
 8005f28:	d100      	bne.n	8005f2c <__ascii_mbtowc+0x8>
 8005f2a:	a901      	add	r1, sp, #4
 8005f2c:	1e10      	subs	r0, r2, #0
 8005f2e:	d006      	beq.n	8005f3e <__ascii_mbtowc+0x1a>
 8005f30:	2b00      	cmp	r3, #0
 8005f32:	d006      	beq.n	8005f42 <__ascii_mbtowc+0x1e>
 8005f34:	7813      	ldrb	r3, [r2, #0]
 8005f36:	600b      	str	r3, [r1, #0]
 8005f38:	7810      	ldrb	r0, [r2, #0]
 8005f3a:	1e43      	subs	r3, r0, #1
 8005f3c:	4198      	sbcs	r0, r3
 8005f3e:	b002      	add	sp, #8
 8005f40:	4770      	bx	lr
 8005f42:	2002      	movs	r0, #2
 8005f44:	4240      	negs	r0, r0
 8005f46:	e7fa      	b.n	8005f3e <__ascii_mbtowc+0x1a>

08005f48 <memmove>:
 8005f48:	b510      	push	{r4, lr}
 8005f4a:	4288      	cmp	r0, r1
 8005f4c:	d902      	bls.n	8005f54 <memmove+0xc>
 8005f4e:	188b      	adds	r3, r1, r2
 8005f50:	4298      	cmp	r0, r3
 8005f52:	d308      	bcc.n	8005f66 <memmove+0x1e>
 8005f54:	2300      	movs	r3, #0
 8005f56:	429a      	cmp	r2, r3
 8005f58:	d007      	beq.n	8005f6a <memmove+0x22>
 8005f5a:	5ccc      	ldrb	r4, [r1, r3]
 8005f5c:	54c4      	strb	r4, [r0, r3]
 8005f5e:	3301      	adds	r3, #1
 8005f60:	e7f9      	b.n	8005f56 <memmove+0xe>
 8005f62:	5c8b      	ldrb	r3, [r1, r2]
 8005f64:	5483      	strb	r3, [r0, r2]
 8005f66:	3a01      	subs	r2, #1
 8005f68:	d2fb      	bcs.n	8005f62 <memmove+0x1a>
 8005f6a:	bd10      	pop	{r4, pc}

08005f6c <__malloc_lock>:
 8005f6c:	4770      	bx	lr

08005f6e <__malloc_unlock>:
 8005f6e:	4770      	bx	lr

08005f70 <_realloc_r>:
 8005f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005f72:	0007      	movs	r7, r0
 8005f74:	000d      	movs	r5, r1
 8005f76:	0016      	movs	r6, r2
 8005f78:	2900      	cmp	r1, #0
 8005f7a:	d105      	bne.n	8005f88 <_realloc_r+0x18>
 8005f7c:	0011      	movs	r1, r2
 8005f7e:	f7ff fdfb 	bl	8005b78 <_malloc_r>
 8005f82:	0004      	movs	r4, r0
 8005f84:	0020      	movs	r0, r4
 8005f86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005f88:	2a00      	cmp	r2, #0
 8005f8a:	d103      	bne.n	8005f94 <_realloc_r+0x24>
 8005f8c:	f7ff fdaa 	bl	8005ae4 <_free_r>
 8005f90:	0034      	movs	r4, r6
 8005f92:	e7f7      	b.n	8005f84 <_realloc_r+0x14>
 8005f94:	f000 f81e 	bl	8005fd4 <_malloc_usable_size_r>
 8005f98:	002c      	movs	r4, r5
 8005f9a:	4286      	cmp	r6, r0
 8005f9c:	d9f2      	bls.n	8005f84 <_realloc_r+0x14>
 8005f9e:	0031      	movs	r1, r6
 8005fa0:	0038      	movs	r0, r7
 8005fa2:	f7ff fde9 	bl	8005b78 <_malloc_r>
 8005fa6:	1e04      	subs	r4, r0, #0
 8005fa8:	d0ec      	beq.n	8005f84 <_realloc_r+0x14>
 8005faa:	0029      	movs	r1, r5
 8005fac:	0032      	movs	r2, r6
 8005fae:	f7ff faa0 	bl	80054f2 <memcpy>
 8005fb2:	0029      	movs	r1, r5
 8005fb4:	0038      	movs	r0, r7
 8005fb6:	f7ff fd95 	bl	8005ae4 <_free_r>
 8005fba:	e7e3      	b.n	8005f84 <_realloc_r+0x14>

08005fbc <__ascii_wctomb>:
 8005fbc:	1e0b      	subs	r3, r1, #0
 8005fbe:	d004      	beq.n	8005fca <__ascii_wctomb+0xe>
 8005fc0:	2aff      	cmp	r2, #255	; 0xff
 8005fc2:	d904      	bls.n	8005fce <__ascii_wctomb+0x12>
 8005fc4:	238a      	movs	r3, #138	; 0x8a
 8005fc6:	6003      	str	r3, [r0, #0]
 8005fc8:	3b8b      	subs	r3, #139	; 0x8b
 8005fca:	0018      	movs	r0, r3
 8005fcc:	4770      	bx	lr
 8005fce:	700a      	strb	r2, [r1, #0]
 8005fd0:	2301      	movs	r3, #1
 8005fd2:	e7fa      	b.n	8005fca <__ascii_wctomb+0xe>

08005fd4 <_malloc_usable_size_r>:
 8005fd4:	1f0b      	subs	r3, r1, #4
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	1f18      	subs	r0, r3, #4
 8005fda:	2b00      	cmp	r3, #0
 8005fdc:	da01      	bge.n	8005fe2 <_malloc_usable_size_r+0xe>
 8005fde:	580b      	ldr	r3, [r1, r0]
 8005fe0:	18c0      	adds	r0, r0, r3
 8005fe2:	4770      	bx	lr

08005fe4 <_init>:
 8005fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fe6:	46c0      	nop			; (mov r8, r8)
 8005fe8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005fea:	bc08      	pop	{r3}
 8005fec:	469e      	mov	lr, r3
 8005fee:	4770      	bx	lr

08005ff0 <_fini>:
 8005ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005ff2:	46c0      	nop			; (mov r8, r8)
 8005ff4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005ff6:	bc08      	pop	{r3}
 8005ff8:	469e      	mov	lr, r3
 8005ffa:	4770      	bx	lr
